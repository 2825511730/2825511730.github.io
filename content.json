{"meta":{"title":"公众号【C you again】","subtitle":"","description":"本站为个人博客,专注于IT技术分享,源码下载,公众号【C you again】资源大全,计算机类毕业设计、课程设计系统源码,JavaWeb入门级项目教程,PPT模板,简历模板,程序设计,编程语言,程序人生,Java,html,JavaScript,Mysql,Redis,SSM框架,SSH框架,MVC","author":"公众号：C you again","url":"https://cyouagain.cn","root":"/"},"pages":[{"title":"","date":"2020-10-02T03:55:05.339Z","updated":"2020-10-02T03:55:05.339Z","comments":true,"path":"about/index.html","permalink":"https://cyouagain.cn/about/index.html","excerpt":"","text":"关于页面正在开发中。。。"},{"title":"","date":"2020-10-02T04:04:17.281Z","updated":"2020-10-02T04:04:17.281Z","comments":true,"path":"404.html","permalink":"https://cyouagain.cn/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"所有分类","date":"2020-10-02T03:57:45.084Z","updated":"2020-10-02T03:57:45.084Z","comments":true,"path":"categories/index.html","permalink":"https://cyouagain.cn/categories/index.html","excerpt":"","text":""},{"title":"","date":"2021-04-02T01:38:57.036Z","updated":"2021-04-02T01:38:57.036Z","comments":true,"path":"gzhDataBase/gzhDB.json","permalink":"https://cyouagain.cn/gzhDataBase/gzhDB.json","excerpt":"","text":"{\"title\":\"IDEA激活码 2021.04.02\",\"mainTitle\":\"idea激活码2021,idea激活码2020,IDEA激活码获取_更新于2021-04-02\",\"yanZheng\":\"cya\",\"zghData\":[{\"prefix\":{\"content\":\"C语言经典编程>>>\",\"style\":\"color:red;\"},\"title\":\"习题2-2 阶梯电价 (15分)\",\"url\":\"https://mp.weixin.qq.com/s/9pxFbyXJCm6w5MOeSM3hPA\",\"suffix\":{\"content\":\"(发表于:2021.03.17\",\"style\":\"color:blue;\"}},{\"prefix\":{\"content\":\"站长推荐，不看后悔系列>>>\",\"style\":\"color:red;\"},\"title\":\"习题2-1 求整数均值 (10分)\",\"url\":\"https://mp.weixin.qq.com/s/ZNARbcydpUsahd63goeg9Q\",\"suffix\":{\"content\":\"(发表于:2021.03.10\",\"style\":\"color:green;\"}},{\"prefix\":{\"content\":\"最新发布，点我查看>>>\",\"style\":\"color:red;\"},\"title\":\"练习2-18 求组合数 (15分)\",\"url\":\"https://mp.weixin.qq.com/s/uOLskmmAHecyxQIcgPvW-w\",\"suffix\":{\"content\":\"(发表于:2021.03.10)\",\"style\":\"color:green;\"}},{\"prefix\":{\"content\":\"最新发布，点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"练习2-17 生成3的乘方表 (15分)\",\"url\":\"https://mp.weixin.qq.com/s/Lvs73E6PSZY-HTm22fGP0A\",\"suffix\":{\"content\":\"(发表于:2021.03.08)\",\"style\":\"color:green;\"}},{\"prefix\":{\"content\":\"最新发布，点我查看>>>\",\"style\":\"color:red;\"},\"title\":\"练习2-15 求简单交错序列前N项和 (15分)\",\"url\":\"https://mp.weixin.qq.com/s/6bfOci0YH29_wEMMWg6ULg\",\"suffix\":{\"content\":\"(发表于:2021.03.05)\",\"style\":\"color:red;\"}},{\"prefix\":{\"content\":\"本周热门，点击阅读>>>\",\"style\":\"color:blue;\"},\"title\":\"练习2-14 求奇数分之一序列前N项和 (15分)\",\"url\":\"https://mp.weixin.qq.com/s/XKb6zAxUFbKEr59u_G80Qw\",\"suffix\":{\"content\":\"(发表于:2021.03.05)\",\"style\":\"color:red;\"}},{\"prefix\":{\"content\":\"最新发布，点我查看>>>\",\"style\":\"color:red;\"},\"title\":\"Java开发岗面试题--基础篇（二）\",\"url\":\"https://mp.weixin.qq.com/s/cBt4KEIL9311fzviH9uk3w\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"color:red;\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"Java开发岗面试题--基础篇（一）\",\"url\":\"https://mp.weixin.qq.com/s/0-XCXqsL7fuexrVtad5ddg\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"贪吃蛇的使命 | 零基础入门贪吃蛇游戏（附源码、演示地址）\",\"url\":\"https://mp.weixin.qq.com/s/OlLDtAlCGnxs7fMIWfSmvg\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"求解最长递增子序列（LIS） | 动态规划（DP）+ 二分法\",\"url\":\"https://mp.weixin.qq.com/s/KFrGHC_bYqxzSK7lugB3RQ\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"面试官：如何在Integer类型的ArrayList中同时添加String、Character、Boolean等类型的数据？\",\"url\":\"https://mp.weixin.qq.com/s/IbPzNcyUkZ-7TGIet75BAw\",\"suffix\":{\"content\":\"(2020.08.18 阅读:10W+)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"面试官：手撕十大排序算法，你会几种？\",\"url\":\"https://mp.weixin.qq.com/s/VdZ_CMS-RQszFYfoZ_zYqQ\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"用x种方式求第n项斐波那契数，99%的人只会第一种\",\"url\":\"https://mp.weixin.qq.com/s/DvDm39MxVgnJSHMr-XT5bA\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"深入浅出理解动态规划（二） | 最优子结构\",\"url\":\"https://mp.weixin.qq.com/s/i8L7F4nPk8CmXNxNhDaOXQ\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"深入浅出理解动态规划（一） | 交叠子问题\",\"url\":\"https://mp.weixin.qq.com/s/21_hLlXp_gjWJHDUeR7Esg\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"计算机网络中这些高频考题，你还在死记硬背吗？（三）\",\"url\":\"https://mp.weixin.qq.com/s/tYe1VBLhsHRqvlvBBFd_DQ\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"计算机网络中这些高频考题，你还在死记硬背吗？（二）\",\"url\":\"https://mp.weixin.qq.com/s/SnxBLctCDgtC5olwuRtmKA\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"计算机网络中这些高频考题，你还在死记硬背吗？（一）\",\"url\":\"https://mp.weixin.qq.com/s/6kZ3cuuSsFVh_VQM6eK6tA\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}},{\"prefix\":{\"content\":\"点我查看>>>\",\"style\":\"color:green;\"},\"title\":\"基于web的图书管理系统设计与实现\",\"url\":\"https://mp.weixin.qq.com/s/Asv4WjEit5RBIYFV9SInaA\",\"suffix\":{\"content\":\"(发表于:2020.08.18)\",\"style\":\"\"}}]}"},{"title":"","date":"2020-10-02T03:58:48.406Z","updated":"2020-10-02T03:58:48.406Z","comments":true,"path":"mylist/index.html","permalink":"https://cyouagain.cn/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-10-02T03:58:28.159Z","updated":"2020-10-02T03:58:28.159Z","comments":true,"path":"tags/index.html","permalink":"https://cyouagain.cn/tags/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2020-10-02T03:59:12.213Z","updated":"2020-10-02T03:59:12.213Z","comments":true,"path":"friends/index.html","permalink":"https://cyouagain.cn/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"","date":"2020-10-02T07:41:15.069Z","updated":"2020-10-02T07:41:15.069Z","comments":true,"path":"contributors/index.html","permalink":"https://cyouagain.cn/contributors/index.html","excerpt":"","text":"社区正在开发中。。。。 关注公众号【C you again】，回复”粉丝“进群，与技术大佬交流！"}],"posts":[{"title":"IDEA破解激活教程详细版，激活到2089年","slug":"IDEA破解激活教程详细版，激活到2089年","date":"2021-04-12T01:29:51.413Z","updated":"2021-04-12T01:32:57.902Z","comments":true,"path":"posts/33867.html","link":"","permalink":"https://cyouagain.cn/posts/33867.html","excerpt":"","text":"@[toc] idea可谓是程序猿的福音，它功能强大，极大地提高了开发效率。但也经常出现激活码失效导致开发工具无法使用的情况，在这种情况下我们只能选择重新安装后免费试用30天或者使用激活码重新激活两种方式继续使用开发工具。这两种方式都存在使用不久后又过期的情况，我们又得重复上面的步骤，非常麻烦。 作者也是被激活码经常失效逼得苦不堪言，于是在网上找了很多激活教程，总结了以下这种激活方式，仅供大家学习。 值得留意的是，如果你以前使用过其他破解教程，请卸载idea后使用下面教程中提供的版本。 如果你不想使用此方式激活，可以在作者的公众号【C you again】回复“idea”获取激活码直接激活。下面，我们一起开启idea开发工具的激活之旅吧！ 01 下载相关文件这里包含了本教程用到的所有文件。具体如下： ACTIVATION_CODE.txt：激活码文件 ideaIU-2020.1.exe：IntelliJ IDEA应用程序 jetbrains-agent.jar：破解补丁文件 下载地址：微信关注公众号【C you again】，回复 “1024” 获取下载地址。 02 安装开发工具1、相关文件下载并解压完成后，找到 ideaIU-2020.1.exe，双击安装。出现以下界面后点击 Next。 2、自定义安装路径（也可以使用默认的安装路径），选择完安装路径后，点击 Next。 3、如下图所示，勾选相关配置后继续 Next。 注意的是，勾选下图中的配置时，需要查看本机的系统类型，如果是64bit操作系统就选择64-bit launcher，如果是32bit操作系统就选择32-bit launcher。 查看系统类型方法：我的电脑-&gt;属性 4、出现下图后选择JetBrains，然后点击Install。 5、耐心等待安装完成。 6、安装完成后，点击 Finish。 到这里，IDEA开发工具安装完成了。 03 激活1、点击桌面上的idea图标启动开发工具 2、启动后会出现如下界面，选择 Evaluate for free 后点击 Evaluate（这里先选择30天试用）。 3、完成步骤二后会出现如下界面，点击 Create New Project 新建项目。或者通过 File-&gt;New-&gt;Project 新建项目。 这里随便新建一个项目就可以了。 以下图为例，新建普通的Java项目。 4、将下载好的 jetbrains-agent.jar 拖进 IDEA 中，出现如下图所示提示，点击 Restart。 5、重启后如下图所示，激活方式选择：Activation code，点击为 IDEA 安装，弹出框点击是。 6、之后点击 Help-&gt;Register。 7、选择 Activation code，将 ACTIVATION_CODE.txt 文件中的激活码复制后粘贴到下面的框中。复制之后点击 Activate观察有效日期。 至此，idea激活教程就结束啦，你就可以安心做开发了。查看更多IT教程请关注微信公众号【C you again】，这里有IT技术文章、C语言经典编程题、计算机类毕业设计源码等一系列干货等你来学习。","categories":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/categories/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"}],"tags":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"},{"name":"IDEA破解教程","slug":"IDEA破解教程","permalink":"https://cyouagain.cn/tags/IDEA%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/"}]},{"title":"idea激活码_更新2021.04.01","slug":"idea激活码_更新2021.04.01","date":"2021-04-01T11:40:48.700Z","updated":"2021-04-01T11:45:25.557Z","comments":true,"path":"posts/32563.html","link":"","permalink":"https://cyouagain.cn/posts/32563.html","excerpt":"","text":"推荐阅读：【C you again】及时更新可用的激活码，建议 关注+星标，方便下次获取！ 如果下面的激活码失效，请在公众号【C you again】私信，及时更新！！为避免格式错误，请先复制到记事本，再从记事本复制激活！出现 key is invalid 错误需要重装idea。 如果第一个不行就换第二个！！ 2021最新激活码一：D0JGPYQZ4H-eyJsaWNlbnNlSWQiOiJEMEpHUFlRWjRIIiwibGljZW5zZWVOYW1lIjoi5rC45LmF5r+A5rS7IGFqaWh1b8K3Y29tIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IiIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0MiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0YiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNJIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQUyIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQR08iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMTAzMzFQUEFNMDAwMDA1IiwiaGFzaCI6IjIzNDg3NTExLzA6LTEwNTk0MTg1MjUiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-FSPT/nC65G2Sg1+0SpCEiTDmK6B+ZjkO5luAwGqtHwVfPelgwqH0mvc0IelrF/gFzkJHMS/ay/Ov7+4wZuTx+pRnjjlKTklKFnOcJrLIu5Jjg295rLC72F58Vm5Tx8mypGaRTEYZ5zV1syT1rZooYFQIqcQgLuiflw2ecBfesSeq11oZb8bEnHS95eHmN8OEWQ8u6XYla54fnfs0GLfhvqrOYQJCJvHgR0p0jxf5qtfY27p3ehoq5qYRb0xRM9uV7kcATqtqmhGtYz8PB3PUfCQX2dd1fzhpH6K2oD9IAUka2zaZtg2hZ7BSeX2Qz2vmRvQl7eHyLFM9uStUlD2TLQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD 2021最新激活码二：D0JGPYQZ4H-eyJsaWNlbnNlSWQiOiJEMEpHUFlRWjRIIiwibGljZW5zZWVOYW1lIjoi5rC45LmF5r+A5rS7IGFqaWh1b8K3Y29tIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IiIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUlNDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifSx7ImNvZGUiOiJEUCIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IlBXUyIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IlBTSSIsInBhaWRVcFRvIjoiMjAyMS0wNC0yOSJ9LHsiY29kZSI6IlBDV01QIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUFBTIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUEdPIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUFJCIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUFNXIiwicGFpZFVwVG8iOiIyMDIxLTA0LTI5In0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMjkifV0sImhhc2giOiIyMzQ4NzUxMS8wOi0xMDU5NDE4NTI1IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-aCLvI4tYGS23HO/nDE8dlsAahbRtg3mWlP8KsMb3bBk80KVxscA70LszDjIY1Sr9m8RzE4XOgA5dKUOUcKAfPaCm66TljnkyDotbwrOghGWWup1rZ+S65MeY6rtnqnuTSL2HSV9qRpy0kKqtt5L1tWe8IWRo8cOFzFoy9/96Ji389F06satyGGAYGDSMGl92SecDDMf9N/NWuVrNRMBLe1h9jsciuwZJ2kQEP4Pzoq2yU57XyKIAfY9H8Ll9/tSWC8EyVW8H9HkR+cOo+l5Mywgn7E0RKr4aiyAzL0CBvh+7uy1bpEwVojjh8OzlZ8u4loAPKSF4ekZzevZ34V7Q5w==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD 关于作者 作者： C you again，从事软件开发 努力在IT搬砖路上的技术小白 公众号： 【**C you again**】，分享计算机类毕业设计源码、IT技术文章、游戏源码、网页模板、程序人生等等 关于转载：欢迎转载博主文章，转载时标明出处 求赞环节：创作不易，记得 点赞+评论+转发 谢谢你一路支持","categories":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/categories/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"}],"tags":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"},{"name":"IDEA激活教程","slug":"IDEA激活教程","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"}]},{"title":"最新版 IDEA激活码_idea激活码2021 免费提取_更新于2021-03-13","slug":"最新版 IDEA激活码_idea激活码2021 免费提取_更新于2021-03-13","date":"2021-03-13T15:57:41.750Z","updated":"2021-03-13T16:00:25.703Z","comments":true,"path":"posts/45540.html","link":"","permalink":"https://cyouagain.cn/posts/45540.html","excerpt":"","text":"如果下面的激活码失效，请点击：这里查看最新，idea激活码2021最新版IDEA激活码获取说明： 本网站IDEA激活码每日更新，真实有效，若发现失效或不能使用的情况，请在公众号【C you again】私信联系博主更新。 公众号【C you again】回复“激活码”获取最新IDEA激活码。 如激活码失效请在公众号【C you again】私信，及时更新！ 建议将此网站（快捷键：ctrl+D）收藏，方便下次使用。 激活需注意： 输入激活码后仍无法正常使用，请尝试重启IDE。 为避免格式错误，请先复制到记事本，再从记事本复制激活！ 出现 key is invalid 错误需要重装idea。 2021最新激活码：A75XLLFBQA-eyJsaWNlbnNlSWQiOiJBNzVYTExGQlFBIiwibGljZW5zZWVOYW1lIjoiQ2hpbmEg5Lit5Zu9IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IiIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU1YiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0YiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiQUMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUEdPIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQUyIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUEMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFJCIiwicGFpZFVwVG8iOiIyMDIxLTA0LTExIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTVyIsInBhaWRVcFRvIjoiMjAyMS0wNC0xMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU0kiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiRFAiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMTEiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMTAzMTJQUEFNMDAwMDA1IiwiaGFzaCI6IjIzMTcxNTk1LzA6LTE3MzUzMTg3NjEiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-NMymAPFxMaX31fefaD0Gb0I9nq6CZrgXxiz/oqz9qjUWiy7/zg1CHFkI9ELf97jQ1RbDryfozmUmPlKqApuoxBmFeFsbwTlvnKvx8opnlQEIXQbkKWlk+ntNzem8GCIJMDxgoIWX7GCkwHlNDTe5q+2cZI/YhE5u29hdjpr6OP4VZMcOh+qm7xs12kYR98RMbV1epBWYqdTtPVP5Ceq0DJzE6WPeivRPZg6hL8HWlcUFR4QpKtpI+2NX1dmokwZ1BsvpJnqlUMqsY5kwlqmK9/zkNFf2EPCA49xd6eDfGk6w5rQ5XasMkp9AH1CXZdLS5TVYKhboaNd4kyDJi9peRQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD 作者： C you again，从事软件开发 努力在IT搬砖路上的技术小白公众号： 【**C you again】，分享计算机类毕业设计源码、IT技术文章、游戏源码、网页模板、程序人生等等。公众号回复 【粉丝】进博主技术群，与大佬交流，领取干货学习资料**关于转载：欢迎转载博主文章，转载时表明出处求赞环节：创作不易，记得点赞+评论+转发 谢谢你一路支持","categories":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/categories/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"}],"tags":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"},{"name":"IDEA激活教程","slug":"IDEA激活教程","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"}]},{"title":"2021最新版IDEA激活码分享！！亲测可用","slug":"2021最新版IDEA激活码分享！！亲测可用","date":"2021-03-04T01:09:42.976Z","updated":"2021-03-13T02:04:40.343Z","comments":true,"path":"posts/20962.html","link":"","permalink":"https://cyouagain.cn/posts/20962.html","excerpt":"","text":"今日推荐阅读：练习2-14 求奇数分之一序列前N项和 (15分) 如果下面的激活码失效，请在公众号【C you again】回复“激活码”获取！为避免格式错误，请先复制到记事本，再从记事本复制激活！出现 key is invalid 错误需要重装idea。 【C you again】及时更新可用的激活码，建议 关注+星标，方便下次获取！ 如果第一个不行就换第二个！！ 2021最新激活码一：K4JCAI5201-eyJsaWNlbnNlSWQiOiJLNEpDQUk1MjAxIiwibGljZW5zZWVOYW1lIjoibG9vayBkaXYiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlJTQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiUlNGIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEifSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBXUyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBHTyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBQUyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBQQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBTVyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IlBTSSIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSJ9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIn0seyJjb2RlIjoiUlMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEifV0sImhhc2giOiIyMjk3NTY0MS8wOi03NTYxMzkxODgiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-OYvaah/k3dycqDny6CefK28kaBdEmd36WMbNQMYsiCGSG5hH8rO4OOYxSY0L1G/Uljvo6sIBm+bgZCmUl0vtdS5TEtv9lMSHc+VrBYShE5ttlptVGNh0kQbjNxq8llSPQSG29mDzbI4xr3MHCY1sbPSbJ0omBHMqq4TKPd/e+TNhoy29iUe/Dssxa9Vf+S1OatgQ69Eh2NQIXI+hxl8xpBwVuqFGgVg+Ln/BI+A6hHrDUVtiQpqm9fFpG++NIqfuGCXePURo6dXP4m2Z2pjHwMS7tqgfBDE+qd7h2fUJijfrQ64qZu1NRGp74AemD8S/nZk8aTD8KblDkZuIzK+LAg==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD 2021最新激活码二：0OVVL3JL85-eyJsaWNlbnNlSWQiOiIwT1ZWTDNKTDg1IiwibGljZW5zZWVOYW1lIjoi5YWs5LyX5Y+3IOaZuuWwj+mxvCIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IkRDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJJSSIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSUzAiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTQyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNGIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkFDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQREIiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFdTIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUFMiLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBSQiIsInBhaWRVcFRvIjoiMjAyMS0wNC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJwYWlkVXBUbyI6IjIwMjEtMDQtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNJIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJTIiwicGFpZFVwVG8iOiIyMDIxLTA0LTAxIiwiZXh0ZW5kZWQiOnRydWV9XSwibWV0YWRhdGEiOiIwMTIwMjEwMzAyUFBBTTAwMDAwNSIsImhhc2giOiIyMjk3NTY0Mi8wOjgwMTkxNjAxOCIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-JQqBP2m7qKNZ/YK4axjD8rR/HUTA9QF87ssI6xuH0E3oMiK9+yGAD7s7lJ9rDM9I0x9BtNsgU7q2QJkblAIAcVSb+uSP1UDqb4OlNa5z5vBvDR+0Vvmi5aCP231Cq+IYdNSi8O5dZc1Juoim4UJVoaXteF8M2zwGlPxywvED6dwuzqaL8C9oNa0hkLS1ddBn8IN9u9buGF3AP3RsCp+f+XEeUfbx3TuhPTerWIVbKnFUeWyYTYCxw1Tdk5C6F4ldp1tnmiA4JziIcchNinptxrILlKYMpAzVZdCjXp4Iae8MnUSQxp5/5xKfQ0OPUn+T2r55y3mJHucumVjMOrnjGQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD 关于作者 作者： C you again，从事软件开发 努力在IT搬砖路上的技术小白 公众号： 【C you again】，分享计算机类毕业设计源码、IT技术文章、游戏源码、网页模板、程序人生等等 关于转载：欢迎转载博主文章，转载时标明出处 求赞环节：创作不易，记得 点赞+评论+转发 谢谢你一路支持","categories":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/categories/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"}],"tags":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"},{"name":"IDEA激活教程","slug":"IDEA激活教程","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"}]},{"title":"练习2-3 输出倒三角图案 (5分)","slug":"练习2-1 Programming in C is fun! - 副本","date":"2021-02-18T06:11:54.832Z","updated":"2021-02-18T06:12:30.661Z","comments":true,"path":"posts/9348.html","link":"","permalink":"https://cyouagain.cn/posts/9348.html","excerpt":"","text":"公众号【C you again】回复 “浙大版C语言” 查看每道题目详细实现思路 公众号【C you again】回复 “编程交流群” 进C/C++/Java编程题交流、问题解答群 本题要求编写程序，输出指定的由“*”组成的倒三角图案。 输入格式: 本题目没有输入。 输出格式: 按照下列格式输出由“*”组成的倒三角图案。 * * * *&nbsp;* * *&nbsp;&nbsp;* *&nbsp;&nbsp;&nbsp;* 代码: 12345678910#include&lt;stdio.h&gt;int main()&#123; printf(&quot;* * * *\\n&quot;); printf(&quot; * * *\\n&quot;); printf(&quot; * *\\n&quot;); printf(&quot; *\\n&quot;); return 0;&#125; 作者： C you again，从事软件开发 努力在IT搬砖路上的技术小白公众号： 【C you again】，分享计算机类毕业设计源码、IT技术文章、游戏源码、网页模板、程序人生等等。公众号回复 【 粉丝 】进博主技术群，与大佬交流，领取干货学习资料关于转载：欢迎转载博主文章，转载时表明出处求赞环节：创作不易，记得 点赞+评论+转发 谢谢你一路支持","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"https://cyouagain.cn/categories/%E6%B5%99%E5%A4%A7%E7%89%88%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"https://cyouagain.cn/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"程序设计","slug":"程序设计","permalink":"https://cyouagain.cn/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"},{"name":"编程","slug":"编程","permalink":"https://cyouagain.cn/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"练习2-3 输出倒三角图案 (5分)","slug":"练习2-3 输出倒三角图案 (5分)","date":"2021-02-18T06:03:57.267Z","updated":"2021-02-18T06:13:49.504Z","comments":true,"path":"posts/9348.html","link":"","permalink":"https://cyouagain.cn/posts/9348.html","excerpt":"","text":"公众号【C you again】回复 “浙大版C语言” 查看每道题目详细实现思路 公众号【C you again】回复 “编程交流群” 进C/C++/Java编程题交流、问题解答群 本题要求编写程序，输出指定的由“*”组成的倒三角图案。 输入格式: 本题目没有输入。 输出格式: 按照下列格式输出由“*”组成的倒三角图案。 * * * *&nbsp;* * *&nbsp;&nbsp;* *&nbsp;&nbsp;&nbsp;* 代码: 12345678910#include&lt;stdio.h&gt;int main()&#123; printf(&quot;* * * *\\n&quot;); printf(&quot; * * *\\n&quot;); printf(&quot; * *\\n&quot;); printf(&quot; *\\n&quot;); return 0;&#125; 作者： C you again，从事软件开发 努力在IT搬砖路上的技术小白公众号： 【C you again】，分享计算机类毕业设计源码、IT技术文章、游戏源码、网页模板、程序人生等等。公众号回复 【 粉丝 】进博主技术群，与大佬交流，领取干货学习资料关于转载：欢迎转载博主文章，转载时表明出处求赞环节：创作不易，记得 点赞+评论+转发 谢谢你一路支持","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"https://cyouagain.cn/categories/%E6%B5%99%E5%A4%A7%E7%89%88%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"https://cyouagain.cn/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"程序设计","slug":"程序设计","permalink":"https://cyouagain.cn/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"},{"name":"编程","slug":"编程","permalink":"https://cyouagain.cn/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"练习2-1 Programming in C is fun!","slug":"练习2-1 Programming in C is fun!","date":"2021-02-16T11:03:19.839Z","updated":"2021-02-18T06:03:44.185Z","comments":true,"path":"posts/62324.html","link":"","permalink":"https://cyouagain.cn/posts/62324.html","excerpt":"","text":"本题要求编写程序，输出一个短句“Programming in C is fun!”。 输入格式: 本题目没有输入。 输出格式: 在一行中输出短句“Programming in C is fun!”。 代码： 12345#include&lt;stdio.h&gt;int main()&#123; printf(&quot;Programming in C is fun!\\n&quot;); &#125; 作者： C you again，从事软件开发 努力在IT搬砖路上的技术小白公众号： 【C you again】，分享计算机类毕业设计源码、IT技术文章、游戏源码、网页模板、程序人生等等。公众号回复 【 粉丝 】进博主技术群，与大佬交流，领取干货学习资料关于转载：欢迎转载博主文章，转载时表明出处求赞环节：创作不易，记得 点赞+评论+转发 谢谢你一路支持","categories":[{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"https://cyouagain.cn/categories/%E6%B5%99%E5%A4%A7%E7%89%88%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"https://cyouagain.cn/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"程序设计","slug":"程序设计","permalink":"https://cyouagain.cn/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"},{"name":"编程","slug":"编程","permalink":"https://cyouagain.cn/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"网站、网页资源快速收录百度API提交助手","slug":"网站、网页资源快速收录百度API提交助手","date":"2020-10-05T15:32:02.698Z","updated":"2020-10-05T15:37:32.152Z","comments":true,"path":"posts/17978.html","link":"","permalink":"https://cyouagain.cn/posts/17978.html","excerpt":"","text":"百度网页收录API提交助手扫码体验： 关于小程序网站运营少不了SEO，其中网站资源主动提交是搜索引擎优化中非常关键的一步。百度作为全球最大的中文搜索引擎，拥有庞大的资源网络和使用人群。 本小程序就是对百度API资源提交方式做了处理和封装，让使用者专注于做网站优化，提高工作效率。具有操作简单、打开即用等特点。 网页收录API提交助手只作为小程序入门项目，仅供学习参考，无盈利性质。 功能划分与说明 如上图所示，将网页收录API提交助手划分为6个区域，其中： 1~3号属于信息录入区，用于填写程序运行的必要支撑数据 4号为程序控制区域，用来控制小程序运行、数据更新等 5号为使用说明区，可以查看小程序的使用信息 6号为结果展示区，输出程序执行结果 百度网页收录API提交助手使用说明第一步：获取site和token值 浏览器搜索“百度资源平台”或直接输入“https://ziyuan.baidu.com/”打开并登陆网站 选择 用户中心-&gt;站点管理-&gt;添加网站-&gt;完成验证。 完成验证后点击左侧栏的 普通收录 看到如下界面： 从上图中可以看到： site为： https://dorm.cyouagain.cn token： YYYYYYYYYYY 说明：这里的token值只为做演示，为无效值。 第二步： 将上述信息填写到小程序 第三步：查看结果 以上就是所有教程了，因本人技术有限，难免会出现一些错误，欢迎指正！任何问题请在公众号【C you again】后台私信。","categories":[{"name":"IT技术圈","slug":"IT技术圈","permalink":"https://cyouagain.cn/categories/IT%E6%8A%80%E6%9C%AF%E5%9C%88/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"SEO网站优化","slug":"SEO网站优化","permalink":"https://cyouagain.cn/tags/SEO%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/"}]},{"title":"图书管理系统设计与实现—看这篇就够了","slug":"图书管理系统设计与实现—看这篇就够了","date":"2020-10-02T07:47:56.648Z","updated":"2020-10-02T14:43:51.421Z","comments":true,"path":"posts/3700.html","link":"","permalink":"https://cyouagain.cn/posts/3700.html","excerpt":"","text":"图书管理系统设计与实现 图书馆人员结构复杂，人员数量有限，涉及方面很广，如果还使用手工操作处理图书借阅问题，工作将非常繁琐，需要大量的人力、物理、财力，极大的浪费了资源，对于图书管理人员来说，图书馆管理包括图书信息管理、图书类别管理、借阅信息管理、管理员信息管理等等。而这些项目在过去靠手工操作，需要手工记录这些事情，不但麻烦，还经常出错，给广大用户带来很多不便，因此，开发这样一套图书馆管理系统软件。让管理员方便的管理图书及用户信息，方便用户查找图书。 1、本课程设计的目的（1）掌握企业级应用系统的基本开发流程；（2）培养开发者掌握应用系统设计的基本思路和方法；（3）培养开发者分析、解决问题的能力； 2、系统要实现的功能概述（1）用户登录。管理员或会员根据用户名和密码进行身份验证登录系统。（2）图书管理。根据图书编号、图书名称查询图书基本信息添加、修改、删除图书。（3）读者管理。根据账号、姓名查询读者基本信息。添加、修改、删除读者信息。（4）图书分类管理。根据分类名称查询图书分类信息。添加、修改、删除图书分类。（5）图书借阅。展示所有正在借阅图书的信息。（6）图书归还。展示所有已归还图书的信息。（7）修改和查询个人信息。 3、实现平台及技术（1）JAVA语言（2）MYSQL数据库（3）WINDOWS 10操作系统（4）JAVAEE 技术（5）Servlet技术（6）Eclipse工具（7）Html、css、JavaScript 4、需求分析 &nbsp;&nbsp;&nbsp;&nbsp;系统的主要目的是实现一个图书管理系统。系统有2类用户分别为管理员、 读者会员。管理员经口令认证进人系统后，管理员可完成维护系统的功能，包括管理图书和管理会员。读者会员则完成查询图书、修改个人资料、查询个人借阅信息、归还借阅图书的功能，工作完成后可以退出系统。 5、系统功能模块划分5.1 系统总体功能模块划分 5.2 用户登录模块&nbsp;&nbsp;&nbsp;&nbsp;当用普通用户输入用户名和密码后，进行验证，如果用户名和密码其中有一个不正确，则不能登录，并有相应的提示，如果用户没有账号，可以在登录页面进行注册，普通用户可以进行个人资料的查询、修改和修改密码，普通用户可以查询图书信息并借阅和退还，在首页面会展示图书借阅信息和借阅历史信息。 &nbsp;&nbsp;&nbsp;&nbsp;当用管理员输入用户名和密码后，进行验证，如果用户名和密码其中有一个不正确，则不能登录，并有相应的提示，管理员可以进行个人资料的查询、修改和修改密码，管理员可以对图书信息，读者信息，借阅信息进行查看和管理，对图书进行分类 5.3 图书信息管理模块&nbsp;&nbsp;&nbsp;&nbsp;管理员对图书的数量，图书号，图书类型，图书名称等进行修改、删除管理，如果普通用户在线借书，图书总数会相应减少。 5.4 读者管理模块&nbsp;&nbsp;&nbsp;&nbsp; 管理员对读者信息可以进行进行修改、删除，并且可以主动添加新用户，该模块显示用户借阅天数，天数会自动变化，管理员可以在线监控读者借阅天数，如果到期未还者，账号则不能登录。 5.5 图书分类管理模块&nbsp;&nbsp;&nbsp;&nbsp; 管理员在线对图书进行管理，对图书分类进行增加，修改，删除操作。 5.6 图书借阅信息模块&nbsp;&nbsp;&nbsp;&nbsp; 管理员可以在线管理借阅信息，可以主动帮读者还书。 5.7 图书归还信息管理模块&nbsp;&nbsp;&nbsp;&nbsp; 显示归还图书的详细信息。 5.8 图书查询模块&nbsp;&nbsp;&nbsp;&nbsp; 用户访问图书查询模块时显示当前可以借阅图书，有按图书名称查询图书信息的功能，可以进行借书操作。 5.9 图书借阅信息模块&nbsp;&nbsp;&nbsp;&nbsp; 显示当前登录用户借阅的所有图书，以及各个图书的编号，图书名称，借阅日期，还书日期，读者账号，读者名称信息。登录用户可以进行还书操作，还书是否成功有相应的提示。 5.10 借阅历史模块&nbsp;&nbsp;&nbsp;&nbsp; 显示当前登录用户的图书借阅记录。 6、数据库设计6.1 数据库的 E-R 图Admin(用户)表 E-R 图Book(图书)表 E-R 图BookType(图书类型)表 E-R 图History(历史)表 E-R 图 6.2 数据库数据结构设计&nbsp;&nbsp;&nbsp;&nbsp;数据库采用的是的mysql数据库，系统主要需要维护4张数据表： 用户表信息（admin）：图书表信息（book）：图书类型表信息（bookType）：图书历史表信息（history）： 7、系统详细设计和实现7.1 用户登录&nbsp;&nbsp;&nbsp;&nbsp;用户登录主要是在登陆窗体中实现身份验证。用户通过输入用户名和密码，进入图 5-1，判别用户名是否存在和密码是否正确。通过系统验证证后才能进入主界面；验证失败，则跳转登陆界面返回错误信息，如登陆账号为空、登陆密码为空、用户名和密码不匹配等并请重新输入。此登陆页面图书管理员和普通用户进入时一样的，通过查询数据库status状态来判断用户属于哪一种，从而进行不同的跳转。主要代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657package com.rain.servlet;import java.io.IOException;import java.io.PrintWriter;import javax.servlet.RequestDispatcher;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import javax.websocket.Session;import com.rain.bean.AdminBean;import com.rain.dao.AdminDao;@WebServlet(&quot;/LoginServlet&quot;)public class LoginServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; public LoginServlet() &#123; super(); &#125;Protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException&#123;&#125; protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; //登录的判断 PrintWriter out = response.getWriter(); request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); //获取账号和密码 String username = request.getParameter(&quot;username&quot;); String password = request.getParameter(&quot;password&quot;); AdminDao userdao = new AdminDao(); //对账号和密码进行判断 boolean result = userdao.Login_verify(username, password); HttpSession session = request.getSession(); //判断输入正确 if (result) &#123; AdminBean adminbean = new AdminBean(); AdminDao admindao = new AdminDao(); //更加账号和密码查找出读者的信息 adminbean = admindao.getAdminInfo(username, password); //将aid存入session中 session.setAttribute(&quot;aid&quot;, &quot;&quot; + adminbean.getAid()); //设置session的失效时间 session.setMaxInactiveInterval(6000); //根据status的值来判断是管理员，还是读者，status=1为读者 if (adminbean.getStatus() == 1) &#123; response.sendRedirect(&quot;/books/index2.jsp&quot;); &#125; else &#123; response.sendRedirect(&quot;/books/admin.jsp&quot;); &#125; &#125; else &#123; //没有找到对应的账号和密码，返回重新登录 session.setAttribute(&quot;state&quot;, &quot;密码错误&quot;); response.sendRedirect(&quot;/books/login.jsp&quot;); &#125; &#125;&#125; 7.2 图书查询&nbsp;&nbsp;&nbsp;&nbsp;管理员可以通过根据图书号 、图书名称，作者名称，出版社等查询图书信息。主要代码： 123456789101112131415161718192021222324252627282930313233343536373839404142package com.rain.servlet;import java.io.IOException;import java.util.ArrayList;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.rain.bean.BookBean;import com.rain.dao.BookDao;@WebServlet(&quot;/selectServlet&quot;)public class selectServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; public selectServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; &#125; protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); //因为在管理员界面和读者界面都有查找功能，为了将查找的结果返回正确的页面，设置了tip，tip=1表示管理员界面 int tip = Integer.parseInt(request.getParameter(&quot;tip&quot;)); String name = request.getParameter(&quot;name&quot;); BookDao bookdao = new BookDao(); ArrayList&lt;BookBean&gt; data = bookdao.getLikeList(name); //将获取的结果存入请求中 request.setAttribute(&quot;data&quot;, data); String url = &quot;&quot;; //转发不同的界面 if (tip == 1) &#123; url = response.encodeURL(&quot;admin_book.jsp&quot;); &#125; else &#123; url = response.encodeURL(&quot;select.jsp&quot;); &#125; //将请求转发 request.getRequestDispatcher(url).forward(request, response); &#125;&#125; 7.3 添加图书主要代码： 1234567891011121314151617181920212223242526272829303132333435package com.rain.servlet;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.rain.dao.BookDao;@WebServlet(&quot;/AddBookServlet&quot;)public class AddBookServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; public AddBookServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; &#125; protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; //设置编码类型 request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); //获取要添加图书的信息 String card = request.getParameter(&quot;card&quot;); String name = request.getParameter(&quot;name&quot;); String type = request.getParameter(&quot;type&quot;); String autho = request.getParameter(&quot;autho&quot;); String press = request.getParameter(&quot;press&quot;); int num = Integer.parseInt(request.getParameter(&quot;num&quot;)); BookDao bookdao = new BookDao(); //调用函数，存入图书 bookdao.addBook(card, name, type, autho, press, num); response.sendRedirect(&quot;/books/admin_book.jsp&quot;); &#125;&#125; 7.4 图书信息修改主要代码： 12345678910111213141516171819202122232425262728293031323334package com.rain.servlet;import java.io.IOException;import java.io.PrintWriter;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.rain.dao.BookDao;@WebServlet(&quot;/updateBookServlet&quot;)public class updateBookServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; public updateBookServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; //修改图书信息 request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); String card = request.getParameter(&quot;card&quot;); String name = request.getParameter(&quot;name&quot;); String type = request.getParameter(&quot;type&quot;); String autho = request.getParameter(&quot;autho&quot;); String press = request.getParameter(&quot;press&quot;); int num = Integer.parseInt(request.getParameter(&quot;num&quot;)); Int bid = Integer.parseInt(request.getParameter(&quot;updatebid&quot;)); BookDao bookdao = new BookDao(); bookdao.updateBook(bid, card, name, type, autho, press, num); response.sendRedirect(&quot;/books/admin_book.jsp&quot;); &#125;&#125; 7.5 图书删除主要代码： 12345678910111213141516171819202122232425262728293031package com.rain.servlet;import java.io.IOException;import java.io.PrintWriter;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.rain.dao.BookDao;@WebServlet(&quot;/deleteServlet&quot;)public class deleteServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; public deleteServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; //删除图书信息 request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); int bid = Integer.parseInt(request.getParameter(&quot;bid&quot;)); BookDao bookdao = new BookDao(); bookdao.deleteBook(bid); response.sendRedirect(&quot;/books/admin_book.jsp&quot;); &#125; protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub doGet(request, response); &#125;&#125; 其它模块设计与实现请查看 公众号：C you again 完整文档和系统源码下载：关注公众号：C you again 或扫描下方二维码，回复：“图书管理系统” 免费获取，更多干货等你来拿 好用记得点赞分享哦！！！！注：此系统不是本人原创，在原系统基础上进行修改，加以创新。侵权请联系删除","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"图书管理系统","slug":"图书管理系统","permalink":"https://cyouagain.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"贪吃蛇的使命之零基础入门贪吃蛇游戏（附演示地址）","slug":"贪吃蛇的使命之零基础入门贪吃蛇游戏（附演示地址）","date":"2020-10-02T07:47:56.645Z","updated":"2020-10-02T14:43:33.113Z","comments":true,"path":"posts/17293.html","link":"","permalink":"https://cyouagain.cn/posts/17293.html","excerpt":"","text":"零基础入门贪吃蛇游戏 贪吃蛇是一款最常见、最经典、最受欢迎的小游戏之一。本篇文章带你零基础实现贪吃蛇游戏，一条蛇的使命从这里开始。 演示地址：贪吃蛇演示，可能会提示危险操作，请忽略，放心访问。 源码获取：公众号：C you again ，回复“贪吃蛇”免费获取1、游戏描述&nbsp;&nbsp;&nbsp;&nbsp;贪吃蛇是一款非常经典的休闲类游戏。在一块固定大小的区域内，游戏玩家通过控制贪吃蛇的移动去吃食物，吃到食物的蛇身体变长。食物被蛇吃到后立马消失，并再次随机产生。蛇撞到四周墙壁或者自己身体时死亡。 2、前期准备2.1 具备技能&nbsp;&nbsp;&nbsp;&nbsp;本游戏所说是零基础，但你具备以下技能最佳：&nbsp;&nbsp;&nbsp;&nbsp;1、 HTML（主要是div盒子模型，canvas画布）&nbsp;&nbsp;&nbsp;&nbsp;2.、CSS （为你好看的游戏界面做准备）&nbsp;&nbsp;&nbsp;&nbsp;3.、JavaScript （让小蛇动起来，逻辑代码实现） 2.2 开发工具&nbsp;&nbsp;&nbsp;&nbsp;为提高开发速率，选择一款优秀的开发工具也很重要，这里小编推荐 sublime text3,轻巧方便，可以去百度下载，也可以关注小编公众号“C you again”,私信获取破解中文版。当然你足够优秀，使用记事本小编也不拦着。 3、实现目标&nbsp;&nbsp;&nbsp;&nbsp;本篇文章欲带你实现以下功能&nbsp;&nbsp;&nbsp;&nbsp;1、基本贪吃蛇（蛇的移动，吃食物，产生食物，增加分数）&nbsp;&nbsp;&nbsp;&nbsp;2、增加 暂停游戏/继续游戏功能&nbsp;&nbsp;&nbsp;&nbsp;3、再来一局功能（贪吃蛇死亡后有再来一局提示） 4、按键约定&nbsp;&nbsp;&nbsp;&nbsp;为方便玩家游戏，对操作按键做以下约定：&nbsp;&nbsp;&nbsp;&nbsp; 1、上、下、左、右按键分别操作贪吃蛇的四个运动方向&nbsp;&nbsp;&nbsp;&nbsp; 2、“+”、“-”按键分别代表贪吃蛇的加速、减速&nbsp;&nbsp;&nbsp;&nbsp; 3.、空格键代表游戏暂停/继续 5、实现原理&nbsp;&nbsp;&nbsp;&nbsp;1、利用canvas画布完成运动场地、食物、贪吃蛇的展示&nbsp;&nbsp;&nbsp;&nbsp;2、利用数组存储贪吃蛇的坐标位置&nbsp;&nbsp;&nbsp;&nbsp;3、利用上、下、左、右键改变贪吃蛇的蛇头坐标&nbsp;&nbsp;&nbsp;&nbsp;2、不断重新绘制页面，造成贪吃蛇运动的错觉 6、实现逻辑1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192//伪代码function 初始化数据（）&#123; 1、初始化贪吃蛇运动区域大小 2、初始化canvas画布山下文对象 3、初始化贪吃蛇的坐标 4、初始化贪吃蛇运动的方向 5、初始化玩家分数 6、初始化贪吃蛇的速度 7、初始化食物 8、初始化蛇 9、初始化蛇的状态 &#125;function 开始游戏（）&#123; interval = setInterval(运动方法（）, speed); document.onkeydown = function(event) &#123; var event = event || window.event; 按键监控方法(event.keyCode); &#125;&#125;function 按键监控方法（key）&#123; switch(key)&#123; case: 37 左 break; case: 38 上 break; case: 39 右 break; case: 40 下 break; case: 32 开始/暂停 break; case: 107 加速 break; case: 109 减速 break; &#125;&#125;function 运动方法（）&#123; switch(moveTo)&#123; case 0: 向左运动代码； break; case 1: 向上运动代码； break; case 2: 向右运动代码； break; case 3: 向下运动代码； break; &#125; 画地图方法（）; 画食物方法（）; 画蛇方法（）; 是否吃到食物方法（）; 是否死亡方法（）;&#125;function 画地图方法（）&#123; 画地图代码实现.....&#125;function 画食物方法（）&#123; 画食物代码实现.....&#125;function 画蛇方法（）&#123; 画蛇代码实现.....&#125;function 是否吃到食物方法（）&#123; if(蛇头左上角的坐标==食物左上角的坐标)&#123; //吃到食物 1、分数加一; 2、重新绘制食物 3、增加蛇身 &#125;&#125;function 是否死亡方法（）&#123; 1、判断蛇头左上角坐标是否越过上、下、左、右任一墙壁; 2、判断蛇头左上角坐标是否与自己身体相撞;&#125; 7、实现过程7.1 全局变量的定义与解释 变量名称 说明 ROWS 行数 COLS 列数 CONTEXT canvas上下文对象 BLOCK_SIZE 贪吃蛇运动的格子大小 snake[] 保存蛇的坐标 snakeCount 蛇身长度 foodX, foodY 食物的坐标 interval 计时 moveTo 蛇移动的方向 isStop 是否暂停 score 分数 speed 运动速度 7.2 方法的定义与解释 方法名称 参数 返回值 说明 init() 无 无 初始化方法 start() 无 无 游戏启动方法 reLoad() 无 无 页面重新加载方法 keydown(keyCode) 按键的码值 无 交互响应方法 isDie() 无 无 判断是否死亡方法 isEat() 无 无 判断是否吃到食物方法 addSnake() 无 无 增加蛇身方法 addFood() 无 无 制造食物方法 move() 无 无 移动方法 drawMap() 无 无 绘制运动区域方法 drawFood() 无 无 绘制食物方法 drawSnake() 无 无 绘制蛇方法 7.3 主要实现代码1、初始化方法的实现 12345678910111213141516171819202122function init() &#123; ROWS = 35; //初始化行数 COLS = 25; //初始化列数 BLOCK_SIZE = 20; snakeCount = 3; moveTo = 2; score=0; document.getElementById(&quot;score&quot;).innerHTML=score; CONTEXT = document.getElementById(&#x27;canvas&#x27;).getContext(&#x27;2d&#x27;); //初始化画布上下文对象的引用 for(var i = 0; i &lt; snakeCount; i++) &#123; snakes[i] = &#123; x: i * BLOCK_SIZE, y: 0 &#125;; &#125; isStop=false; speed=500; addFood(); drawMap(); //初始化场地 drawSnake(); //初始化蛇 drawFood(); //初始化食物&#125; 2、绘制运动区域方法的实现 1234567891011121314151617181920212223function drawMap() &#123; CONTEXT.clearRect(0, 0, BLOCK_SIZE * ROWS, BLOCK_SIZE * COLS); //画横线 for(var i = 0; i &lt; COLS; i++) &#123; CONTEXT.beginPath(); CONTEXT.moveTo(0, i * BLOCK_SIZE); CONTEXT.lineTo(BLOCK_SIZE * ROWS, i * BLOCK_SIZE); CONTEXT.strokeStyle = &quot;gray&quot;; CONTEXT.lineWidth=1; CONTEXT.stroke(); &#125; //画竖线 for(var i = 0; i &lt; ROWS; i++) &#123; CONTEXT.beginPath(); CONTEXT.moveTo(i * BLOCK_SIZE, 0); CONTEXT.lineTo(i * BLOCK_SIZE, BLOCK_SIZE * COLS); CONTEXT.strokeStyle = &quot;gray&quot;; CONTEXT.lineWidth=1; CONTEXT.stroke(); &#125;&#125; 3、判断是否死亡方法的实现 12345678910111213function isDie() &#123; if(snakes[snakeCount - 1].x == -20 || snakes[snakeCount - 1].x == BLOCK_SIZE * ROWS || snakes[snakeCount - 1].y == -20 || snakes[snakeCount - 1].y == BLOCK_SIZE * COLS) &#123; clearInterval(interval); document.getElementById(&quot;model2&quot;).style.display=&#x27;block&#x27;; &#125; for(var i = 0; i &lt; snakeCount - 1; i++) &#123; if(snakes[snakeCount - 1].x == snakes[i].x &amp;&amp; snakes[snakeCount - 1].y == snakes[i].y) &#123; clearInterval(interval); document.getElementById(&quot;model2&quot;).style.display=&#x27;block&#x27;; &#125; &#125;&#125; 4、绘制蛇方法的实现 123456789101112131415function drawSnake() &#123; for(var i = 0; i &lt; snakes.length; i++) &#123; CONTEXT.beginPath(); CONTEXT.fillStyle = &quot;red&quot;; CONTEXT.fillRect(snakes[i].x, snakes[i].y, BLOCK_SIZE, BLOCK_SIZE); CONTEXT.moveTo(snakes[i].x, snakes[i].y); CONTEXT.lineTo(snakes[i].x + BLOCK_SIZE, snakes[i].y); CONTEXT.lineTo(snakes[i].x + BLOCK_SIZE, snakes[i].y + BLOCK_SIZE); CONTEXT.lineTo(snakes[i].x, snakes[i].y + BLOCK_SIZE); CONTEXT.closePath(); CONTEXT.strokeStyle = &quot;gray&quot;; CONTEXT.stroke(); &#125;&#125; 8、结果演示8.1 运行 8.2 暂停 8.3 死亡 9、最后的话&nbsp;&nbsp;&nbsp;&nbsp;1、至此贪吃蛇已制作完成，谢谢你的支持&nbsp;&nbsp;&nbsp;&nbsp;2、本教程纯属个人思想构建，避免不了出现一些缺陷或错误，欢迎你批评指正&nbsp;&nbsp;&nbsp;&nbsp;3、如果你对那部分不太理解或有更好的解决办法，请在公众号“C you again”私信与我交流&nbsp;&nbsp;&nbsp;&nbsp;4、获取源码请搜索公众号“C you again”或扫描下面二维码，回复“贪吃蛇”&nbsp;&nbsp;&nbsp;&nbsp;5、转载请标明来源&nbsp;&nbsp;&nbsp;&nbsp;6、其它游戏教程请公众号私信获取","categories":[{"name":"IT技术圈","slug":"IT技术圈","permalink":"https://cyouagain.cn/categories/IT%E6%8A%80%E6%9C%AF%E5%9C%88/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"HTML5小游戏","slug":"HTML5小游戏","permalink":"https://cyouagain.cn/tags/HTML5%E5%B0%8F%E6%B8%B8%E6%88%8F/"},{"name":"贪吃蛇","slug":"贪吃蛇","permalink":"https://cyouagain.cn/tags/%E8%B4%AA%E5%90%83%E8%9B%87/"}]},{"title":"基于web的图书管理系统设计与实现（附演示地址）","slug":"基于web的图书管理系统设计与实现（附演示地址）","date":"2020-10-02T07:47:56.642Z","updated":"2020-10-02T14:43:18.033Z","comments":true,"path":"posts/31763.html","link":"","permalink":"https://cyouagain.cn/posts/31763.html","excerpt":"","text":"原文链接：基于web的图书管理系统设计与实现系统演示链接：点击这里查看演示源码下载:请关注微信公众号：C you again，回复 “基于web的图书管理系统” 获取01 系统简述&nbsp;&nbsp;&nbsp;&nbsp;图书管理系统就是利用计算机，结合互联网对图书进行结构化、自动化管理的一种软件，来提高对图书的管理效率。本系统采用Java+Servlet+Jsp 的方式实现基于web的图书管理系统。 02 开发工具及相关技术2.1 Java技术&nbsp;&nbsp;&nbsp;&nbsp;Java 是由 Sun Microsystems 在 1995 年首先发布的编程语言和计算平台。有许多应用程序和 Web 站点只有在安装 Java 后才能正常工作，而且这样的应用程序和 Web 站点日益增多。Java 快速、安全、可靠。从笔记本电脑到数据中心，从游戏控制台到科学超级计算机，从手机到互联网，Java 无处不在。 2.2 HTML、css、javascript技术&nbsp;&nbsp;&nbsp;&nbsp;HTML的英文全称是 Hypertext Marked Language，即超文本标记语言。HTML是由Web的发明者 Tim Berners-Lee和同事 Daniel W. Connolly于1990年创立的一种标记语言，它是标准通用化标记语言SGML的应用。用HTML编写的超文本文档称为HTML文档，它能独立于各种操作系统平台(如UNIX， Windows等)。使用HTML语言，将所需要表达的信息按某种规则写成HTML文件，通过专用的浏览器来识别，并将这些HTML文件“翻译”成可以识别的信息，即现在所见到的网页。 &nbsp;&nbsp;&nbsp;&nbsp;层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。 &nbsp;&nbsp;&nbsp;&nbsp;JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。JavaScript在1995年由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语法风格与Self及Scheme较为接近。JavaScript的标准是ECMAScript 。截至 2012 年，所有浏览器都完整的支持ECMAScript 5.1，旧版本的浏览器至少支持ECMAScript 3 标准。2015年6月17日，ECMA国际组织发布了ECMAScript 的第六版，该版本正式名称为 ECMAScript 2015，但通常被称为ECMAScript 6 或者ES6。 2.3 Servlet技术&nbsp;&nbsp;&nbsp;&nbsp;Servlet（Server Applet）是Java Servlet的简称，称为小服务程序或服务连接器，用Java编写的服务器端程序，具有独立于平台和协议的特性，主要功能在于交互式地浏览和生成数据，生成动态Web内容。 &nbsp;&nbsp;&nbsp;&nbsp;狭义的Servlet是指Java语言实现的一个接口，广义的Servlet是指任何实现了这个Servlet接口的类，一般情况下，人们将Servlet理解为后者。Servlet运行于支持Java的应用服务器中。从原理上讲，Servlet可以响应任何类型的请求，但绝大多数情况下Servlet只用来扩展基于HTTP协议的Web服务器。 2.4 Eclipse开发工具&nbsp;&nbsp;&nbsp;&nbsp;Eclipse 是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具（Java Development Kit，JDK）。 2.5 MySql数据库&nbsp;&nbsp;&nbsp;&nbsp;MySql是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。MySql数据库有以下特点： Mysql是开源的，所以你不需要支付额外的费用。 Mysql支持大型的数据库。可以处理拥有上千万条记录的大型数据库。 MySQL使用标准的SQL数据语言形式。 Mysql可以允许于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和Tcl等。 Mysql对PHP有很好的支持，PHP是目前最流行的Web开发语言。 MySQL支持大型数据库，支持5000万条记录的数据仓库，32位系统表文件最大可支持4GB，64位系统支持最大的表文件为8TB。 Mysql是可以定制的，采用了GPL协议，你可以修改源码来开发自己的Mysql系统。 03 系统功能描述&nbsp;&nbsp;&nbsp;&nbsp;系统的用户主要有两大类：一是图书管理系统的管理员，二是普通用户。根据用户类型的不同，将系统划分为普通用户端和管理员端，它们具有的主要功能如下： 用户端 图书查询：根据图书编号、图书名称查询图书信息，可查询图书的编号、名称、分类、作者、价格、在馆数量等。 借阅信息：可查询图书的基本信息、借阅日期、截止还书日期、超期天数等。 借阅历史：查询自己以往的借阅历史，包括哪些图书等具体信息。 我的：查看个人资料，修改账户密码，退出系统。 管理员端图书管理：根据图书编号、图书名称查询图书基本信息，添加、修改、删除图书。 图书分类管理：根据分类名称查询图书分类信息，添加、修改、删除图书分类。 图书借阅：展示所有正在借阅图书的信息。 图书归还：展示所有已归还图书的信息。 公告管理：向用户发布公告。 读者管理：根据账号、姓名查询读者基本信息，添加、修改、删除读者信息。 我的：查看个人资料，修改账户密码，退出系统。 04 工程结构及其说明项目名称：manage_booksPackage包说明： 05 主要功能详细设计与实现5.1 用户端–图书查询模块&nbsp;&nbsp;&nbsp;&nbsp;用户访问图书查询模块时显示当前可以借阅图书，有按图书名称查询图书信息的功能，可以进行借书操作。其中查询功能的Servlet代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061package com.cya.controller;import java.io.IOException;import java.util.ArrayList;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.cya.dao.BookDao;import com.cya.pojo.Book;/** * Servlet implementation class selectServlet */@WebServlet(&quot;/selectServlet&quot;)public class selectServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; /** * @see HttpServlet#HttpServlet() */ public selectServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; /** * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response) */ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub //response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath()); &#125; /** * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response) */ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub //doGet(request, response); request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); //因为在管理员界面和读者界面都有查找功能，为了将查找的结果返回正确的页面，设置了tip，tip=1表示管理员界面 int tip = Integer.parseInt(request.getParameter(&quot;tip&quot;)); String name = request.getParameter(&quot;name&quot;); BookDao bookdao = new BookDao(); ArrayList&lt;Book&gt; data = bookdao.getLikeList(name); //将获取的结果存入请求中 request.setAttribute(&quot;data&quot;, data); String url = &quot;&quot;; //转发不同的界面 if (tip == 1) &#123; url = response.encodeURL(&quot;/books/admin/admin_books.jsp&quot;); &#125; else &#123; url = response.encodeURL(&quot;/books/user/select.jsp&quot;); &#125; //将请求转发 request.getRequestDispatcher(url).forward(request, response); &#125;&#125; 5.2 用户端–借阅信息模块&nbsp;&nbsp;&nbsp;&nbsp;当普通用户借阅完图书，会在该模块自动生成借阅信息，如借阅日期，归还日期，也可在该模块进行还书，如下图所示。其中，还书功能的Servlet代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889package com.cya.controller;import java.io.IOException;import java.io.PrintWriter;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import com.cya.pojo.Admin;import com.cya.dao.AdminDao;import com.cya.dao.BookDao;/** * Servlet implementation class borrowServlet */@WebServlet(&quot;/borrowServlet&quot;)public class borrowServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; /** * @see HttpServlet#HttpServlet() */ public borrowServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; /** * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response) */ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub //response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath()); //设置编码类型 request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); BookDao bookdao = new BookDao(); //为了区分借书和还书的功能，设置tip，tip为1，表示借书 int tip = Integer.parseInt(request.getParameter(&quot;tip&quot;)); if (tip == 1) &#123; //获取图书id int bid = Integer.parseInt(request.getParameter(&quot;bid&quot;)); HttpSession session = request.getSession(); Admin admin = new Admin(); String status=request.getParameter(&quot;status&quot;); String id=&quot;&quot;; if(status.equals(&quot;user&quot;)) &#123; //获取到存入session的读者id id = (String) session.getAttribute(&quot;uid&quot;); &#125; else &#123; //获取到存入session的aid读者id id = (String) session.getAttribute(&quot;aid&quot;); &#125; AdminDao admindao = new AdminDao(); //通过aid获取到读者的信息 admin = admindao.get_AidInfo2(id); //将借阅记录存入数据表 bookdao.borrowBook(bid, admin); response.sendRedirect(&quot;/manage_books/books/user/select.jsp&quot;); &#125; else &#123; //还书功能，获取借阅记录的hid int hid = Integer.parseInt(request.getParameter(&quot;hid&quot;)); /** * 还书在管理员和读者界面都有，为了区分，设置了show字段，show为1表示读者界面 */ int show = Integer.parseInt(request.getParameter(&quot;show&quot;)); //调用还书函数，改变status字段 bookdao.borrowBook2(hid); if (show == 1) &#123; response.sendRedirect(&quot;/manage_books/books/user/borrow.jsp&quot;); &#125; else &#123; response.sendRedirect(&quot;/manage_books/books/admin/admin_borrows.jsp&quot;); &#125; &#125; &#125; /** * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response) */ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub doGet(request, response); &#125;&#125; 5.3 管理员端–图书管理模块&nbsp;&nbsp;&nbsp;&nbsp;管理员可以通过根据图书号 、图书名称，作者名称，出版社等查询图书信息。&nbsp;&nbsp;&nbsp;&nbsp;管理员登录系统以后，可以进行图书添加操作，这是管理员主要的输入信息部分，填写好各项信息后，单击保存按钮，系统将对这些信息进行处理。界面见下图所示：&nbsp;&nbsp;&nbsp;&nbsp;除此以外，管理员对已经添加好的图书信息有修改权限。其中，添加图书功能的代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354package com.cya.controller;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.cya.dao.BookDao;/** * Servlet implementation class AddBookServlet */@WebServlet(&quot;/AddBookServlet&quot;)public class AddBookServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; /** * @see HttpServlet#HttpServlet() */ public AddBookServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; /** * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response) */ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub// response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath()); &#125; /** * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response) */ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub// doGet(request, response); //设置编码类型 request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); //获取要添加图书的信息 String card = request.getParameter(&quot;card&quot;); String name = request.getParameter(&quot;name&quot;); String type = request.getParameter(&quot;type&quot;); String autho = request.getParameter(&quot;autho&quot;); String press = request.getParameter(&quot;press&quot;); int num = Integer.parseInt(request.getParameter(&quot;num&quot;)); BookDao bookdao = new BookDao(); //调用函数，存入图书 bookdao.addBook(card, name, type, autho, press, num); response.sendRedirect(&quot;/manage_books/books/admin/admin_books.jsp&quot;); &#125;&#125; 5.4 管理员端–图书分类模块&nbsp;&nbsp;&nbsp;&nbsp;管理员在该界面可以增加、删除、修改图书分类信息，操作效果如图。修改图书分类功能的代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849package com.cya.controller;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.cya.dao.BookDao;import com.cya.dao.TypeDao;/** * Servlet implementation class updateBookTypeServlet */@WebServlet(&quot;/updateBookTypeServlet&quot;)public class updateBookTypeServlet extends HttpServlet &#123; private static final long serialVersionUID = 1L; /** * @see HttpServlet#HttpServlet() */ public updateBookTypeServlet() &#123; super(); // TODO Auto-generated constructor stub &#125; /** * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response) */ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub// response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath()); &#125; /** * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response) */ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub// doGet(request, response); //修改图书类型信息 request.setCharacterEncoding(&quot;UTF-8&quot;); response.setContentType(&quot;text/html;charset=UTF-8&quot;); String name = request.getParameter(&quot;name&quot;); int tid = Integer.parseInt(request.getParameter(&quot;tid&quot;)); TypeDao typedao = new TypeDao(); typedao.updateTypeBook(tid, name); response.sendRedirect(&quot;/manage_books/books/admin/admin_booksType.jsp&quot;); &#125;&#125; 06 最后的话（下载源码）&nbsp;&nbsp;&nbsp;&nbsp;你若需要下载源码，请关注微信公众号：C you again，回复 “基于web的图书管理系统” 获取 。 你也可以扫码关注 原文链接：基于web的图书管理系统设计与实现系统演示链接：点击这里查看演示","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"图书管理系统","slug":"图书管理系统","permalink":"https://cyouagain.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"基于web的机票管理系统设计与实现（一）","slug":"基于web的机票管理系统设计与实现（一）","date":"2020-10-02T07:47:56.639Z","updated":"2020-10-02T14:42:59.620Z","comments":true,"path":"posts/51772.html","link":"","permalink":"https://cyouagain.cn/posts/51772.html","excerpt":"","text":"基于web的机票管理系统1 摘 要&nbsp;&nbsp;&nbsp;&nbsp;近年来，我国发展迅速，对交通工具的需求量大幅度增加。飞机作为出行工具之一，花费时间短、用户体验度好，价格实惠、安全性高等优点自然成为人们的首选，这也导致等待时间长、购票效率低等一系列问题的出现，给用户和航空公司造成严重困扰。面对这些问题，在线机票预订系统显得格外重要。 &nbsp;&nbsp;&nbsp;&nbsp;本系统使用Eclipse开发工具，使用Redis、MySQL数据库，采用MVC三层架构的方式，结合当前最流行的SSM框架以及支付宝沙箱支付环境来实现各个功能。系统分为用户端和管理员端。用户端实现了用户注册与登录、用户评论、机票查询，机票预订，订单查询、广告展示等功能。管理员端包括航班信息管理模块、订单信息管理模块、用户信息管理模块、留言评论管理模块、广告信息管理模块、个人信息管理模块等六大模块，具有开放体系结构的、易扩充的、易维护的、具有良好人机界面的优点。 &nbsp;&nbsp;&nbsp;&nbsp;经过充分的测试，测试数据均正确无误，各个模块运行良好。机票预订系统的推出，为乘客出行提供方便，便于机场工作人员对机票信息进行管理，提高了机场工作人员对机票管理的工作效率。 关键词：机票预订系统； 数据库； MVC； SSM； 面向对象 2 系统相关技术概述2.1 Java web&nbsp;&nbsp;&nbsp;&nbsp;Java Web，是用Java技术来解决相关web互联网领域的技术总和。随着Web互联网技术的出现和推广，基于Java技术的Java Web技术应运而生，并为解决互联网相关问题提出解决方案。我们知道，Web是由服务器和客户端两方面组成。基于Java语言的Web框架有很多种，用以适用不同的技术需求，但是都遵循最基本的原则和技术路线，即采用了MVC的架构设计思想，并通过Servlet或者Filter进行请求拦截，同时使用约定，XML或Annotation来实现必备的相关配置，充分利用其面向对象的特质，实现前台用户请求和后台程序响应的工作流程。 2.2 三大框架SSM&nbsp;&nbsp;&nbsp;&nbsp;SSM框架，是Spring + Spring MVC + MyBatis的缩写，这个是继SSH之后，目前比较主流的Java EE企业级框架，适用于搭建各种大型的企业级应用系统。Spring是一个开源框架，Spring是于2003年兴起的一个轻量级的Java开发框架，由Rod Johnson在其著作Expert One-On-One J2EE Development and Design中阐述的部分理念和原型衍生而来。它是为了解决企业应用开发的复杂性而创建的。Spring使用基本的JavaBean来完成以前只可能由EJB完成的事情。然而，Spring的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何Java应用都可以从Spring中受益。 简单来说，Spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器框架。Spring MVC属于Spring Framework的后续产品，已经融合在Spring Web Flow里面，它原生支持的Spring特性，让开发变得非常简单规范。Spring MVC 分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。MyBatis本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。MyBatis是一个基于Java的持久层框架。iBATIS提供的持久层框架包括SQL Maps和Data Access Objects（DAO）MyBatis消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索。MyBatis使用简单的XML或注解用于配置和原始映射，将接口和Java的POJOs（Plain Old Java Objects，普通的 Java对象）映射成数据库中的记录。 2.3 前端框架AngularJS&nbsp;&nbsp;&nbsp;&nbsp;AngularJS是一个开发动态Web应用的框架。它让你可以使用HTML作为模板语言并且可以通过扩展的HTML语法来使应用组件更加清晰和简洁。它的创新之处在于，通过数据绑定和依赖注入减少了大量代码，而这些都在浏览器端通过JavaScript实现。 2.4 数据库MySQL&nbsp;&nbsp;&nbsp;&nbsp;MySQL是一种开放源代码的关系型数据库管理系统（RDBMS）[6]，使用最常用的数据库管理语言–结构化查询语言（SQL）进行数据库管理。MySQL是开放源代码的，因此任何人都可以在General Public License的许可下下载并根据个性化的需要对其进行修改。MySQL因为其速度、可靠性和适应性而备受关注。大多数人都认为在不需要事务化处理的情况下，MySQL是管理内容最好的选择。 2.5 数据库Redis&nbsp;&nbsp;&nbsp;&nbsp;Redis（Remote Dictionary Server )，即远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。redis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sorted set –有序集合)和hash（哈希类型）。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。 2.6 开发工具Eclipse&nbsp;&nbsp;&nbsp;&nbsp;Eclipse 是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具（Java Development Kit，JDK）。 3 需求分析3.1 系统实现目标&nbsp;&nbsp;&nbsp;&nbsp;如今，互联网遍布于生活的每个角落，不断改变着人们的生产生活，基于Web的机票预订系统就是借助互联网发展的热潮，方便大众，服务大众。具体实现以下两个目标： &nbsp;&nbsp;&nbsp;&nbsp;（1） 方便用户购票&nbsp;&nbsp;&nbsp;&nbsp;用户可以访问前台系统浏览、查询航班信息，足不出户，预订机票，免去了以往寻找购票网点，排队购票的麻烦。&nbsp;&nbsp;&nbsp;&nbsp;（2） 航空公司实现办公自动化&nbsp;&nbsp;&nbsp;&nbsp;后台系统能使航空公司办事效率大幅度提高，它将所有的工作流程按照一系列流程进行规范化，从而减少工作时间，提高了人员的办事效率。 3.2 系统功能分析 后台航班信息管理：主要是指添加航班信息，删除航班信息，查询航班信息和航班信息详细情况查看等。 后台订单信息管理：后台订单信息管理主要包括订单列表，查询订单信息，订单信息的删除等。 后台用户信息管理：主要指注册用户的展示与按条件查询注册用户。 后台留言评论管理：主要指展示用户的留言信息和按留言日期、留言用户查找留言信息等。 后台广告信息管理：主要指添加广告信息，删除广告信息，设置广告的有效性等。 后台个人信息管理：主要指查看个人信息，修改个人信息。 前台登录与注册管理：包括前台系统用户的注册于登录。 前台首页信息展示：主要是指航班信息展示、航班信息查询、航班信息详情、登录用户信息展示、留言板和个人信息详情与修改等。 前台订单页面：主要是订单内容的填写和订单详情。 前台订单支付：是指使用支付宝沙箱环境支付订单。 3.3 系统用列图系统前台功能用列图 系统后台功能用列图 4 系统总体设计4.1 软件架构设计&nbsp;&nbsp;&nbsp;&nbsp;此项目使用经典的三层架构模式[8]，分别是表现层，业务逻辑层和数据持久层。如下图所示。&nbsp;&nbsp;&nbsp;&nbsp;表现层：表现层也称为表示层，位于最外层（最上层），离用户最近。用于显示数据和接收用户输入的数据，为用户提供一种交互式操作的界面。 &nbsp;&nbsp;&nbsp;&nbsp;业务逻辑层：业务逻辑层（Business Logic Layer）无疑是系统架构中体现核心价值的部分。它的关注点主要集中在业务规则的制定、业务流程的实现等与业务需求有关的系统设计，也即是说它是与系统所应对的领域（Domain）逻辑有关，很多时候，也将业务逻辑层称为领域层。 &nbsp;&nbsp;&nbsp;&nbsp;数据持久层：数据持久层也称为是数据访问层，其功能主要是负责数据库的访问，可以访问数据库系统、二进制文件、文本文档或是XML文档。简单的说法就是实现对数据表的select、insert、update以及delete的操作。 4.2 总体功能模块设计&nbsp;&nbsp;&nbsp;&nbsp;本系统主要分为前台子系统和后台子系统，两个子系统包含的具体功能如下： 前台功能包括：A. 用户登录B. 用户注册C. 航班查询D. 机票详情E. 机票预订F. 订单支付G. 订单查看H. 用户留言I. 个人信息查看与修改 后台功能包括：A. 航班信息管理B. 订单信息管理C. 用户信息管理D. 留言评论管理E. 广告管理F. 个人信息管理 前台子系统和后台子系统详细功能如下图所示。（1） 前台系统功能设计A. 用户登录功能，详细功能说明如表4.1所示 B. 用户注册功能，详细功能说明如表4.2所示 C. 航班查询功能，详细功能说明如表4.3所示 D. 机票详情功能，详细功能说明如表4.4所示 E. 机票预订功能，详细功能说明如表4.5所示F. 订单支付功能，详细功能说明如表4.6所示 G. 订单查看功能，详细功能说明如表4.7所示H. 用户留言功能，详细功能说明如表4.8所示 I. 个人信息查看与修改功能，详细功能说明如表4.9所示（2） 后台系统功能设计A. 航班信息管理模块功能，详细功能说明如表4.10所示B. 订单信息管理模块功能，详细功能说明如表4.11所示C. 用户信息管理模块功能，详细功能说明如表4.12所示D. 留言评论管理模块功能，详细功能说明如表4.13所示 E. 广告管理模块功能，详细功能说明如表4.14所示 F. 个人信息管理模块功能，详细功能说明如表4.15所示 4.3 数据库设计4.3.1 数据库结构设计&nbsp;&nbsp;&nbsp;&nbsp;通过建立该系统各个模块的E-R图[9]，是整个模块之间的功能变得更加清晰，模块间所具有的耦合性边的越低。管理员实体（Admin），留言评论实体（Discuss），航班实体（Flight），订单（Order）实体，普通用户实体（User）和广告信息实体（content）E-R图分别如下图所示。 管理员实体（Admin）E-R图留言评论实体（Discuss）E-R图 航班实体（Flight）E-R图订单实体（Order）E-R图普通用户实体（User）E-R图广告信息实体（Content）E-R图 4.3.2 数据库表设计&nbsp;&nbsp;&nbsp;&nbsp;为实现数据库的设计，对数据进行分表处理，每一个表格代表不同的信息和功能，分别如下图所示。 管理员信息表（admin），用于存放管理员信息，表结构如表4.16所示 留言评论信息表（discuss），用于存放留言评论信息，表结构如表4.17所示 航班信息表（flight），用于存放航班信息，表结构如表4.18所示 订单信息表（order），用于存放订单信息，表结构如表4.19所示 普通用户信息表（user），用于存放用户信息，表结构如表4.20所示 下期继续分享《基于web的机票管理系统设计与实现（二）》获取源码请关注公众号：C you again，回复“基于web的机票管理系统”或者“机票管理系统”","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"机票管理系统","slug":"机票管理系统","permalink":"https://cyouagain.cn/tags/%E6%9C%BA%E7%A5%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"后端开发","slug":"后端开发","permalink":"https://cyouagain.cn/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"基于web的机票管理系统设计与实现（二）","slug":"基于web的机票管理系统设计与实现（二）","date":"2020-10-02T07:47:56.636Z","updated":"2020-10-02T14:42:38.659Z","comments":true,"path":"posts/23110.html","link":"","permalink":"https://cyouagain.cn/posts/23110.html","excerpt":"","text":"基于web的机票管理系统如果你还没有阅读基于web的机票管理系统设计与实现（一），请点击查看，获取详细资料请关注公众号：C you again 5 系统详细设计及实现5.1 添加航班信息&nbsp;&nbsp;&nbsp;&nbsp;系统管理员登录后台系统后，点击侧边栏的航班信息管理按钮会出现下拉列表菜单，继续点击添加航班信息按钮可以进行添加航班信息操作。添加航班时输入航班号、起点、终点、始发机场、到达机场等信息，如下图所示。&nbsp;&nbsp;&nbsp;&nbsp;添加航班信息的过程如下：后台系统管理员进入添加航班信息页面后，填写航班号、起点、终点、始发机场、到达机场等相关信息后点击保存按钮，这是会随机生成flightId并与数据库中已经存在的flightId进行比较，保证航班Id唯一，之后继续判断输入的机票价格，航班座位数等数据是否有效，核对信息的有效性和完整性，最后存入数据库。具体流程如下图所示。主要代码： 123456789101112131415@RequestMapping(&quot;addFlight&quot;) public Result addFlight(@RequestBody Flight flight ) &#123; //设置日期格式 SimpleDateFormat df = new SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;); // new Date()为获取当前系统时间 flight.setFlightId(&quot;F&quot;+df.format(new Date())); try &#123; flightManageService.addFlight(flight); return new Result(true,&quot;添加成功&quot;); &#125; catch (Exception e) &#123; e.printStackTrace(); return new Result(false,&quot;添加失败&quot;); &#125;&#125; 5.2 航班信息列表&nbsp;&nbsp;&nbsp;&nbsp;系统管理员登录系统后有查看航班列表的权限，航班列表界面有添加航班，删除航班，搜索航班信息，航班信息详情，航班信息修改等功能，具体见下图，各个功能详细说明如表5.1所示。 主要代码这里以航班查询功能service层代码为例： 1234567public PageResult search(int pageNum, int pageSize, String searchEntity) &#123; PageHelper.startPage(pageNum,pageSize); List&lt;Flight&gt; flightsList=flightManageMapper.select(searchEntity); Page&lt;Flight&gt; page=(Page&lt;Flight&gt;) flightsList; return new PageResult(page.getTotal(), page.getResult()); &#125; 5.3 订单信息列表&nbsp;&nbsp;&nbsp;&nbsp;订单信息列表是订单信息管理模块的一个子功能，展示的是前台所有用户的机票订单信息，如下图所示。系统管理员可以对订单进行查询，删除操作，各个功能详细说明如表5.2所示。主要代码这里以订单删除功能dao层的mapper代码为例： 1234567891011&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &gt;&lt;mapper namespace=&quot;com.cafuc.mapper.IOrderManageMapper&quot;&gt; &lt;delete id=&quot;delete&quot; parameterType=&quot;String&quot;&gt; delete from `order` where order_id in &lt;foreach collection=&quot;selectIds&quot; item=&quot;ids&quot; open=&quot;(&quot; close=&quot;)&quot; separator=&quot;,&quot;&gt; #&#123;ids&#125; &lt;/foreach&gt; &lt;/delete&gt;&lt;/mapper&gt; 5.4 用户信息列表&nbsp;&nbsp;&nbsp;&nbsp;用户信息列表是用户信息管理模块的子功能，它是指把前台系统所有注册用户信息以列表的形式展示给后台系统管理员，方便系统管理员精确定位到每一个机票预订系统的使用者，对其进行管理，用户信息列表的界面如下图所示。系统管理员有查找系统使用用户和删除违反平台规定用户的权利，各个功能详细说明如表5.3所示。 主要代码以用户搜索功能dao层的mapper代码为例： 123456789&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &gt;&lt;mapper namespace=&quot;com.cafuc.mapper.IUserManageMapper&quot;&gt; &lt;select id=&quot;select&quot; resultType=&quot;com.cafuc.pojo.User&quot;&gt; select DISTINCT * from `user` as u where u.user_name like concat(&#x27;%&#x27;,#&#123;searchEntity&#125;,&#x27;%&#x27;) &lt;/select&gt;&lt;/mapper&gt; 5.5 留言评论列表&nbsp;&nbsp;&nbsp;&nbsp;留言评论是前台系统使用者完成注册后具有的功能，用户可以通过留言评论功能对所购班次机票进行全方位的评价，也可以对其在使用过程中遇到的问题进行反馈，等待工作员处理。后台系统管理员对用户留言具有管理的权限，见下图。各功能详情见表5.4。 主要代码以后台系统留言评论模块controller层DiscussManageController.java类例： 123456789101112131415161718192021222324252627282930313233package com.cafuc.controller;import javax.annotation.Resource;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import com.cafuc.pojo.PageResult;import com.cafuc.pojo.Result;import com.cafuc.service.IDiscussManageService;import com.cafuc.service.IOrderManageService;@RestController@RequestMapping(&quot;discussManage&quot;)public class DiscussManageController &#123; @Resource private IDiscussManageService discussManageService; @RequestMapping(&quot;search&quot;) public PageResult search(int pageNum ,int pageSize,String searchEntity)&#123; System.out.println(pageNum+&quot; &quot;+pageSize+&quot; &quot;+searchEntity); PageResult pageResult=discussManageService.search(pageNum, pageSize, searchEntity); return pageResult; &#125; @RequestMapping(&quot;deleteBySelectIds&quot;) public Result deleteBySelectIds(String []selectIds) &#123; try &#123; discussManageService.deleteBySelectIds(selectIds); return new Result(true,&quot;删除成功&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); return new Result(false,&quot;删除失败&quot;); &#125; &#125;&#125; 5.6 添加广告信息&nbsp;&nbsp;&nbsp;&nbsp;广告作为网站的必要元素，在机票系统的前台页面也有广告展示的功能，后台增加了相应的管理模块，界面如下图所示。 &nbsp;&nbsp;&nbsp;&nbsp;后台系统添加广告的步骤：管理员登录后台系统后点击广告管理按钮，在出现的下拉列表选项中选择添加广告信息并点击进入广告添加页面，在页面输入广告图片、广告链接，广告说明等信息，点击保存按钮，进行数据校验，检查数据的有效性和完整性，保证数据无误之后将数据信息持久化到mysql数据库。流程图如下图所示。主要代码以后台系统controller层ContentManageController.java类例： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950@RequestMapping(&quot;addContent&quot;) public void addContent(@RequestParam(&quot;file&quot;) MultipartFile file,HttpServletRequest request,HttpServletResponse response) throws IOException &#123; String describe=&quot;&quot;; String url=&quot;&quot;; String picture=&quot;&quot;; if(request.getParameter(&quot;describe&quot;)!=null) &#123; describe=request.getParameter(&quot;describe&quot;); &#125; if(request.getParameter(&quot;url&quot;)!=null) &#123; url=request.getParameter(&quot;url&quot;); &#125; // 判断文件是否为空，空则返回失败页面 if (!file.isEmpty()) &#123; try &#123; // 获取文件存储路径（绝对路径） String path = request.getServletContext().getRealPath(&quot;/WEB-INF/file&quot;); // 获取原文件名 String fileName = file.getOriginalFilename(); // 创建文件实例 File filePath = new File(path, fileName); // 如果文件目录不存在，创建目录 if (!filePath.getParentFile().exists()) &#123; filePath.getParentFile().mkdirs(); System.out.println(&quot;创建目录&quot; + filePath); &#125; picture=filePath+&quot;&quot;; // 写入文件 file.transferTo(filePath); Content content=new Content(); //设置日期格式 SimpleDateFormat df = new SimpleDateFormat(&quot;yyyyMMddHHmmss&quot;); // new Date()为获取当前系统时间 content.setContentId(&quot;C&quot;+df.format(new Date())); content.setDescribe(describe); content.setPicture(picture); content.setUrl(url); contentManageServiceImpl.addContent(content); response.sendRedirect(request.getContextPath()+&quot;/admin/list_content.html&quot;); &#125; catch (Exception e) &#123; e.printStackTrace(); response.sendRedirect(request.getContextPath()+&quot;/admin/add_content.html&quot;); &#125; &#125; else &#123; response.sendRedirect(request.getContextPath()+&quot;/admin/add_content.html&quot;); &#125; &#125; 5.7 广告信息列表&nbsp;&nbsp;&nbsp;&nbsp;后台系统管理员完成添加广告以后跳转到广告信息列表页面，本页面展示的是添加到数据库的所有广告信息，如下图所示，系统管理员可以通过查询，删除等操作来管理广告信息，详情见表5.5。 5.8 查看个人信息&nbsp;&nbsp;&nbsp;&nbsp;后台系统管理员可以查看个人的用户名，密码，邮箱，手机号等信息，由于时间有限，这里以只实现了查看用户名，密码的功能，见下图所示，其他功能后期添加。&nbsp;&nbsp;&nbsp;&nbsp;由于系统管理员在登陆系统后把个人信息存到redis数据库中，在页面初始化时从redis数据库中查找处个人信息从到cookie中，查看个人信息就是从cookie中提取数据并设置到页面中，具体代码如下： 12345678910//初始化$scope.adminEntity=&#123;&#125;;$scope.init=function () &#123; console.log($.cookie(&#x27;key&#x27;)); adminManageService.init($.cookie(&#x27;key&#x27;)).success(function (res) &#123; console.log(res) $scope.adminEntity=res; &#125;);&#125; 5.9 修改个人信息&nbsp;&nbsp;&nbsp;&nbsp;后台系统管理员也对用户名，密码，邮箱，手机号等信息进行修改，点击个人信息修改按钮进入页面修改个人信息，修改后点击保存等检查填写的信息无误后提示完成修改，为了确保用户名字段的唯一性，用户名一项无法修改。主要代码以controller层为例: 1234567891011121314@RequestMapping(&quot;editAdmin&quot;) public Result editAdmin(@RequestBody AdminUser adminUser)&#123; try &#123; adminManageServiceImpl.editAdmin(adminUser); redisTemplate.boundValueOps(adminUser.getUser()).set(adminUser); return new Result(true, &quot;修改成功&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); return new Result(false, &quot;修改失败&quot;); &#125; &#125; 5.10 用户登录&nbsp;&nbsp;&nbsp;&nbsp;用户在进行机票预定，留言评论等功能时需要登录前台系统后才能进行，在浏览器地址栏输入http://localhost:8081/flyTicket-portal-web/default/login.html回车进入如下图所示界面。 &nbsp;&nbsp;&nbsp;&nbsp;用户进行到登录界面，输入正确的用户名和密码就可以登录到前台系统，登录顺序图如下图所示。主要代码以controller层代码为例： 12345678910111213141516171819202122232425app.controller(&#x27;portalLoginManageController&#x27;,function($scope,$controller,portalLoginManageService)&#123; $controller(&#x27;baseController&#x27;,&#123;$scope:$scope&#125;); //初始化 $scope.userEntity=&#123;userName:null,userPwd:null&#125;; $scope.login=function()&#123; if($scope.userEntity.userName==null || $scope.userEntity.userName.trim()==&quot;&quot;)&#123; alert(&quot;用户名为空&quot;); &#125; else&#123; if($scope.userEntity.userPwd==null || $scope.userEntity.userPwd.trim()==&quot;&quot;)&#123; alert(&quot;密码为空&quot;); &#125; else&#123; portalLoginManageService.login($scope.userEntity).success(function(res)&#123; if(res.result==false)&#123; alert(res.message) &#125; else&#123; window.location.href=&quot;index.html#?key=&quot;+$scope.userEntity.userName; &#125; &#125;); &#125; &#125;; &#125;&#125;); 5.11 航班信息展示&nbsp;&nbsp;&nbsp;&nbsp;在浏览器地址栏输入http://localhost:8081/flyTicket-portal-web/default/index.html出现如下图所示界面，首页面展示所有航班信息。每一条信息包含出发城市、到达城市、出发机场、到达机场，出发时间、到达时间、机票价格等信息。 5.12 航班信息查询&nbsp;&nbsp;&nbsp;&nbsp;用户可以通过航班查询功能精确查找到所需信息，节省时间简化操作。通过输入航班类型、出发时间、出发城市、到达城市等搜索条件实现航班查询。比图以成都为到达城市为例，搜索结果如下图所示。代码以dao层PortalManageMapper.xml类例： 12345678910111213141516171819&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &gt;&lt;mapper namespace=&quot;com.cafuc.mapper.IPortalManageMapper&quot;&gt; &lt;select id=&quot;select&quot; resultType=&quot;com.cafuc.pojo.Flight&quot;&gt; select * from flight as f &lt;where&gt; &lt;if test=&quot;flightStartTime1 !=null and flightStartTime1 !=&#x27;&#x27;&quot;&gt; and f.flight_start_time like concat(&#x27;%&#x27;,#&#123;flightStartTime1&#125;,&#x27;%&#x27;) &lt;/if&gt; &lt;if test=&quot;flightStartPlace !=null and flightStartPlace !=&#x27;&#x27;&quot;&gt; and f.flight_start_place like concat(&#x27;%&#x27;,#&#123;flightStartPlace&#125;,&#x27;%&#x27;) &lt;/if&gt; &lt;if test=&quot;flightEndPlace !=null and flightEndPlace !=&#x27;&#x27;&quot;&gt; and f.flight_end_place like concat(&#x27;%&#x27;,#&#123;flightEndPlace&#125;,&#x27;%&#x27;) &lt;/if&gt; &lt;/where&gt; &lt;/select&gt;&lt;/mapper&gt; 5.13 航班信息详情&nbsp;&nbsp;&nbsp;&nbsp;航班信息详情是对某一航班信息的详细情况进行展示，如下图所示。用户点击选定航班，航班详细信息以下拉列表的形式展现给用户。主要代码如下： 1234567891011121314151617181920212223242526272829303132333435//保留n位小数 $scope.weishu=function(price,n)&#123; return new Number(price).toFixed(n); &#125; //下拉详情 $scope.lists=function(flightNumber)&#123; //收缩状态 if($(&quot;#F_&quot;+flightNumber).is(&quot;:visible&quot;))&#123; $scope.reloadList(); &#125; $(&quot;#F_&quot;+flightNumber).animate(&#123; height:&#x27;toggle&#x27; &#125;); &#125; //判断最低价 $scope.minPrice=function(flightHighPrice,flightMiddlePrice,flightBasePrice)&#123; return (flightHighPrice&lt;=flightMiddlePrice?flightHighPrice:flightMiddlePrice)&lt;=flightBasePrice?(flightHighPrice&lt;=flightMiddlePrice?flightHighPrice:flightMiddlePrice):flightBasePrice &#125; //判断是否有票 $scope.isKickets=function(kicketsNumber,flightNumber,temp)&#123; /*console.log(flightNumber)*/ if(kicketsNumber&gt;0)&#123; $(&quot;#&quot;+temp+&quot;_&quot;+flightNumber).css(&#123; color:&quot;green&quot; &#125;); return &quot;有票&quot;; &#125; else&#123; $(&quot;#&quot;+temp+&quot;_&quot;+flightNumber).css(&#123; color:&quot;red&quot; &#125;); return &quot;无票&quot;; &#125; &#125; 5.14 登录用户信息展示&nbsp;&nbsp;&nbsp;&nbsp;游客访问前台系统时，在页面头部显示“请登录”字样，如下图所示信息，而网站用户登录后则显示“您好，XXX”字样，如下图所示。 5.15 留言板&nbsp;&nbsp;&nbsp;&nbsp;点击前台系统右上角“留言板”按钮进入都留言页面如下图所示。留言评论是前台系统使用者完成注册后具有的功能，用户可以通过留言评论功能对所购班次机票进行全方位的评价，也可以对其在使用过程中遇到的问题进行反馈。 主要代码以前台系统controller层DiscussManageController.java类例： 12345678910111213141516171819202122232425262728293031323334353637383940package com.cafuc.controller;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.List;import javax.annotation.Resource;import org.apache.commons.collections.FastArrayList;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import com.cafuc.pojo.Discuss;import com.cafuc.pojo.Flight;import com.cafuc.pojo.PageResult;import com.cafuc.pojo.Result;import com.cafuc.service.IDiscussManageService;import com.cafuc.service.IPortalManageService;@RestController@RequestMapping(&quot;discussManage&quot;)public class DiscussManageController &#123; @Resource private IDiscussManageService discussManageService; @RequestMapping(&quot;addDiscuss&quot;) public Result addDiscuss(@RequestBody Discuss discuss)&#123; try &#123; System.out.println(discuss); discussManageService.addDiscuss(discuss); return new Result(true, &quot;评论成功&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); return new Result(false, &quot;评论失败&quot;); &#125; &#125; @RequestMapping(&quot;init&quot;) public List&lt;Discuss&gt; init()&#123; return discussManageService.init(); &#125;&#125; 5.16 订单填写&nbsp;&nbsp;&nbsp;&nbsp;订单填写是机票预定中不可缺少的步骤之一，用户找到自己所需班次后点击订票按钮进入订单信息填写页面，用户所填写的信息包括乘机人信息和联系人信息量大模块，如下图所示。填写完信息后点击提交订单按钮，等待验证数据的有效性，确定填写无误后完成提交，填写订单的前提是用户已经登录系统。 5.17 订单详情&nbsp;&nbsp;&nbsp;&nbsp;填写订单信息完成订单提交后弹出订单详情页面提示用户检查航班信息和填写的用户信息，如下图所示。确保信息无误后点击确认付款按钮跳转到订单支付页面。订单确认功能主要代码如下： 12345678910111213141516@RequestMapping(&quot;/ack&quot;) public void ack(Order order,HttpServletRequest request,HttpServletResponse response) throws IOException &#123; try &#123; if(order.getOrderDate() ==null) &#123; order.setOrderDate(new Date()); &#125; HttpSession httpSession=request.getSession(); httpSession.setAttribute(&quot;order&quot;, order); System.out.println(request.getSession().getAttribute(&quot;order&quot;)); response.sendRedirect(request.getContextPath()+&quot;/pay/index.jsp&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); &#125; &#125; 5.18 订单支付&nbsp;&nbsp;&nbsp;&nbsp;机票预订系统的订单支付功能使用的是支付宝沙箱环境支付，蚂蚁沙箱环境 (Beta) 是协助开发者进行接口功能开发及主要功能联调的辅助环境。登录支付宝沙箱平台依次完成生成买家和卖家账号信息、生成RSA秘钥、设置公钥信息、设置应用网关等应用环境配置。完成配置后下载官方测试代码，本系统选择的是电脑应用java版本，然后将下载的项目导入到eclipse工作空间。最后设置核心配置文件信息，打开flyTicket-portal-web项目下com.alipay.config包中的AlipayConfig.java文件配置如下信息：//沙箱APPIDpublic static final String app_id = “这里需要自己申请“;//沙箱私钥public static final String merchant_private_key = “这里需要自己申请“;//支付宝公钥public static final String alipay_public_key = “这里需要自己申请“;//沙箱网关地址public static final String gatewayUrl = “https://openapi.alipaydev.com/gateway.do&quot;; //服务器异步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 public static String notify_url = “http://localhost:8081/flyTicket-portal-web/pay/notify_url.jsp&quot;; //页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 public static String return_url = “http://localhost:8081/flyTicket-portal-web/orderManage/complete&quot;;完成以上配置后就可以实现订单支付功能了。点击确认付款后跳转到如下图所示界面。&nbsp;&nbsp;&nbsp;&nbsp;点击付款按钮后如下图所示，可以登录账户付款，也可以使用手机端沙箱支付宝完成付款。&nbsp;&nbsp;&nbsp;&nbsp;完成付款后如下图所示主要代码如下： 1234567891011121314151617181920212223242526//支付完成后@RequestMapping(&quot;complete&quot;)public void complete(HttpServletRequest request,HttpServletResponse response) throws IOException &#123; System.out.println(request.getSession().getAttribute(&quot;order&quot;)); Order order=(Order)request.getSession().getAttribute(&quot;order&quot;); try &#123; //将数据插入到订单表中 orderManageService.insertOrder(order); //更改库存 Flight flight=orderManageService.findOneByFlightNumber(order.getFlightNumber()); if(order.getGrade().equals(&quot;f&quot;)) &#123; flight.setFlightHighNumber(flight.getFlightHighNumber()-1); &#125; else if(order.getGrade().equals(&quot;b&quot;)) &#123; flight.setFlightMiddleNumber(flight.getFlightMiddleNumber()-1); &#125; else &#123; flight.setFlightBaseNumber(flight.getFlightBaseNumber()-1); &#125; orderManageService.updatesNum(flight); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; response.sendRedirect(request.getContextPath()+&quot;/default/index.html&quot;); &#125; 获取源码请关注公众号：C you again，回复“基于web的机票管理系统”或者“机票管理系统”","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"机票管理系统","slug":"机票管理系统","permalink":"https://cyouagain.cn/tags/%E6%9C%BA%E7%A5%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"后端开发","slug":"后端开发","permalink":"https://cyouagain.cn/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"}]},{"title":"基于SSM框架的JavaWeb通用权限管理系统","slug":"基于SSM框架的JavaWeb通用权限管理系统","date":"2020-10-02T07:47:56.634Z","updated":"2020-10-02T14:42:21.248Z","comments":true,"path":"posts/31183.html","link":"","permalink":"https://cyouagain.cn/posts/31183.html","excerpt":"","text":"查看更多系统：系统大全，课程设计、毕业设计，请点击这里查看01 概述这是一个通用权限管理系统项目，基于SSM（Spring + Spring-MVC +Mybatis）框架开发，其SQL语句持久在Hibernate 中，对原生SQL的支持较好。制作该系统的初衷是用来帮助JavaWeb开发者或初学者学习、借鉴的需要。读者可以在这个 系统基础上引入其它技术或完全依赖本系统技术进行功能拓展，来开发实际应用需求的项目，免去了应用系统中对于“ 权限设计”这一部分的麻烦。 02 技术 Jsp 、SSM（Spring + Spring-MVC + Mybatis）、Shiro 、Mvc、Jdbc、MySQL、DWZ富客户端框架 + Jquery + Ajax 03 环境 JDK:JDK1.6+ 、WEB:Tomcat6.0+ 、DB:MySQL5+ 、IDE: MyEclipse8.5+/Eclipse4.4+ 04 工程结构 05 运行截图登录界面 员工管理界面 部门管理界面 角色管理界面 06 主要代码员工部门管理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131package com.kzfire.portal.action.user;import java.util.List;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;import com.kzfire.portal.base.BaseAction;import com.kzfire.portal.entiy.SysDept;import com.kzfire.portal.service.DeptService;import com.kzfire.portal.service.UserService;import com.kzfire.portal.utils.JSONUtils;import com.kzfire.portal.utils.VoFactory;import com.kzfire.portal.vo.ConditionVo;@RequestMapping(&quot;/user/dept&quot;)@Controllerpublic class DeptAction extends BaseAction&#123; @Autowired DeptService deptService; @Autowired UserService userService; /** * 设置员工部门 * @param model * @param request * @param response * @return */ @RequestMapping(&quot;/setUserDept&quot;) public String setUserDept(Model model,HttpServletRequest request,HttpServletResponse response) &#123; String userId=request.getParameter(&quot;userId&quot;); model.addAttribute(&quot;userId&quot;, userId); //设置部门树 List&lt;SysDept&gt; list=deptService.getAllDept(); model.addAttribute(&quot;data&quot;, JSONUtils.parseList(list)); return VIEW+&quot;user/dept/setUserDept&quot;; &#125; @RequestMapping(&quot;/saveUserdept&quot;) public ModelAndView saveUserdept(Model model, HttpServletRequest request, HttpServletResponse response) &#123; try &#123; Integer userId=Integer.parseInt(request.getParameter(&quot;userId&quot;)); Integer deptId=Integer.parseInt(request.getParameter(&quot;deptId&quot;)); deptService.saveUserdept(userId,deptId); &#125; catch (Exception e) &#123; e.printStackTrace(); return ajaxDoneError(&quot;操作失败:&quot;+e.getMessage()); &#125; return ajaxDoneSuccess(&quot;操作成功&quot;); &#125; @RequestMapping(&quot;/main&quot;) public String list(Model model,HttpServletRequest request,HttpServletResponse response) &#123; //设置部门树 List&lt;SysDept&gt; list=deptService.getAllDept(); System.out.println(&quot;json格式-----&gt;&quot; + JSONUtils.parseList(list).toString() ); model.addAttribute(&quot;data&quot;, JSONUtils.parseList(list)); return VIEW+&quot;user/dept/dept&quot;; &#125; @RequestMapping(&quot;/userList&quot;) public String userList(Model model,HttpServletRequest request,HttpServletResponse response) &#123; ConditionVo cvo=VoFactory.getConditionVo(request); String deptId=request.getParameter(&quot;deptId&quot;); if(&quot;1&quot;.equals(deptId)) &#123; cvo.setText4(&quot;1&quot;); &#125;else &#123; cvo.setText3(request.getParameter(&quot;deptId&quot;)); &#125; request.setAttribute(&quot;deptId&quot;, deptId); cvo.setTotalCount(userService.getUserCount(cvo)); model.addAttribute(&quot;vo&quot;, cvo); model.addAttribute(&quot;list&quot;, userService.getList(cvo)); return VIEW+&quot;user/dept/userList&quot;; &#125; @RequestMapping(&quot;/add&quot;) public String add(Model model,HttpServletRequest request,HttpServletResponse response) &#123; SysDept dept=new SysDept(); dept.setPid(Integer.parseInt(request.getParameter(&quot;selDept&quot;))); model.addAttribute(&quot;dept&quot;, dept); return VIEW+&quot;user/dept/deptEdit&quot;; &#125; @RequestMapping(&quot;/edit&quot;) public String edit(Model model,HttpServletRequest request,HttpServletResponse response) &#123; SysDept dept=deptService.getDeptById(Integer.parseInt(request.getParameter(&quot;selDept&quot;))); model.addAttribute(&quot;dept&quot;, dept); return VIEW+&quot;user/dept/deptEdit&quot;; &#125; @RequestMapping(&quot;/del&quot;) public ModelAndView del(Model model, HttpServletRequest request) &#123; try &#123; String deptId=request.getParameter(&quot;selDept&quot;); deptService.delDeptById(Integer.parseInt(deptId)); &#125; catch (Exception e) &#123; e.printStackTrace(); return ajaxDoneError(&quot;操作失败:&quot;+e.getMessage()); &#125; return ajaxDoneSuccess(&quot;操作成功&quot;); &#125; @RequestMapping(&quot;/save&quot;) public ModelAndView save(SysDept dept,Model model, HttpServletRequest request, HttpServletResponse response) &#123; try &#123; if(dept!=null) &#123; deptService.saveDept(dept); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); return ajaxDoneError(&quot;操作失败:&quot;+e.getMessage()); &#125; return ajaxDoneSuccess(&quot;操作成功&quot;); &#125;&#125; 角色管理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112package com.kzfire.portal.action.user;import java.util.List;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;import com.kzfire.portal.base.BaseAction;import com.kzfire.portal.entiy.SysRole;import com.kzfire.portal.service.RoleService;import com.kzfire.portal.utils.VoFactory;import com.kzfire.portal.vo.ConditionVo;import com.kzfire.portal.vo.PerGroupVo;@RequestMapping(&quot;/user/role&quot;)@Controllerpublic class RoleAction extends BaseAction&#123; @Autowired RoleService roleService; @RequestMapping(&quot;/list&quot;) public String list(Model model,HttpServletRequest request,HttpServletResponse response) &#123; ConditionVo cvo=VoFactory.getConditionVo(request); cvo.setTotalCount(roleService.getTableCount(&quot;sys_role&quot;)); model.addAttribute(&quot;vo&quot;, cvo); model.addAttribute(&quot;list&quot;, roleService.getList(cvo)); return VIEW+&quot;permission/role/list&quot;; &#125; /** * 权限编辑页面 * @param model * @param request * @return */ @RequestMapping(&quot;/editPermission&quot;) public String editPermission(Model model, HttpServletRequest request) &#123; String roleId=request.getParameter(&quot;roleId&quot;); //获取角色权限 List&lt;PerGroupVo&gt; group=roleService.getPerGroupVoByUserId(Integer.parseInt(roleId)); model.addAttribute(&quot;group&quot;, group); model.addAttribute(&quot;roleId&quot;, roleId); return VIEW+&quot;permission/role/editPermission&quot;; &#125; @RequestMapping(&quot;/savePer&quot;) public ModelAndView savePer(Model model, HttpServletRequest request, HttpServletResponse response) &#123; try &#123; String[] perIds=request.getParameterValues(&quot;perId&quot;); roleService.savePermission(perIds,Integer.parseInt(request.getParameter(&quot;roleId&quot;))); &#125; catch (Exception e) &#123; e.printStackTrace(); return ajaxDoneError(&quot;操作失败&quot;); &#125; return ajaxDoneSuccess(&quot;操作成功&quot;); &#125; @RequestMapping(&quot;/add&quot;) public String add(Model model, HttpServletRequest request) &#123; model.addAttribute(&quot;role&quot;, new SysRole()); return VIEW+&quot;permission/role/roleEdit&quot;; &#125; @RequestMapping(&quot;/edit&quot;) public String edit(Model model, HttpServletRequest request) &#123; String roleId=request.getParameter(&quot;roleId&quot;); SysRole role=roleService.getRoleById(Integer.parseInt(roleId)); model.addAttribute(&quot;role&quot;, role); return VIEW+&quot;permission/role/roleEdit&quot;; &#125; @RequestMapping(&quot;/del&quot;) public ModelAndView del(Model model, HttpServletRequest request) &#123; try &#123; String roleId=request.getParameter(&quot;roleId&quot;); roleService.delRoleById(Integer.parseInt(roleId)); &#125; catch (Exception e) &#123; e.printStackTrace(); return ajaxDoneError(&quot;操作失败&quot;); &#125; return ajaxDoneSuccess(&quot;操作成功&quot;); &#125; @RequestMapping(&quot;/save&quot;) public ModelAndView save(SysRole role,Model model, HttpServletRequest request, HttpServletResponse response) &#123; if(role!=null) &#123; roleService.saveShop(role); &#125; return ajaxDoneSuccess(&quot;操作成功&quot;); &#125; &#125; 07 其它1、MySQL数据库账户 MySQL数据库默认端口：“3306”、数据库名：“kzfire”、账户名：“root”、密码：空。 2、SQL文件 SQL文件放在“MySQL数据库SQL文件” 目录，需通过“Navicat for MySQL”工具执行此SQL文件。 3、系统启动文件 系统启动文件是“webroot”目录下的“login.jsp” 4、系统登录用户名及密码 “login.jsp”启动（运行）后，正常情况下进入登录界面，用户名输入“admin”,密码输入“123456”。如果登录不进去，很有可能是数据库参数配置问题导致，请检查数据库参数配置文件，数据库参数配置文件放 08 源码下载关注公众号【C you again】，回复“基于SSM框架的JavaWeb通用权限管理系统”免费领取。亦可直接扫描主页二维码关注，回复“基于SSM框架的JavaWeb通用权限管理系统”免费领取，点此打开个人主页 说明：此源码来源于网络，若有侵权，请联系删除！！","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"权限管理系统","slug":"权限管理系统","permalink":"https://cyouagain.cn/tags/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"基于SSM的宿舍管理系统（附 演示、源码下载地址）","slug":"基于SSM的宿舍管理系统（附 演示、源码下载地址）","date":"2020-10-02T07:47:56.631Z","updated":"2020-10-02T14:41:48.878Z","comments":true,"path":"posts/51512.html","link":"","permalink":"https://cyouagain.cn/posts/51512.html","excerpt":"","text":"宿舍管理是高校管理的重要组成部分，一套优秀的管理系统不仅可以降低宿舍管理的难度，也能在一定程度上减少学校管理费用的支出，能是建设现代化高校管理体系的重要标志。 本篇文章将带你从运行环境搭建、系统设计、系统编码到整个系统的实现，对整个过程进行详细描述，特别适合作为程序员的进阶项目案列，同样也是高校学生毕业设计系统实现的不二之选！ 演示地址：宿舍管理系统演示地址，点我查看1、系统架构模式本宿舍管理系统采用B/S架构模式。 B/S架构的全称为Browser/Server，即浏览器/服务器结构。Browser指的是Web浏览器，与C/S架构相比，B/S模式极少数事务逻辑在前端实现，它的主要事务逻辑在服务器端实现。B/S架构的系统无须特别安装，只有Web浏览器即可。 B/S架构的分层： 与C/S架构只有两层不同的是，B/S架构有三层，分别为： 第一层表现层：主要完成用户和后台的交互及最终查询结果的输出功能。 第二层逻辑层：主要是利用服务器完成客户端的应用逻辑功能。 第三层数据层：主要是进行数据持久化存储。 2、技术选型选择合适的技术，整个项目就已经成功了一半，经过对系统需求和系统自身特点的分析，加上现代B/S模式主流架构解决方案，对本系统技术选型如下： 数据表现层： Html+JavaScript+CSS+VUE 业务逻辑层 Java+Spring+SpringMVC 数据持久层： MySql+MyBatis 开发工具： Eclipse 3、用户分析本系统主要应用于高校宿舍管理，使用人群如下： 系统管理员：管理整个系统的安全运行，各个功能使用。 宿舍管理员：管理自己负责的宿管和学生 学生：查看浏览信息，提交任务 4、功能分析系统管理员： 添加、修改、删除公告信息 添加、修改、删除宿舍管理员信息 添加、修改、删除学生信息 宿舍楼管理及其宿舍管理员分配 学生寝室管理 发布考勤、打卡任务 查看、修改个人信息 宿舍管理员： 查看公告 查看、删除自己管理的学生 添加、修改、删除考勤记录 查看学生打卡记录 查看、修改个人信息 学生： 查看公告 查看考勤记录 完成打卡任务，查看打卡记录 查看、修改个人信息 5、数据库设计分析系统需求，数据库应有以下几张表： t_admin: 主要用于存储系统管理员数据 字段名称 类型 是否主键 说明 adminId int 是 管理员Id，唯一 userName varchar 否 用户名 password varchar 否 密码 name varchar 否 真实名称 sex varchar 否 性别 sex varchar 否 电话 t_dormbuild: 存储宿舍楼信息 字段名称 类型 是否主键 说明 dormBuildId int 是 宿舍楼Id，唯一 dormBuildName varchar 否 宿舍楼名称 dormBuildDetail varchar 否 描述 t_dormmanager： 主要存储宿舍管理员信息 字段名称 类型 是否主键 说明 dormManId varchar 是 宿舍管理员Id，唯一 userName varchar 否 用户名，用于登录系统 password varchar 否 密码 dormBuildId int 否 宿舍楼Id dormBuildDetail varchar 否 描述 name varchar 否 真实姓名 sex varchar 否 性别 tel varchar 否 电话 t_notice: 用于存储公告信息 字段名称 类型 是否主键 说明 noticeId int 是 公告Id，唯一 noticePerson varchar 否 公告发布人 date date 否 公告发布日期 content varchar 否 发布内容 t_punchclock： 用于存储打卡发布记录 字段名称 类型 是否主键 说明 id int 是 Id，唯一 theme varchar 否 打卡主题 detail varchar 否 打卡说明 date varchar 否 发布日期 person varchar 否 发布人 t_punchclockrecord： 用于存储打卡信息 字段名称 类型 是否主键 说明 id int 是 记录Id，唯一 punchClock_id varchar 否 打卡Id punchClock_date date 否 发布日期 punchClock_theme varchar 否 打卡主题 punchClock_detail varchar 否 打卡说明 punchClock_person varchar 否 发布人 name varchar 否 学生姓名 dormName varchar 否 寝室号 tel varchar 否 学生电话 stuNum varchar 否 学生学号 dormBuildId int 否 宿舍楼 isRecord tinyint 否 是否已经打卡 t_record： 用于存储考勤记录 字段名称 类型 是否主键 说明 recordId int 是 考勤Id，唯一 studentNumber varchar 否 学生学号 dormBuildId int 否 宿舍楼 dormName varchar 否 寝室号 date varchar 否 考勤日期 detail varchar 否 详细说明 t_student: 学生表，用于存放学生信息 字段名称 类型 是否主键 说明 studentId int 是 学生Id，唯一 stuNum varchar 否 学号 password varchar 否 密码 name varchar 否 姓名 dormBuildId int 否 宿舍楼 dormName varchar 否 寝室号 sex varchar 否 性别 tel varchar 否 电话 6、运行环境搭建前面已经提到，本系统使用SSM框架，搭建过程较为繁琐，因此将此部分独立出来，作为一个专题，具体搭建过程请参考《手把手教你搭建SSM框架（Eclipse版）》 这篇文章。搭建过程若出现其他问题，可以在公众号【C you again】 后台私信。 7、项目工程结构根据第六步搭建完系统运行环境后，工程结构目录如下图所示 对工程结构各个目录的解释： 1com.cya.controller controller包用于存放接收请求的类，充当前后端数据交互的“桥梁” 1com.cya.service service包是所有业务逻辑的接口 1com.cya.service.impl service.impl包用于存放service接口的所有实现类 1com.cya.mapper mapper包用于存放对数据库操纵的接口和对应的xml实现 1com.cya.entity entity包用于存放项目中用到的所有实体类，它与数据库中的表相对应resources文件下存放SSM框架整合的必要配置文件，详情请看《手把手教你搭建SSM框架（Eclipse版）》dorm是存放所有model层文件的父级文件夹，其中admin，dormManager、student三个子文件夹存放系统管理员、宿舍管理员、学生三个角色对应的HTML文件。 8、功能实现及展示由于系统包含功能众多，在此无法一一列举，所以挑选几个代表做展示，如需获取完整源码请在公众号【C you again】回复“宿舍管理系统”。 8.1 登录功能实现项目启动成功后，在浏览器地址栏输入：http://localhost:8080/dormManage/ 进入用户登录界面如下图所示： 在此界面用户可以选择不同的角色登录，输入每个角色对应的登录信息后，首先会判断输入信息的有效性，做出相应的响应或提示。登录功能具体的实现代码如下，此处仅展示controller层代码，如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566package com.cya.controller;import java.util.ArrayList;import java.util.List;import java.util.Map;import javax.management.relation.Role;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;import org.apache.tomcat.util.digester.ArrayStack;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import com.cya.entity.Login;import com.cya.entity.Result;import com.cya.service.ILoginService;import com.cya.service.impl.LoginServiceImpl;@Controller@ResponseBodypublic class LoginController &#123; @Autowired private ILoginService loginServiceImpl; @RequestMapping(&quot;login&quot;) public List login(HttpServletRequest request, @RequestBody Login login) &#123; List list=loginServiceImpl.login(login); if(list.size()==1) &#123; HttpSession session=request.getSession(); session.setAttribute(login.getRole(), list); System.out.println(&quot;session=&quot;+session.getAttribute(login.getRole())); &#125; return list; &#125; @RequestMapping(&quot;getSession&quot;) public List getSession(HttpServletRequest request,@RequestBody Login login)&#123; System.out.println(login); System.out.println(request.getSession().getAttribute(login.getRole())); List list=new ArrayList&lt;&gt;(); list.add(request.getSession().getAttribute(login.getRole())); return list; &#125; @RequestMapping(&quot;exitSys&quot;) public Result exitSys(HttpServletRequest request) &#123; String exit=&quot;&quot;; try &#123; if(request.getParameter(&quot;exit&quot;)!=null) &#123; exit=request.getParameter(&quot;exit&quot;); &#125; request.getSession().removeAttribute(exit); return new Result(true, &quot;注销成功&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); return new Result(false, &quot;注销失败&quot;); &#125; &#125;&#125; 8.2 发布公告功能实现在系统管理员端，有发布公告的权限，系统管理员点击添加公告按钮，输入相关信息后进行有效性校验，校验成功及代表公告发布成功。 成功发布公告后，会出现在宿舍管理员端和学生端界面，效果图如下： 公告模块主要代码以mapper层实现为例： 1234567891011121314151617181920212223242526272829&lt;!-- ******************** 公告 ******************* --&gt; &lt;select id=&quot;getNoticeManage&quot; resultType=&quot;com.cya.entity.Notice&quot;&gt; select * from t_notice &lt;where&gt; &lt;if test=&quot;filter==&#x27;date&#x27; and key !=&#x27;&#x27; &quot;&gt; date like concat(&quot;%&quot;,#&#123;key&#125;,&quot;%&quot;) &lt;/if&gt; &lt;/where&gt; &lt;/select&gt; &lt;insert id=&quot;addNoticeManage&quot; parameterType=&quot;com.cya.entity.Notice&quot;&gt; insert into t_notice(noticePerson,date,content) values(#&#123;noticePerson&#125;,current_date,#&#123;content&#125;) &lt;/insert&gt; &lt;select id=&quot;getNoticeMangerById&quot; parameterType=&quot;Integer&quot; resultType=&quot;com.cya.entity.Notice&quot;&gt; select * from t_notice where noticeId=#&#123;noticeId&#125; &lt;/select&gt; &lt;update id=&quot;updataNoticeManageById&quot; parameterType=&quot;com.cya.entity.Notice&quot;&gt; update t_notice set noticePerson=#&#123;noticePerson&#125;,content=#&#123;content&#125; where noticeId=#&#123;noticeId&#125; &lt;/update&gt; &lt;delete id=&quot;noticeManagerDeleteById&quot; parameterType=&quot;Integer&quot;&gt; delete from t_notice where noticeId=#&#123;noticeId&#125; &lt;/delete&gt;&lt;!-- ******************** 公告 ******************* --&gt; 8.3 考勤记录功能实现宿舍管理员根据自己所管理楼，对住在管理范围内的学生进行考勤，并添加考勤记录，学生端也会显示考勤信息。 主要实现代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667@RequestMapping(&quot;/getRecordMsg&quot;) public PageResult getRecordMsg(HttpServletRequest request)&#123; Integer pageNum=1; Integer pageSize=20; Integer dormBuildId=0; String filter=request.getParameter(&quot;filter&quot;); String key=request.getParameter(&quot;key&quot;); if(request.getParameter(&quot;pageNum&quot;)!=null &amp;&amp; request.getParameter(&quot;pageNum&quot;)!=&quot;&quot;) &#123; pageNum=Integer.parseInt(request.getParameter(&quot;pageNum&quot;)); &#125; if(request.getParameter(&quot;pageSize&quot;)!=null &amp;&amp; request.getParameter(&quot;pageSize&quot;)!=&quot;&quot;) &#123; pageSize=Integer.parseInt(request.getParameter(&quot;pageSize&quot;)); &#125; if(request.getParameter(&quot;dormBuildId&quot;)!=null &amp;&amp; request.getParameter(&quot;dormBuildId&quot;)!=&quot;&quot;) &#123; dormBuildId=Integer.parseInt(request.getParameter(&quot;dormBuildId&quot;)); &#125; System.out.println(&quot;pageNum=&quot;+pageNum); System.out.println(&quot;pageSize=&quot;+pageSize); return dormManageServiceImpl.getRecordMsg(pageNum, pageSize, filter, key, dormBuildId); &#125; @RequestMapping(&quot;getRecordById&quot;) public Record getRecordById(Integer recordId) &#123; return dormManageServiceImpl.getRecordById(recordId); &#125; @RequestMapping(&quot;updataRecordMsg&quot;) public Result updataRecordMsg(@RequestBody Record record) &#123; try &#123; dormManageServiceImpl.updataRecordMsg(record); return new Result(true, &quot;更新成功&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); return new Result(false, &quot;更新失败&quot;); &#125; &#125; @RequestMapping(&quot;addRecordMsg&quot;) public Result addRecordMsg(@RequestBody Record record) &#123; try &#123; System.out.println(record); dormManageServiceImpl.addRecordMsg(record); return new Result(true, &quot;添加成功&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); return new Result(false, &quot;添加失败&quot;); &#125; &#125; @RequestMapping(&quot;recordManagerDeleteById1&quot;) public Result recordManagerDeleteById(HttpServletRequest request) &#123; Integer recordId=0; if(request.getParameter(&quot;recordId&quot;)!=null &amp;&amp; request.getParameter(&quot;recordId&quot;)!=&quot;&quot;) &#123; recordId=Integer.parseInt(request.getParameter(&quot;recordId&quot;)); &#125; try &#123; dormManageServiceImpl.recordManagerDeleteById1(recordId); return new Result(true, &quot;删除成功&quot;); &#125; catch (Exception e) &#123; // TODO: handle exception e.printStackTrace(); return new Result(false, &quot;删除失败&quot;); &#125; &#125; 9、源码下载若需获取本系统源码请在公众号【C you again】回复“宿舍管理系统” 你也可以点击此链接快速回复 10、相关说明 制作不易，记得点赞+收藏+转发 本人技术有限，若有错误欢迎指正 本系统和文章均属于【C you again】原创，欢迎个人博客、各大网站转载，但请注明转载地址 演示地址：宿舍管理系统演示","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"宿舍管理系统","slug":"宿舍管理系统","permalink":"https://cyouagain.cn/tags/%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"寝室管理系统","slug":"寝室管理系统","permalink":"https://cyouagain.cn/tags/%E5%AF%9D%E5%AE%A4%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"基于ssm的客户管理系统","slug":"基于ssm的客户管理系统","date":"2020-10-02T07:47:56.628Z","updated":"2020-10-02T14:41:24.612Z","comments":true,"path":"posts/5070.html","link":"","permalink":"https://cyouagain.cn/posts/5070.html","excerpt":"","text":"查看更多系统：系统大全，课程设计、毕业设计，请点击这里查看01 概述一个简单的客户关系管理系统 管理用户的基本数据 客户的分配 客户的流失 已经客户的状态 02 技术 ssm + jdk1.8 + mysql5.4 03 运行环境 ecplice + jdk1.8 + tomcat 04 功能1- 字典管理 2- 用户管理 3- 角色管理 4- 权限管理 5- 部门管理 6-客户信息管理 7-数据添加-编辑-删除 8-客户信息的跟进 9-客户信息状态 05 运行截图客户信息 跟进信息 登录信息 权限管理 06 主要代码客户信息package com.controller;import java.text.SimpleDateFormat;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import com.dao.KhClientinfoMapper;import com.dao.KhHuiMapper;import com.dao.LogsMapper;import com.entity.KhClientinfo;import com.entity.KhHui;import com.entity.Logs;import com.util.Pagination;@Controller@RequestMapping(&quot;/khclient&quot;)public class KhClientinfoController extends BaseController&#123; @Resource//客户表 KhClientinfoMapper khclientDao; @Resource//客户跟进表 KhHuiMapper khhuiDao; @Resource LogsMapper logsDao; //客户表显示 @RequestMapping(&quot;/show&quot;) public String show(Integer index,HttpServletRequest request) &#123; int pageNO = 1; if(index!=null)&#123; pageNO = index; &#125; String names = (String) request.getSession().getAttribute(&quot;name&quot;); String relo = (String) request.getSession().getAttribute(&quot;relo&quot;); Pagination pager = new Pagination(); Map params = new HashMap(); params.put(&quot;start&quot;, (pageNO-1)*40); params.put(&quot;pagesize&quot;, 40); if(&quot;客服&quot;.equals(relo)) &#123; params.put(&quot;kefuname&quot;, names); &#125; List all = khclientDao.show(params); pager.setData(all); pager.setIndex(pageNO); request.getSession().setAttribute(&quot;pageNO&quot;, pager.getIndex()); pager.setPageSize(40); pager.setTotal(khclientDao.getTotal()); pager.setPath(&quot;show.do?&quot;); request.setAttribute(&quot;pager&quot;, pager); return &quot;client/cl-show&quot;; &#125; //客户表新建 @RequestMapping(value = &quot;/add&quot;) public String add(KhClientinfo data,HttpServletRequest request) &#123; Date now = new Date(); SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);//设置时间显示格式 String str = sdf.format(now); String names = (String) request.getSession().getAttribute(&quot;name&quot;); data.setKehuday(str); data.setKefuname(names); data.setKhstate(&quot;未到访&quot;); Date time = null; if (&quot;A:已交房客户&quot;.equals(data.getKehulei())) &#123; time= new Date(now.getTime() + (long)3 * 24 * 60 * 60 * 1000);//加3天 &#125; if (&quot;B:3个月内交房客户&quot;.equals(data.getKehulei())) &#123; time= new Date(now.getTime() + (long)7 * 24 * 60 * 60 * 1000);//加7天 &#125; if (&quot;C:3-6交房客户&quot;.equals(data.getKehulei())) &#123; time= new Date(now.getTime() + (long)15 * 24 * 60 * 60 * 1000);//加15天 &#125; if (&quot;D:6个月以上交房客户&quot;.equals(data.getKehulei())) &#123; time= new Date(now.getTime() + (long)30 * 24 * 60 * 60 * 1000);//加30天 &#125; String stc = sdf.format(time); if (data.getKehutel().length()&gt;1) &#123; KhClientinfo khClient=khclientDao.tel(data.getKehutel()); if (khClient!=null) &#123; request.setAttribute(&quot;all&quot;, khClient.getKefuname()); return &quot;client/chongfu&quot;; &#125; &#125; khclientDao.insertSelective(data); KhClientinfo khClientinfo=khclientDao.isdn(); KhHui khHui=new KhHui(); khHui.setYuday(stc); khHui.setWenti(&quot;客户第一次跟进&quot;); khHui.setInid(khClientinfo.getId()); khHui.setScday(str); khhuiDao.insertSelective(khHui); Integer pagerNO=(Integer)request.getSession().getAttribute(&quot;pageNO&quot;); return &quot;redirect:/khclient/show?index=&quot;+pagerNO; &#125; //客户表删除 @RequestMapping(&quot;/&#123;id&#125;/del&quot;) public String del(@PathVariable(&quot;id&quot;) int id,HttpServletRequest request) &#123; SimpleDateFormat format = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;); // 时间字符串产生方式 String uid = format.format(new Date()); String names = (String) request.getSession().getAttribute(&quot;name&quot;); KhClientinfo khClientinfo=khclientDao.selectByPrimaryKey(id); Logs logs =new Logs(); logs.setDay(uid); logs.setLoname(names); logs.setLei(&quot;删除&quot;); logs.setBiaoid(khClientinfo.getKuhuname()+&quot;+&quot;+khClientinfo.getKehutel()); logs.setBiao(&quot;客户表及跟进详情&quot;); logsDao.insertSelective(logs); khclientDao.deleteByPrimaryKey(id); Integer pagerNO=(Integer)request.getSession().getAttribute(&quot;pageNO&quot;); String like=request.getParameter(&quot;like&quot;); if (like!=null&amp;&amp;like.length()&gt;0) &#123; return &quot;redirect:/khclient/like?index=&quot;+pagerNO; &#125;else &#123; return &quot;redirect:/khclient/show?index=&quot;+pagerNO; &#125; &#125; //客户表编辑前取数据 @RequestMapping(&quot;/&#123;id&#125;/load&quot;) public String load(@PathVariable(&quot;id&quot;) int id,HttpServletRequest request, ModelMap model) &#123; KhClientinfo record = (KhClientinfo) khclientDao.selectByPrimaryKey(id); model.addAttribute(&quot;record&quot;, record); String like=request.getParameter(&quot;like&quot;); if (like!=null) &#123; request.setAttribute(&quot;like&quot;, like); &#125; return &quot;client/cl-modify&quot;; &#125; //客户表编辑 @RequestMapping(value = &quot;/update&quot;) public String update(KhClientinfo data,HttpServletRequest request) &#123; khclientDao.updateByPrimaryKeySelective(data); Integer pagerNO=(Integer)request.getSession().getAttribute(&quot;pageNO&quot;); String like=request.getParameter(&quot;like&quot;); if (like!=null&amp;&amp;like.length()&gt;0) &#123; return &quot;redirect:/khclient/like?index=&quot;+pagerNO; &#125;else &#123; return &quot;redirect:/khclient/show?index=&quot;+pagerNO; &#125; &#125; //客户表模糊查找 @RequestMapping(&quot;/like&quot;) public String like(Integer index, KhClientinfo data,HttpServletRequest request) &#123; int pageNO = 1; if(index!=null)&#123; pageNO = index; &#125; Pagination pager = new Pagination(); Map params = new HashMap(); String lk=request.getParameter(&quot;lk&quot;); String names = (String) request.getSession().getAttribute(&quot;name&quot;); String relo = (String) request.getSession().getAttribute(&quot;relo&quot;); if (lk!=null&amp;&amp;lk.length()&gt;0) &#123; request.getSession().setAttribute(&quot;kuhuname&quot;,data.getKuhuname()); request.getSession().setAttribute(&quot;kehuaddres&quot;,data.getKehuaddres()); request.getSession().setAttribute(&quot;kehutel&quot;,data.getKehutel()); request.getSession().setAttribute(&quot;kehulei&quot;,data.getKehulei()); request.getSession().setAttribute(&quot;kehugenre&quot;,data.getKehugenre()); request.getSession().setAttribute(&quot;kaiday&quot;,data.getKaiday()); request.getSession().setAttribute(&quot;weixin&quot;,data.getWeixin()); request.getSession().setAttribute(&quot;channel&quot;,data.getChannel()); request.getSession().setAttribute(&quot;khstate&quot;,data.getKhstate()); request.getSession().setAttribute(&quot;kefuname&quot;,data.getKefuname()); request.getSession().setAttribute(&quot;kehuday&quot;,data.getKehuday()); request.getSession().setAttribute(&quot;qu&quot;,data.getQu()); request.getSession().setAttribute(&quot;an&quot;,data.getAn()); request.getSession().setAttribute(&quot;jiename&quot;,data.getJiename()); &#125; String qu= (String) request.getSession().getAttribute(&quot;qu&quot;); if(qu!=null&amp;&amp;qu.length()&gt;0) &#123; params.put(&quot;qu&quot;, qu); &#125; String an= (String) request.getSession().getAttribute(&quot;an&quot;); if(an!=null&amp;&amp;an.length()&gt;0) &#123; params.put(&quot;an&quot;, an); &#125; String jiename= (String) request.getSession().getAttribute(&quot;jiename&quot;); if(jiename!=null&amp;&amp;jiename.length()&gt;0) &#123; params.put(&quot;jiename&quot;, jiename); &#125; String kaiday= (String) request.getSession().getAttribute(&quot;kaiday&quot;); if(kaiday!=null&amp;&amp;kaiday.length()&gt;0) &#123; params.put(&quot;kaiday&quot;, kaiday); &#125; String weixin= (String) request.getSession().getAttribute(&quot;weixin&quot;); if(weixin!=null&amp;&amp;weixin.length()&gt;0) &#123; params.put(&quot;weixin&quot;, weixin); &#125; String channel= (String) request.getSession().getAttribute(&quot;channel&quot;); if(channel!=null&amp;&amp;channel.length()&gt;0) &#123; params.put(&quot;channel&quot;, channel); &#125; String khstate= (String) request.getSession().getAttribute(&quot;khstate&quot;); if(khstate!=null&amp;&amp;khstate.length()&gt;0) &#123; params.put(&quot;khstate&quot;, khstate); &#125; String kehuday= (String) request.getSession().getAttribute(&quot;kehuday&quot;); if(kehuday!=null&amp;&amp;kehuday.length()&gt;0) &#123; params.put(&quot;kehuday&quot;, kehuday); &#125; String kuhuname= (String) request.getSession().getAttribute(&quot;kuhuname&quot;); if(kuhuname!=null&amp;&amp;kuhuname.length()&gt;0) &#123; params.put(&quot;kuhuname&quot;, kuhuname); &#125; String kehuaddres= (String) request.getSession().getAttribute(&quot;kehuaddres&quot;); if(kehuaddres!=null&amp;&amp;kehuaddres.length()&gt;0) &#123; params.put(&quot;kehuaddres&quot;, kehuaddres); &#125; String kehugenre= (String) request.getSession().getAttribute(&quot;kehugenre&quot;); if(kehugenre!=null&amp;&amp;kehugenre.length()&gt;0) &#123; params.put(&quot;kehugenre&quot;, kehugenre); &#125; String kehulei= (String) request.getSession().getAttribute(&quot;kehulei&quot;); if(kehulei!=null&amp;&amp;kehulei.length()&gt;0) &#123; params.put(&quot;kehulei&quot;, kehulei); &#125; String kehutel= (String) request.getSession().getAttribute(&quot;kehutel&quot;); if(kehutel!=null&amp;&amp;kehutel.length()&gt;0) &#123; params.put(&quot;kehutel&quot;, kehutel); &#125; String kefuname= (String) request.getSession().getAttribute(&quot;kefuname&quot;); if(&quot;客服&quot;.equals(relo)) &#123; params.put(&quot;kefuname&quot;, names); &#125;else &#123; if(kefuname!=null&amp;&amp;kefuname.length()&gt;0) &#123; params.put(&quot;kefuname&quot;, kefuname); &#125; &#125; params.put(&quot;start&quot;, (pageNO-1)*40); params.put(&quot;pagesize&quot;,40); List all = khclientDao.like(params); pager.setData(all); pager.setIndex(pageNO); request.getSession().setAttribute(&quot;pageNO&quot;,pager.getIndex()); pager.setPageSize(40); pager.setTotal(khclientDao.getlikeTotal(params)); pager.setPath(&quot;like?&quot;); request.setAttribute(&quot;pager&quot;, pager); return &quot;client/cl-showlike&quot;; &#125;&#125; 用户登录123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106package com.controller;import java.util.*;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.RequestMapping;import com.dao.LogMapper;import com.dao.LogsMapper;import com.entity.Log;import com.util.Pagination;@Controller@RequestMapping(&quot;/log&quot;)public class LogController extends BaseController&#123; @Resource LogMapper logDao; @Resource LogsMapper logsDao; //登录信息显示 @RequestMapping(&quot;/show&quot;) public String show(Integer index,HttpServletRequest request,ModelMap model) &#123; int pageNO = 1; if(index!=null)&#123; pageNO = index; &#125; Pagination pager = new Pagination(); Map params = new HashMap(); params.put(&quot;start&quot;, (pageNO-1)*40); params.put(&quot;pagesize&quot;, 40); List all = logDao.show(params); pager.setData(all); pager.setIndex(pageNO); request.getSession().setAttribute(&quot;pageNO&quot;, pager.getIndex()); pager.setPageSize(40); pager.setTotal(logDao.getTotal()); pager.setPath(&quot;show.do?&quot;); request.setAttribute(&quot;pager&quot;, pager); return &quot;dept/denlu/show&quot;; &#125; //登录信息模糊查找 @RequestMapping(&quot;/like&quot;) public String like(Integer index, Log data,HttpServletRequest request) &#123; int pageNO = 1; if(index!=null)&#123; pageNO = index; &#125; Pagination pager = new Pagination(); Map params = new HashMap(); String lk=request.getParameter(&quot;lk&quot;); String account=&quot;&quot;; String onlineTime=&quot;&quot;; String exitTime=&quot;&quot;; if (lk!=null&amp;&amp;lk.length()&gt;0) &#123; request.getSession().setAttribute(&quot;account&quot;,data.getAccount()); request.getSession().setAttribute(&quot;onlineTime&quot;,data.getOnlineTime()); request.getSession().setAttribute(&quot;exitTime&quot;,data.getExitTime()); &#125; account=(String) request.getSession().getAttribute(&quot;account&quot;); onlineTime=(String) request.getSession().getAttribute(&quot;onlineTime&quot;); exitTime=(String) request.getSession().getAttribute(&quot;exitTime&quot;); if(account!=null&amp;&amp;account.length()&gt;0) &#123; params.put(&quot;account&quot;,account); &#125; if(onlineTime!=null&amp;&amp;onlineTime.length()&gt;0) &#123; params.put(&quot;onlineTime&quot;,onlineTime); &#125; if(exitTime!=null&amp;&amp;exitTime.length()&gt;0) &#123; params.put(&quot;exitTime&quot;,exitTime); &#125; params.put(&quot;start&quot;, (pageNO-1)*40); params.put(&quot;pagesize&quot;, 40); List all = logDao.like(params); pager.setData(all); pager.setIndex(pageNO); request.getSession().setAttribute(&quot;pageNO&quot;, pager.getIndex()); pager.setPageSize(40); pager.setTotal(logDao.getlikeTotal(params)); pager.setPath(&quot;like.do?&quot;); request.setAttribute(&quot;pager&quot;, pager); return &quot;dept/denlu/show&quot;; &#125; //个人操作记录显示 @RequestMapping(&quot;/shows&quot;) public String shows(Integer index,HttpServletRequest request,ModelMap model) &#123; int pageNO = 1; if(index!=null)&#123; pageNO = index; &#125; Pagination pager = new Pagination(); Map params = new HashMap(); params.put(&quot;start&quot;, (pageNO-1)*40); params.put(&quot;pagesize&quot;, 40); List all = logsDao.show(params); pager.setData(all); pager.setIndex(pageNO); request.getSession().setAttribute(&quot;pageNO&quot;, pager.getIndex()); pager.setPageSize(40); pager.setTotal(logsDao.getTotal()); pager.setPath(&quot;shows.do?&quot;); request.setAttribute(&quot;pager&quot;, pager); return &quot;dept/caozuo/show&quot;; &#125;&#125; 07 源码下载关注公众号【C you again】，回复“基于ssm的客户管理系统”免费领取。亦可直接扫描主页二维码关注，回复“基于ssm的客户管理系统”免费领取，点此打开个人主页 运行 找到文件夹sql中的sql文件，导入到mysql中 将工程导入到eclipse中，修改数据库连接信息 启动项目，浏览器地址栏输入：http://localhost:8080/ssmClient 说明：此源码来源于网络，若有侵权，请联系删除！！","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"客户管理系统","slug":"客户管理系统","permalink":"https://cyouagain.cn/tags/%E5%AE%A2%E6%88%B7%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"基于SSH框架的人力资源管理系统设计与实现","slug":"基于SSH框架的人力资源管理系统设计与实现","date":"2020-10-02T07:47:56.622Z","updated":"2020-10-02T14:40:53.439Z","comments":true,"path":"posts/65258.html","link":"","permalink":"https://cyouagain.cn/posts/65258.html","excerpt":"","text":"查看更多系统：系统大全，课程设计、毕业设计，请点击这里查看 大家好，应各位粉丝的要求的，今天给大家分享下人力资源管理系统，需要源码的同志在公众号【C you again】后台回复“基于SSH框架的人力资源管理系统”获取。提前声明：此系统来源于网络，本人只做了收集整理，如果侵权，请联系删除。 01 概述人力资源管理系统（Human Resource Management system ，以下简称HRMS）是将以计算机为基础的管理信息系统应用于人力资源管理而形成的一种现代化的人力资源管理方法和手段，是对信息技术与人力资源管理技术结合的最佳定义。 人力资源是企业的第一资源，如何有效地管理、利用和开发这一资源 ，是摆在每一位管理者面前必须重视的大事。人力资源管理工作可分为建立规章制度的基础性工作、基于标准操作流程的例行性工作、人力资源规划等战略性工作以及企业文化建设、职工职业生涯设计等开拓性工作。其中，大量的例行性工作往往占据了人力资源管理工作人员的大部分时间。如果能建立起人力资源管理信息系统，把这部分工作分离出来，用计算机来进行管理，必将能大大提高人力资源管理人员的工作效率。同时，利用人力资源管理信息系统中存储的大量历史信息，建立起企业人力资源决策支持系统，可为领导决策提供有用的参考信息。 02 技术 Spring+SpringMVC+ Hibernate+ MySql 03 运行环境 Java1.8 + MySql + Eclipse 04 功能概述本系统主要有部门管理、员工管理、招聘管理、培训管理、奖罚管理、薪资管理、个人信息管理七大模块。 部门管理：此模块可以查看所有部门的详细信息，如：部门名称，部门创建时间，部门人数。也可以对某个部门进行修改删除操作，除此以外，还可以添加部门。 员工管理：员工管理模块有查看、修改、添加、删除员工信息的功能。 招聘管理：本模块可以查看求职人员的具体信息，包括姓名、性别、应聘职位、工作经验等等，也可以对应聘人员进行删除、录用。 培训管理：此模块用来发布企业的培训信息，如培训时间，培训地址，培训课程和培训人员等等。 奖罚管理：记录企业员工的奖罚情况。 薪资管理：管理企业员工薪资，有调整薪资，添加员工及薪资，删除员工及薪资等功能。 个人信息管理：查看修改个人信息。 05 运行截图部门管理 员工管理 招聘管理 奖罚管理 薪资管理 个人信息管理 06 主要代码部门管理12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273package com.wy.action;import java.util.List;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.actions.DispatchAction;import com.wy.dao.ObjectDao;import com.wy.form.DepartmentForm;import com.wy.form.ManagerForm;public class DepartmentAction extends DispatchAction &#123; private ObjectDao objectDao; public ObjectDao getObjectDao() &#123; return objectDao; &#125; public void setObjectDao(ObjectDao objectDao) &#123; this.objectDao = objectDao; &#125; // 部门察看操作 public ActionForward queryDepartment(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; List list = objectDao.getObjectList(&quot;from DepartmentForm order by id desc&quot;); request.setAttribute(&quot;list&quot;, list); request.setAttribute(&quot;employeeList&quot;, objectDao.getObjectList(&quot;from EmployeeForm&quot;)); return mapping.findForward(&quot;queryDepartment&quot;); &#125; // 部门信息保存 public ActionForward insertDepartment(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; DepartmentForm departmentForm = (DepartmentForm) form; DepartmentForm departmentform = (DepartmentForm)objectDao .getObjectForm(&quot;from DepartmentForm where dt_name=&#x27;&quot; + departmentForm.getDt_name() + &quot;&#x27;&quot;); if (departmentform== null) &#123; objectDao.insertObjectForm(departmentForm); return queryDepartment(mapping, form, request, response); &#125; else &#123; request.setAttribute(&quot;result&quot;, &quot;不能够重复提交！！！&quot;); return mapping.findForward(&quot;operationDepartment&quot;); &#125; &#125; //部门信息删除 public ActionForward deleteDepartment(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; DepartmentForm departmentform = (DepartmentForm)objectDao .getObjectForm(&quot;from DepartmentForm where id=&#x27;&quot; + request.getParameter(&quot;id&quot;) + &quot;&#x27;&quot;); if(objectDao.deleteObjectForm(departmentform))&#123; &#125;else&#123; request.setAttribute(&quot;result&quot;, &quot;删除部门信息失败！！！&quot;); &#125; return mapping.findForward(&quot;operationDepartment&quot;); &#125; &#125; 培训管理12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667package com.wy.action;import java.util.List;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.actions.DispatchAction;import com.wy.dao.ObjectDao;import com.wy.form.TrainForm;public class TrainAction extends DispatchAction &#123; private ObjectDao objectDao; public ObjectDao getObjectDao() &#123; return objectDao; &#125; public void setObjectDao(ObjectDao objectDao) &#123; this.objectDao = objectDao; &#125; // 培训察看操作 public ActionForward queryTrain(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; List list = objectDao.getObjectList(&quot;from TrainForm order by id desc&quot;); request.setAttribute(&quot;list&quot;, list); return mapping.findForward(&quot;queryTrain&quot;); &#125; // 添加培训操作 public ActionForward deleteTrain(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; String id=request.getParameter(&quot;id&quot;); TrainForm trainForm=(TrainForm)objectDao.getObjectForm(&quot;from TrainForm where id=&#x27;&quot;+id+&quot;&#x27;&quot;); this.objectDao.deleteObjectForm(trainForm); return this.queryTrain(mapping, form, request, response); &#125; //添加培训操作 public ActionForward saveTrain(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; TrainForm trainForm=(TrainForm)form; this.objectDao.insertObjectForm(trainForm); return mapping.findForward(&quot;operationTrain&quot;); &#125; //培训详细查询 public ActionForward queryOneTrain(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; String id=request.getParameter(&quot;id&quot;); TrainForm trainForm=(TrainForm)objectDao.getObjectForm(&quot;from TrainForm where id=&#x27;&quot;+id+&quot;&#x27;&quot;); request.setAttribute(&quot;trainForm&quot;, trainForm); return mapping.findForward(&quot;queryOneTrain&quot;); &#125; &#125; 薪资管理12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697package com.wy.action;import java.util.List;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.actions.DispatchAction;import com.wy.dao.ObjectDao;import com.wy.form.DepartmentForm;import com.wy.form.EmployeeForm;import com.wy.form.ManagerForm;import com.wy.form.PayForm;import com.wy.tool.GetAutoNumber;public class PayAction extends DispatchAction &#123; private ObjectDao objectDao; public ObjectDao getObjectDao() &#123; return objectDao; &#125; public void setObjectDao(ObjectDao objectDao) &#123; this.objectDao = objectDao; &#125; //薪资删除 public ActionForward deletePay(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; String condition = &quot;from PayForm where id=&#x27;&quot;+request.getParameter(&quot;id&quot;)+&quot;&#x27;&quot;; PayForm payForm=(PayForm)objectDao.getObjectForm(condition); if(payForm!=null) objectDao.deleteObjectForm(payForm); return queryPay(mapping,form,request,response); &#125; // 薪资查看 public ActionForward queryPay(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; List list = objectDao.getObjectList(&quot;from PayForm&quot;); if(request.getParameter(&quot;emNumber&quot;)!=null)&#123; String emNumber= request.getParameter(&quot;emNumber&quot;); list = objectDao.getObjectList(&quot;from PayForm where pay_emNumber=&#x27;&quot;+emNumber+&quot;&#x27;&quot;); request.setAttribute(&quot;result1&quot;,emNumber); &#125; if(request.getParameter(&quot;pay_month&quot;)!=null)&#123; String pay_month= request.getParameter(&quot;pay_month&quot;); list = objectDao.getObjectList(&quot;from PayForm where pay_month=&#x27;&quot;+pay_month+&quot;&#x27;&quot;); request.setAttribute(&quot;result2&quot;,pay_month); &#125; request.setAttribute(&quot;list&quot;, list); String condition = &quot;from EmployeeForm order by id desc&quot;; request.setAttribute(&quot;employeeList&quot;,objectDao.getObjectList(condition)); return mapping.findForward(&quot;queryPay&quot;); &#125; // 转向添加新姿的页面 public ActionForward forwardInsertPay(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; this.saveToken(request); String condition = &quot;from EmployeeForm order by id desc&quot;; List list = objectDao.getObjectList(condition); request.setAttribute(&quot;employeeList&quot;,list); return mapping.findForward(&quot;forwardInsertPay&quot;); &#125; // 添加薪资 public ActionForward savePay(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) &#123; PayForm payForm = (PayForm) form; String payCondition= &quot;from PayForm where pay_month=&#x27;&quot;+payForm.getPay_month()+&quot;&#x27; and pay_emNumber=&#x27;&quot;+payForm.getPay_emNumber()+&quot;&#x27;&quot;; if(objectDao.getObjectForm(payCondition)!=null)&#123; request.setAttribute(&quot;result&quot;, &quot;该员工已经工资已经发送完毕&quot;); return mapping.findForward(&quot;operationPay&quot;); &#125; String emCondition = &quot;from EmployeeForm where em_serialNumber=&#x27;&quot;+payForm.getPay_emNumber()+&quot;&#x27;&quot;; EmployeeForm employeeForm= (EmployeeForm)objectDao.getObjectForm(emCondition); payForm.setPay_emName(employeeForm.getEm_name()); if (this.isTokenValid(request)) &#123; this.resetToken(request); objectDao.insertObjectForm(payForm); &#125; else &#123; this.saveToken(request); &#125; return queryPay(mapping, form, request, response); &#125; &#125; 07 使用说明 mysql导入sql文件，修改（WebContent\\WEB-INF\\applicationContext.xml）applicationContext.xml文件修改数据库配置信息。 eclipse导入项目并部署，tomcat部署后，访问http://localhost:8080/PersonManager/，用户名：adain，密码：123 08 源码下载关注公众号【C you again】，回复“基于SSH框架的人力资源管理”免费领取。亦可直接扫描主页二维码关注，回复“基于SSH框架的人力资源管理”免费领取，点此打开个人主页 说明：此源码来源于网络，若有侵权，请联系删除！！","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"人力资源管理系统","slug":"人力资源管理系统","permalink":"https://cyouagain.cn/tags/%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"基于java的企业进销存管理系统","slug":"基于java的企业进销存管理系统","date":"2020-10-02T07:47:56.619Z","updated":"2020-10-02T14:40:27.860Z","comments":true,"path":"posts/21025.html","link":"","permalink":"https://cyouagain.cn/posts/21025.html","excerpt":"","text":"查看更多系统：系统大全，课程设计、毕业设计，请点击这里查看01 概述销存管理系统是一个基于本地与网络的应用系统，它是一个面对当前的进销存管理工作基本还处于手工和半信息自动化处理状态而应运而生的一个基于本地与网络的一个完全信息自动化的系统，整个系统从符合操作简便、界面友好、灵活、实用、安全的要求出发，完成进货、销售、库存管理的全过程。本文所设计的企业进销存管理系统可以满足企业进货、销售和库存管理方面的需要。 02 系统结构及说明本系统包括基础资料、进货管理、销售管理、库存管理、信息查询、系统维护等 6 大部分。系统结构如图所示： 进货管理“进货管理”功能模块用于管理企业的进货采购业务，是进销存管理系统中不可缺少的重要组成部分，它主要负责为系统记录进货单及其退货信息，相应的进货商品会添加到库存管理中。所包含的子功能模块如图所示。 基础资料“基础资料”是每个系统都必须具备的功能，该模块用于管理企业进销存管理系统中的客户、商品和供应商信息，其功能主要是对这些基础信息进行添加、修改和删除。包括的子功能模块如图所示。 销售管理“销售管理”功能模块用于管理企业的销售业务，商品销售是进销存管理中的重要环节之一，进货商品在入库之后就可以开始销售了。所包含的子功能模块如图所示。 库存管理“库存管理”模块是企业进销存管理系统中的库存管理模块包括库存盘点和价格调整两个功能，所包含的子功能模块如图所示。 查询统计“查询统计”模块是进销存管理系统中不可缺少的重要组成部分，它主要包括销售查询和商品查询，所包含的子功能模块如图所示。 系统管理“系统管理”模块主要有更改密码、退出系统两个模块，所包含的子功能模块如图所示。 03 工程结构 04 详细设计系统运行环境 操作系统：Windows 10； JDK环境：jdk1.8； 开发工具：Eclipse8.0； 数据库管理软件：My SQL 5.7 系统开发技术 Java My SQL 数据库 公共类设计公共类是代码重用的一种形式，他将各个功能模块经常调用的方法提取到共用的Java类中，例如访问数据库的Dao类容纳了所有访问数据库的方法，并同时管理者数据库的连接和关闭。这样不但实现了项目代码的重用，还提高了程序的性能和代码可读性。 数据库DB链接(dao/Dao.java): 1234567protected static String dbClassName = &quot;com.mysql.jdbc.Driver&quot;;// MySQL数据库驱动类的名称protected static String dbUrl = &quot;jdbc:mysql://127.0.0.1:3306/db_database28&quot;;// 访问MySQL数据库的路径protected static String dbUser = &quot;root&quot;;// 访问MySQL数据库的用户名（根据自己数据库而定）protected static String dbPwd = &quot;&quot;;// 访问MySQL数据库的密码（根据自己数据库而定）protected static String dbName = &quot;db_database28&quot;;// 访问MySQL数据库中的实例(db_database28)protected static String second = null;//public static Connection conn = null;// MySQL数据库的连接对象 主窗体设计主窗体界面是该系统的欢迎界面。应用程序的主窗体必须设计层次清晰的系统菜单和工具栏，其中系统菜单包含系统中所有功能的菜单项，而工具栏主要提供常用功能的快捷访问按钮。企业进销存管理系统采用导航面板综合了系统菜单和工具栏的优点，而且导航面板的界面更加美观，操作更快捷。 销售管理设计商品销售时进销存管理中的重要环节之一，进货商在入库之后就可以开始销售。销售单模块主要负责根据经手人的销售单据，操作进销存管理系统的库存商品和记录销售信息，方便以后查询和统计。 信息查询设计“信息查询”模块是进销存管理系统中不可缺少的重要组成部分，它主要包括销售查询、商品查询功能。 销售查询：该功能主要用于查询系统中的销售信息，其查询方式可以按照客户全称、销售票号进行匹配查询和模糊查询。另外，还可以指定销售日期查询。 其关键代码如下： 12345678910111213141516171819202122232425262728293031323334// 条件查询private final class QueryAction implements ActionListener &#123;public void actionPerformed(final ActionEvent e) &#123;boolean selDate = selectDate.isSelected();if(content.getText().equals(&quot;&quot;)) &#123;JOptionPane.showMessageDialog(getContentPane(), &quot;请输入查询内容！&quot;);return;&#125;if(selDate) &#123;if(startDate.getText()==null||startDate.getText().equals(&quot;&quot;)) &#123;JOptionPane.showMessageDialog(getContentPane(), &quot;请输入查询的开始日期！&quot;);return;&#125;if(endDate.getText()==null||endDate.getText().equals(&quot;&quot;)) &#123;JOptionPane.showMessageDialog(getContentPane(), &quot;请输入查询的结束日期！&quot;);return;&#125;&#125;List list=null;// 结果集String con = condition.getSelectedIndex() == 0 ? &quot;khname &quot; : &quot;sellId &quot;;int oper = operation.getSelectedIndex();String opstr = oper == 0 ? &quot;= &quot; : &quot;like &quot;;String cont = content.getText();list = Dao.findForList(&quot;select * from v_sellView where &quot;+ con + opstr+ (oper == 0 ? &quot;&#x27;&quot;+cont+&quot;&#x27;&quot; : &quot;&#x27;%&quot; + cont + &quot;%&#x27;&quot;)+ (selDate ? &quot; and xsdate&gt;&#x27;&quot; + startDate.getText()+ &quot;&#x27; and xsdate&lt;=&#x27;&quot; + endDate.getText()+&quot; 23:59:59&#x27;&quot; : &quot;&quot;));// 执行拼接的SQL语句后获得的结果集Iterator iterator = list.iterator();// 与结果集list相应的迭代器updateTable(iterator);&#125;&#125;&#125; 商品查询：该功能主要用于查询系统中的商品信息，其查询方式可以按照商品的名称、供应商全称、产地、规格等信息进行查询。 其关键代码如下： 12345678910111213141516171819202122232425262728// 点击“显示全部数据”按钮后，更新表格内容private void updateTable(List list, final DefaultTableModel dftm) &#123;int num = dftm.getRowCount();for (int i = 0; i &lt; num; i++)dftm.removeRow(0);Iterator iterator = list.iterator();TbSpinfo spInfo;// 商品信息while (iterator.hasNext()) &#123;List info = (List) iterator.next();Item item = new Item();item.setId((String) info.get(0));item.setName((String) info.get(1));spInfo = Dao.getSpInfo(item);Vector rowData = new Vector();rowData.add(spInfo.getId().trim());// 商品编号rowData.add(spInfo.getSpname().trim());// 商品名称rowData.add(spInfo.getJc());// 商品简称rowData.add(spInfo.getCd());// 产地rowData.add(spInfo.getDw());// 商品计量单位rowData.add(spInfo.getGg());// 商品规格rowData.add(spInfo.getBz());// 包装rowData.add(spInfo.getPh());// 批号rowData.add(spInfo.getPzwh());// 批准文号rowData.add(spInfo.getGysname());// 供应商名称rowData.add(spInfo.getMemo());// 备注dftm.addRow(rowData);// 向表格对象添加行数据（商品信息）&#125;&#125; 05 使用说明详细使用说明见工程中“readme.txt”文件。 06 源码下载关注公众号【C you again】，回复“基于java的企业进销存管理系统”免费领取。亦可直接扫描主页二维码关注，回复“基于java的企业进销存管理系统”免费领取，点此打开个人主页 原文链接：http://www.demodashi.com/demo/15938.html说明：此源码来源于网络，若有侵权，请联系删除！！","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"销存管理系统","slug":"销存管理系统","permalink":"https://cyouagain.cn/tags/%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"关于公众号【C you again】各类资源获取说明","slug":"关于公众号【C you again】各类资源获取说明","date":"2020-10-02T07:47:56.616Z","updated":"2021-01-06T06:03:35.029Z","comments":true,"path":"posts/24621.html","link":"","permalink":"https://cyouagain.cn/posts/24621.html","excerpt":"","text":"1、获取说明微信扫描下方海报二维码查看源码获取方式： 2、热文推荐查看更多IT技术文章请点击这里 3、扫码关注公众号【C you again】","categories":[],"tags":[]},{"title":"仓库ERP管理系统（springboot）","slug":"仓库ERP管理系统（springboot）","date":"2020-10-02T07:47:56.613Z","updated":"2020-10-02T14:39:58.012Z","comments":true,"path":"posts/22575.html","link":"","permalink":"https://cyouagain.cn/posts/22575.html","excerpt":"","text":"查看更多系统：系统大全，课程设计、毕业设计，请点击这里查看01 系统概述基于SpringBoot框架和SaaS模式，非常好用的ERP软件，目前专注进销存+财务功能。主要模块有零售管理、采购管理、销售管理、仓库管理、财务管理、报表查询、系统管理等。支持预付款、收入支出、仓库调拨、组装拆卸、订单等特色功能。拥有库存状况、出入库统计等报表。权限控制更加精确 02 技术 springboot + mybatis + easyui 03 运行环境 开发工具：idea/eclipse，推荐使用idea maven3+，并且在开发工具中配置好 jdk1.8+，推荐1.8 MySQL5.5+, 推荐5.7，5.6 04 技术架构 核心框架：SpringBoot 2.0.0 持久层框架：Mybatis 1.3.2 日志管理：Log4j 2.10.0 JS框架：Jquery 1.8.0 UI框架: EasyUI 1.9.4 模板框架: AdminLTE 2.4.0 项目管理框架:Maven 3.2.3 05 功能模块 零售管理 采购管理 销售管理 仓库管理 财务管理 报表查询 商品管理 基本信息 系统管理 06 项目结构 07 运行截图零售关系-》零售出库 采购管理-》采购入库 财务管理-》收入单 商品管理-》商品信息 08 主要代码用户管理package com.jsh.erp.controller;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import com.github.pagehelper.PageHelper;import com.github.pagehelper.PageInfo;import com.jsh.erp.constants.BusinessConstants;import com.jsh.erp.constants.ExceptionConstants;import com.jsh.erp.datasource.entities.Tenant;import com.jsh.erp.datasource.entities.User;import com.jsh.erp.datasource.entities.UserEx;import com.jsh.erp.datasource.vo.TreeNodeEx;import com.jsh.erp.exception.BusinessParamCheckingException;import com.jsh.erp.service.log.LogService;import com.jsh.erp.service.tenant.TenantService;import com.jsh.erp.service.user.UserService;import com.jsh.erp.utils.*;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Value;import org.springframework.web.bind.annotation.*;import org.springframework.web.context.request.RequestContextHolder;import org.springframework.web.context.request.ServletRequestAttributes;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.net.URLEncoder;import java.security.NoSuchAlgorithmException;import java.util.*;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import static com.jsh.erp.utils.ResponseJsonUtil.returnJson;/** * @author */@RestController@RequestMapping(value = &quot;/user&quot;)public class UserController &#123; private Logger logger = LoggerFactory.getLogger(UserController.class); @Value(&quot;$&#123;manage.roleId&#125;&quot;) private Integer manageRoleId; @Resource private UserService userService; @Resource private TenantService tenantService; @Resource private LogService logService; private static String message = &quot;成功&quot;; private static final String HTTP = &quot;http://&quot;; private static final String CODE_OK = &quot;200&quot;; @PostMapping(value = &quot;/login&quot;) public BaseResponseInfo login(@RequestParam(value = &quot;loginName&quot;, required = false) String loginName, @RequestParam(value = &quot;password&quot;, required = false) String password, HttpServletRequest request)throws Exception &#123; logger.info(&quot;============用户登录 login 方法调用开始==============&quot;); String msgTip = &quot;&quot;; User user=null; BaseResponseInfo res = new BaseResponseInfo(); try &#123; String username = loginName.trim(); password = password.trim(); //判断用户是否已经登录过，登录过不再处理 Object userInfo = request.getSession().getAttribute(&quot;user&quot;); User sessionUser = new User(); if (userInfo != null) &#123; sessionUser = (User) userInfo; &#125; if (sessionUser != null &amp;&amp; username.equalsIgnoreCase(sessionUser.getLoginame())) &#123; logger.info(&quot;====用户 &quot; + username + &quot;已经登录过, login 方法调用结束====&quot;); msgTip = &quot;user already login&quot;; &#125; //获取用户状态 int userStatus = -1; try &#123; request.getSession().removeAttribute(&quot;tenantId&quot;); userStatus = userService.validateUser(username, password); &#125; catch (Exception e) &#123; e.printStackTrace(); logger.error(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;用户 &quot; + username + &quot; 登录 login 方法 访问服务层异常====&quot;, e); msgTip = &quot;access service exception&quot;; &#125; switch (userStatus) &#123; case ExceptionCodeConstants.UserExceptionCode.USER_NOT_EXIST: msgTip = &quot;user is not exist&quot;; break; case ExceptionCodeConstants.UserExceptionCode.USER_PASSWORD_ERROR: msgTip = &quot;user password error&quot;; break; case ExceptionCodeConstants.UserExceptionCode.BLACK_USER: msgTip = &quot;user is black&quot;; break; case ExceptionCodeConstants.UserExceptionCode.USER_ACCESS_EXCEPTION: msgTip = &quot;access service error&quot;; break; default: try &#123; msgTip = &quot;user can login&quot;; //验证通过 ，可以登录，放入session，记录登录日志 user = userService.getUserByUserName(username); request.getSession().setAttribute(&quot;user&quot;,user); if(user.getTenantId()!=null) &#123; Tenant tenant = tenantService.getTenantByTenantId(user.getTenantId()); if(tenant!=null) &#123; Long tenantId = tenant.getTenantId(); Integer userNumLimit = tenant.getUserNumLimit(); Integer billsNumLimit = tenant.getBillsNumLimit(); if(tenantId!=null) &#123; request.getSession().setAttribute(&quot;tenantId&quot;,tenantId); //租户tenantId request.getSession().setAttribute(&quot;userNumLimit&quot;,userNumLimit); //用户限制数 request.getSession().setAttribute(&quot;billsNumLimit&quot;,billsNumLimit); //单据限制数 &#125; &#125; &#125; logService.insertLog(&quot;用户&quot;, new StringBuffer(BusinessConstants.LOG_OPERATION_TYPE_LOGIN).append(user.getId()).toString(), ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest()); &#125; catch (Exception e) &#123; e.printStackTrace(); logger.error(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;查询用户名为:&quot; + username + &quot; ，用户信息异常&quot;, e); &#125; break; &#125; Map&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;(); data.put(&quot;msgTip&quot;, msgTip); /** * 在IE模式下，无法获取到user数据， * 在此处明确添加上user信息 * */ if(user!=null)&#123; data.put(&quot;user&quot;,user); &#125; res.code = 200; res.data = data; logger.info(&quot;===============用户登录 login 方法调用结束===============&quot;); &#125; catch(Exception e)&#123; e.printStackTrace(); logger.error(e.getMessage()); res.code = 500; res.data = &quot;用户登录失败&quot;; &#125; return res; &#125; @GetMapping(value = &quot;/getUserSession&quot;) public BaseResponseInfo getSessionUser(HttpServletRequest request)throws Exception &#123; BaseResponseInfo res = new BaseResponseInfo(); try &#123; Map&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;(); Object userInfo = request.getSession().getAttribute(&quot;user&quot;); if(userInfo!=null) &#123; User user = (User) userInfo; user.setPassword(null); data.put(&quot;user&quot;, user); &#125; res.code = 200; res.data = data; &#125; catch(Exception e)&#123; e.printStackTrace(); res.code = 500; res.data = &quot;获取session失败&quot;; &#125; return res; &#125; @GetMapping(value = &quot;/logout&quot;) public BaseResponseInfo logout(HttpServletRequest request, HttpServletResponse response)throws Exception &#123; BaseResponseInfo res = new BaseResponseInfo(); try &#123; request.getSession().removeAttribute(&quot;user&quot;); request.getSession().removeAttribute(&quot;tenantId&quot;); request.getSession().removeAttribute(&quot;userNumLimit&quot;); request.getSession().removeAttribute(&quot;billsNumLimit&quot;); response.sendRedirect(&quot;/login.html&quot;); &#125; catch(Exception e)&#123; e.printStackTrace(); res.code = 500; res.data = &quot;退出失败&quot;; &#125; return res; &#125; @PostMapping(value = &quot;/resetPwd&quot;) public String resetPwd(@RequestParam(&quot;id&quot;) Long id, HttpServletRequest request) throws Exception &#123; Map&lt;String, Object&gt; objectMap = new HashMap&lt;String, Object&gt;(); String password = &quot;123456&quot;; String md5Pwd = Tools.md5Encryp(password); int update = userService.resetPwd(md5Pwd, id); if(update &gt; 0) &#123; return returnJson(objectMap, message, ErpInfo.OK.code); &#125; else &#123; return returnJson(objectMap, message, ErpInfo.ERROR.code); &#125; &#125; @PostMapping(value = &quot;/updatePwd&quot;) public String updatePwd(@RequestParam(&quot;userId&quot;) Long userId, @RequestParam(&quot;password&quot;) String password, @RequestParam(&quot;oldpwd&quot;) String oldpwd, HttpServletRequest request)throws Exception &#123; Integer flag = 0; Map&lt;String, Object&gt; objectMap = new HashMap&lt;String, Object&gt;(); try &#123; User user = userService.getUser(userId); String oldPassword = Tools.md5Encryp(oldpwd); String md5Pwd = Tools.md5Encryp(password); //必须和原始密码一致才可以更新密码 if(user.getLoginame().equals(&quot;jsh&quot;))&#123; flag = 3; //管理员jsh不能修改密码 &#125; else if (oldPassword.equalsIgnoreCase(user.getPassword())) &#123; user.setPassword(md5Pwd); flag = userService.updateUserByObj(user); //1-成功 &#125; else &#123; flag = 2; //原始密码输入错误 &#125; objectMap.put(&quot;status&quot;, flag); if(flag &gt; 0) &#123; return returnJson(objectMap, message, ErpInfo.OK.code); &#125; else &#123; return returnJson(objectMap, message, ErpInfo.ERROR.code); &#125; &#125; catch (Exception e) &#123; logger.error(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;修改用户ID为 ： &quot; + userId + &quot;密码信息失败&quot;, e); flag = 3; objectMap.put(&quot;status&quot;, flag); return returnJson(objectMap, message, ErpInfo.ERROR.code); &#125; &#125; /** * 获取全部用户数据列表 * @param request * @return */ @GetMapping(value = &quot;/getAllList&quot;) public BaseResponseInfo getAllList(HttpServletRequest request)throws Exception &#123; BaseResponseInfo res = new BaseResponseInfo(); try &#123; Map&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;(); List&lt;User&gt; dataList = userService.getUser(); if(dataList!=null) &#123; data.put(&quot;userList&quot;, dataList); &#125; res.code = 200; res.data = data; &#125; catch(Exception e)&#123; e.printStackTrace(); res.code = 500; res.data = &quot;获取失败&quot;; &#125; return res; &#125; /** * create by: cjl * description: * 查询分页用户列表 * create time: 2019/3/8 15:08 * @Param: pageSize \b * @Param: currentPage \b * @Param: search * @return java.lang.String */ @GetMapping(value = &quot;/getUserList&quot;) public String getUserList(@RequestParam(value = Constants.PAGE_SIZE, required = false) Integer pageSize, @RequestParam(value = Constants.CURRENT_PAGE, required = false) Integer currentPage, @RequestParam(value = Constants.SEARCH, required = false) String search)throws Exception &#123; Map&lt;String, Object&gt; parameterMap = new HashMap&lt;String, Object&gt;(); //查询参数 JSONObject obj= JSON.parseObject(search); Set&lt;String&gt; key= obj.keySet(); for(String keyEach: key)&#123; parameterMap.put(keyEach,obj.getString(keyEach)); &#125; PageQueryInfo queryInfo = new PageQueryInfo(); Map&lt;String, Object&gt; objectMap = new HashMap&lt;String, Object&gt;(); if (pageSize == null || pageSize &lt;= 0) &#123; pageSize = BusinessConstants.DEFAULT_PAGINATION_PAGE_SIZE; &#125; if (currentPage == null || currentPage &lt;= 0) &#123; currentPage = BusinessConstants.DEFAULT_PAGINATION_PAGE_NUMBER; &#125; PageHelper.startPage(currentPage,pageSize,true); List&lt;UserEx&gt; list = userService.getUserList(parameterMap); //获取分页查询后的数据 PageInfo&lt;UserEx&gt; pageInfo = new PageInfo&lt;&gt;(list); objectMap.put(&quot;page&quot;, queryInfo); if (list == null) &#123; queryInfo.setRows(new ArrayList&lt;Object&gt;()); queryInfo.setTotal(BusinessConstants.DEFAULT_LIST_NULL_NUMBER); return returnJson(objectMap, &quot;查找不到数据&quot;, ErpInfo.OK.code); &#125; queryInfo.setRows(list); queryInfo.setTotal(pageInfo.getTotal()); return returnJson(objectMap, ErpInfo.OK.name, ErpInfo.OK.code); &#125; /** * create by: cjl * description: * 新增用户及机构和用户关系 * create time: 2019/3/8 16:06 * @Param: beanJson * @return java.lang.Object */ @PostMapping(&quot;/addUser&quot;) @ResponseBody public Object addUser(@RequestParam(&quot;info&quot;) String beanJson, HttpServletRequest request)throws Exception&#123; JSONObject result = ExceptionConstants.standardSuccess(); Long userNumLimit = Long.parseLong(request.getSession().getAttribute(&quot;userNumLimit&quot;).toString()); Long count = userService.countUser(null,null); if(count&gt;= userNumLimit) &#123; throw new BusinessParamCheckingException(ExceptionConstants.USER_OVER_LIMIT_FAILED_CODE, ExceptionConstants.USER_OVER_LIMIT_FAILED_MSG); &#125; else &#123; UserEx ue= JSON.parseObject(beanJson, UserEx.class); userService.addUserAndOrgUserRel(ue); &#125; return result; &#125; /** * 注册用户 * @param loginame * @param password * @return * @throws Exception */ @PostMapping(value = &quot;/registerUser&quot;) public Object registerUser(@RequestParam(value = &quot;loginame&quot;, required = false) String loginame, @RequestParam(value = &quot;password&quot;, required = false) String password, HttpServletRequest request)throws Exception&#123; JSONObject result = ExceptionConstants.standardSuccess(); UserEx ue= new UserEx(); ue.setUsername(loginame); ue.setLoginame(loginame); ue.setPassword(password); userService.checkUserNameAndLoginName(ue); //检查用户名和登录名 ue = userService.registerUser(ue,manageRoleId,request); return result; &#125; /** * create by: cjl * description: * 修改用户及机构和用户关系 * create time: 2019/3/8 16:06 * @Param: beanJson * @return java.lang.Object */ @PostMapping(&quot;/updateUser&quot;) @ResponseBody public Object updateUser(@RequestParam(&quot;info&quot;) String beanJson,@RequestParam(&quot;id&quot;) Long id)throws Exception&#123; JSONObject result = ExceptionConstants.standardSuccess(); UserEx ue= JSON.parseObject(beanJson, UserEx.class); ue.setId(id); userService.updateUserAndOrgUserRel(ue); return result; &#125; @PostMapping(&quot;/deleteUser&quot;) @ResponseBody public Object deleteUser(@RequestParam(&quot;ids&quot;) String ids)throws Exception&#123; JSONObject result = ExceptionConstants.standardSuccess(); userService.batDeleteUser(ids); return result; &#125; @PostMapping(&quot;/batchDeleteUser&quot;) @ResponseBody public Object batchDeleteUser(@RequestParam(&quot;ids&quot;) String ids)throws Exception&#123; JSONObject result = ExceptionConstants.standardSuccess(); userService.batDeleteUser(ids); return result; &#125; @RequestMapping(&quot;/getOrganizationUserTree&quot;) public JSONArray getOrganizationUserTree()throws Exception&#123; JSONArray arr=new JSONArray(); List&lt;TreeNodeEx&gt; organizationUserTree= userService.getOrganizationUserTree(); if(organizationUserTree!=null&amp;&amp;organizationUserTree.size()&gt;0)&#123; for(TreeNodeEx node:organizationUserTree)&#123; String str=JSON.toJSONString(node); JSONObject obj=JSON.parseObject(str); arr.add(obj) ; &#125; &#125; return arr; &#125;&#125; 账户管理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186package com.jsh.erp.controller;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import com.jsh.erp.constants.BusinessConstants;import com.jsh.erp.constants.ExceptionConstants;import com.jsh.erp.datasource.entities.Account;import com.jsh.erp.datasource.vo.AccountVo4InOutList;import com.jsh.erp.exception.BusinessRunTimeException;import com.jsh.erp.service.account.AccountService;import com.jsh.erp.utils.BaseResponseInfo;import com.jsh.erp.utils.ErpInfo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.web.bind.annotation.*;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import java.math.BigDecimal;import java.util.HashMap;import java.util.List;import java.util.Map;import static com.jsh.erp.utils.ResponseJsonUtil.returnJson;/** * @author jishenghua 75271*8920 */@RestController@RequestMapping(value = &quot;/account&quot;)public class AccountController &#123; private Logger logger = LoggerFactory.getLogger(AccountController.class); @Resource private AccountService accountService; /** * 查找结算账户信息-下拉框 * @param request * @return */ @GetMapping(value = &quot;/findBySelect&quot;) public String findBySelect(HttpServletRequest request) throws Exception &#123; String res = null; try &#123; List&lt;Account&gt; dataList = accountService.findBySelect(); //存放数据json数组 JSONArray dataArray = new JSONArray(); if (null != dataList) &#123; for (Account account : dataList) &#123; JSONObject item = new JSONObject(); item.put(&quot;Id&quot;, account.getId()); //结算账户名称 item.put(&quot;AccountName&quot;, account.getName()); dataArray.add(item); &#125; &#125; res = dataArray.toJSONString(); &#125; catch(Exception e)&#123; e.printStackTrace(); res = &quot;获取数据失败&quot;; &#125; return res; &#125; /** * 获取所有结算账户 * @param request * @return */ @GetMapping(value = &quot;/getAccount&quot;) public BaseResponseInfo getAccount(HttpServletRequest request) throws Exception &#123; BaseResponseInfo res = new BaseResponseInfo(); Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;(); try &#123; List&lt;Account&gt; accountList = accountService.getAccount(); map.put(&quot;accountList&quot;, accountList); res.code = 200; res.data = map; &#125; catch(Exception e)&#123; e.printStackTrace(); res.code = 500; res.data = &quot;获取数据失败&quot;; &#125; return res; &#125; /** * 账户流水信息 * @param currentPage * @param pageSize * @param accountId * @param initialAmount * @param request * @return */ @GetMapping(value = &quot;/findAccountInOutList&quot;) public BaseResponseInfo findAccountInOutList(@RequestParam(&quot;currentPage&quot;) Integer currentPage, @RequestParam(&quot;pageSize&quot;) Integer pageSize, @RequestParam(&quot;accountId&quot;) Long accountId, @RequestParam(&quot;initialAmount&quot;) BigDecimal initialAmount, HttpServletRequest request) throws Exception&#123; BaseResponseInfo res = new BaseResponseInfo(); Map&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;(); try &#123; List&lt;AccountVo4InOutList&gt; dataList = accountService.findAccountInOutList(accountId, (currentPage-1)*pageSize, pageSize); int total = accountService.findAccountInOutListCount(accountId); map.put(&quot;total&quot;, total); //存放数据json数组 JSONArray dataArray = new JSONArray(); if (null != dataList) &#123; for (AccountVo4InOutList aEx : dataList) &#123; String timeStr = aEx.getOperTime().toString(); BigDecimal balance = accountService.getAccountSum(accountId, timeStr, &quot;date&quot;).add(accountService.getAccountSumByHead(accountId, timeStr, &quot;date&quot;)) .add(accountService.getAccountSumByDetail(accountId, timeStr, &quot;date&quot;)).add(accountService.getManyAccountSum(accountId, timeStr, &quot;date&quot;)).add(initialAmount); aEx.setBalance(balance); dataArray.add(aEx); &#125; &#125; map.put(&quot;rows&quot;, dataArray); res.code = 200; res.data = map; &#125; catch(Exception e)&#123; e.printStackTrace(); res.code = 500; res.data = &quot;获取数据失败&quot;; &#125; return res; &#125; @PostMapping(value = &quot;/updateAmountIsDefault&quot;) public String updateAmountIsDefault(@RequestParam(&quot;isDefault&quot;) Boolean isDefault, @RequestParam(&quot;accountId&quot;) Long accountId, HttpServletRequest request) throws Exception&#123; Map&lt;String, Object&gt; objectMap = new HashMap&lt;String, Object&gt;(); int res = accountService.updateAmountIsDefault(isDefault, accountId); if(res &gt; 0) &#123; return returnJson(objectMap, ErpInfo.OK.name, ErpInfo.OK.code); &#125; else &#123; return returnJson(objectMap, ErpInfo.ERROR.name, ErpInfo.ERROR.code); &#125; &#125; /** * create by: qiankunpingtai * website：https://qiankunpingtai.cn * description: * 批量删除账户信息 * create time: 2019/3/29 10:49 * @Param: ids * @return java.lang.Object */ @RequestMapping(value = &quot;/batchDeleteAccountByIds&quot;) public Object batchDeleteAccountByIds(@RequestParam(&quot;ids&quot;) String ids,@RequestParam(value=&quot;deleteType&quot;, required =false,defaultValue=BusinessConstants.DELETE_TYPE_NORMAL)String deleteType) throws Exception &#123; JSONObject result = ExceptionConstants.standardSuccess(); /** * create by: qiankunpingtai * create time: 2019/4/10 10:19 * website：https://qiankunpingtai.cn * description: * 出于兼容性考虑，没有传递删除类型时，默认为正常删除 */ int i=0; if(BusinessConstants.DELETE_TYPE_NORMAL.equals(deleteType))&#123; i= accountService.batchDeleteAccountByIdsNormal(ids); &#125;else if(BusinessConstants.DELETE_TYPE_FORCE.equals(deleteType))&#123; i= accountService.batchDeleteAccountByIds(ids); &#125;else&#123; logger.error(&quot;异常码[&#123;&#125;],异常提示[&#123;&#125;],参数,ids[&#123;&#125;],deleteType[&#123;&#125;]&quot;, ExceptionConstants.DELETE_REFUSED_CODE,ExceptionConstants.DELETE_REFUSED_MSG,ids,deleteType); throw new BusinessRunTimeException(ExceptionConstants.DELETE_REFUSED_CODE, ExceptionConstants.DELETE_REFUSED_MSG); &#125; if(i&lt;1)&#123; logger.error(&quot;异常码[&#123;&#125;],异常提示[&#123;&#125;],参数,ids[&#123;&#125;]&quot;, ExceptionConstants.ACCOUNT_DELETE_FAILED_CODE,ExceptionConstants.ACCOUNT_DELETE_FAILED_MSG,ids); throw new BusinessRunTimeException(ExceptionConstants.ACCOUNT_DELETE_FAILED_CODE, ExceptionConstants.ACCOUNT_DELETE_FAILED_MSG); &#125; return result; &#125;&#125; 09 源码下载关注公众号【C you again】，回复“springboot 仓库ERP管理系统”免费领取。亦可直接扫描主页二维码关注，回复“springboot 仓库ERP管理系统”免费领取，点此打开个人主页 10 如何使用 下载代码后解压缩 导入 将项目导入到开发工具当中 配置maven（因为我是直接从我工程中打包的，里面含有我本地的maven配置,所以需要重新配置一下） 导入sql到MySQL当中，修改application.properties中的数据源信息，和你自己的对应上就可以了 启动之后会有网址访问提示，直接访问就ok。默认用户名密码：admin/123456 说明：此源码来源于网络，若有侵权，请联系删除！！","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"ERP管理系统","slug":"ERP管理系统","permalink":"https://cyouagain.cn/tags/ERP%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"JavaWeb 图书管理系统","slug":"JavaWeb 图书管理系统","date":"2020-10-02T07:47:56.611Z","updated":"2020-10-02T14:39:34.178Z","comments":true,"path":"posts/5780.html","link":"","permalink":"https://cyouagain.cn/posts/5780.html","excerpt":"","text":"01 系统简述图书管理系统就是利用计算机，结合互联网对图书进行结构化、自动化管理的一种软件，来提高对图书的管理效率。 02 系统特点集成主流框架，简单精简化开发，高拓展性 03 技术 springboot + jpa + mybatis + springsecurity +javaex 后端： 基础框架： SpringBoot 简单数据操作： Spring Data Jpa 复杂数据操作： Mybatis 安全框架：SpringSecurity 模板引擎： Thymeleaf 前端： javaEx, 其实就是对html,css,js的封装。比较接近原生 修改起来比较方便 jQuery , 讲真的jQuery用着还是很舒服, 突破各种前端框架的限制 04 运行环境 jdk1.8 + maven3 + mysql5.7 05 功能介绍图书管理图书列表：显示已经上架的图书信息，可对上架图书进行搜索、修改、删除操作。图书上架：录入图书信息，输入图书名称、作者、图书分类，页数，定价等数据进行图书录入。借阅管理搜索图书：根据图书名称、作者名称，图书分类等搜索图书。借阅图书：录入图书信息，输入图书名称、作者、图书分类，页数，定价等数据进行图书借阅。归还图书：对已经借阅的图书进行归还操作。读者管理读者列表：显示已经注册的读者用户。读者添加：录入用户的昵称、用户名、密码、生日、电话、邮箱等信息添加新用户。用户中心个人信息：查看、修改个人信息。用户管理：对已经添加的用户进行搜索、删除、使用权限信息进行设置。添加管理员：录入管理员的昵称、用户名、密码、生日、电话、邮箱等信息添加新管理员。06 运行截图登录界面 首页 图书列表界面 添加图书界面 图书归还界面 读者列表界面 个人信息界面 用户管理界面 07 主要代码图书管理1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768package com.book.manager.controller;import com.book.manager.entity.Book;import com.book.manager.service.BookService;import com.book.manager.util.R;import com.book.manager.util.http.CodeEnum;import com.book.manager.util.ro.PageIn;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;/** * @Description 用户管理 */@Api(tags = &quot;图书管理&quot;)@RestController@RequestMapping(&quot;/book&quot;)public class BookController &#123; @Autowired private BookService bookService; @ApiOperation(&quot;图书搜索列表&quot;) @PostMapping(&quot;/list&quot;) public R getBookList(@RequestBody PageIn pageIn) &#123; if (pageIn == null) &#123; return R.fail(CodeEnum.PARAM_ERROR); &#125; return R.success(CodeEnum.SUCCESS,bookService.getBookList(pageIn)); &#125; @ApiOperation(&quot;添加图书&quot;) @PostMapping(&quot;/add&quot;) public R addBook(@RequestBody Book book) &#123; return R.success(CodeEnum.SUCCESS,bookService.addBook(book)); &#125; @ApiOperation(&quot;编辑图书&quot;) @PostMapping(&quot;/update&quot;) public R modifyBook(@RequestBody Book book) &#123; return R.success(CodeEnum.SUCCESS,bookService.updateBook(book)); &#125; @ApiOperation(&quot;图书详情&quot;) @GetMapping(&quot;/detail&quot;) public R bookDetail(Integer id) &#123; return R.success(CodeEnum.SUCCESS,bookService.findBookById(id)); &#125; @ApiOperation(&quot;图书详情 根据ISBN获取&quot;) @GetMapping(&quot;/detailByIsbn&quot;) public R bookDetailByIsbn(String isbn) &#123; return R.success(CodeEnum.SUCCESS,bookService.findBookByIsbn(isbn)); &#125; @ApiOperation(&quot;删除图书&quot;) @GetMapping(&quot;/delete&quot;) public R delBook(Integer id) &#123; bookService.deleteBook(id); return R.success(CodeEnum.SUCCESS); &#125;&#125; 借阅管理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120package com.book.manager.controller;import cn.hutool.core.date.DateUtil;import com.book.manager.entity.Borrow;import com.book.manager.service.BookService;import com.book.manager.service.BorrowService;import com.book.manager.util.R;import com.book.manager.util.consts.Constants;import com.book.manager.util.http.CodeEnum;import com.book.manager.util.ro.RetBookIn;import com.book.manager.util.vo.BackOut;import com.book.manager.util.vo.BookOut;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import java.util.ArrayList;import java.util.Date;import java.util.List;/** * @Description 用户管理 */@Api(tags = &quot;借阅管理&quot;)@RestController@RequestMapping(&quot;/borrow&quot;)public class BorrowController &#123; @Autowired private BorrowService borrowService; @Autowired private BookService bookService; @ApiOperation(&quot;借阅列表&quot;) @GetMapping(&quot;/list&quot;) public R getBorrowList(Integer userId) &#123; return R.success(CodeEnum.SUCCESS,borrowService.findAllBorrowByUserId(userId)); &#125; @ApiOperation(&quot;借阅图书&quot;) @PostMapping(&quot;/add&quot;) public R addBorrow(@RequestBody Borrow borrow) &#123; Integer result = borrowService.addBorrow(borrow); if (result == Constants.BOOK_BORROWED) &#123; return R.success(CodeEnum.BOOK_BORROWED); &#125;else if (result == Constants.USER_SIZE_NOT_ENOUGH) &#123; return R.success(CodeEnum.USER_NOT_ENOUGH); &#125;else if (result == Constants.BOOK_SIZE_NOT_ENOUGH) &#123; return R.success(CodeEnum.BOOK_NOT_ENOUGH); &#125; return R.success(CodeEnum.SUCCESS,Constants.OK); &#125; @ApiOperation(&quot;编辑借阅&quot;) @PostMapping(&quot;/update&quot;) public R modifyBorrow(@RequestBody Borrow borrow) &#123; return R.success(CodeEnum.SUCCESS,borrowService.updateBorrow(borrow)); &#125; @ApiOperation(&quot;借阅详情&quot;) @GetMapping(&quot;/detail&quot;) public R borrowDetail(Integer id) &#123; return R.success(CodeEnum.SUCCESS,borrowService.findById(id)); &#125; @ApiOperation(&quot;删除归还记录&quot;) @GetMapping(&quot;/delete&quot;) public R delBorrow(Integer id) &#123; borrowService.deleteBorrow(id); return R.success(CodeEnum.SUCCESS); &#125; @ApiOperation(&quot;已借阅列表&quot;) @GetMapping(&quot;/borrowed&quot;) public R borrowedList(Integer userId) &#123; List&lt;BackOut&gt; outs = new ArrayList&lt;&gt;(); if (userId!=null&amp;&amp;userId&gt;0) &#123; // 获取所有 已借阅 未归还书籍 List&lt;Borrow&gt; borrows = borrowService.findBorrowsByUserIdAndRet(userId, Constants.NO); for (Borrow borrow : borrows) &#123; BackOut backOut = new BackOut(); BookOut out = bookService.findBookById(borrow.getBookId()); BeanUtils.copyProperties(out,backOut); backOut.setBorrowTime(DateUtil.format(borrow.getCreateTime(),Constants.DATE_FORMAT)); String endTimeStr = DateUtil.format(borrow.getEndTime(), Constants.DATE_FORMAT); backOut.setEndTime(endTimeStr); // 判断是否逾期 String toDay = DateUtil.format(new Date(), Constants.DATE_FORMAT); int i = toDay.compareTo(endTimeStr); if (i&gt;0) &#123; backOut.setLate(Constants.YES_STR); &#125;else &#123; backOut.setLate(Constants.NO_STR); &#125; outs.add(backOut); &#125; &#125; return R.success(CodeEnum.SUCCESS,outs); &#125; @ApiOperation(&quot;归还书籍&quot;) @PostMapping(&quot;/ret&quot;) public R retBook(Integer userId, Integer bookId) &#123; // 归还图书 borrowService.retBook(userId,bookId); return R.success(CodeEnum.SUCCESS); &#125;&#125; 用户管理 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152package com.book.manager.controller;import cn.hutool.core.bean.BeanUtil;import cn.hutool.core.date.DateUtil;import cn.hutool.core.util.StrUtil;import com.book.manager.entity.Users;import com.book.manager.service.UserService;import com.book.manager.util.R;import com.book.manager.util.consts.Constants;import com.book.manager.util.consts.ConvertUtil;import com.book.manager.util.http.CodeEnum;import com.book.manager.util.vo.PageOut;import com.book.manager.util.ro.PageIn;import com.book.manager.util.vo.UserOut;import com.github.pagehelper.PageInfo;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.web.bind.annotation.*;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * @Description 用户管理 */@Api(tags = &quot;用户管理&quot;)@RestController@RequestMapping(&quot;/user&quot;)public class UsersController &#123; @Autowired private UserService userService; @ApiOperation(&quot;用户列表&quot;) @PostMapping(&quot;/list&quot;) public R getUsers(@RequestBody PageIn pageIn) &#123; if (pageIn == null) &#123; return R.fail(CodeEnum.PARAM_ERROR); &#125; // 封装分页出参对象 PageInfo&lt;Users&gt; userList = userService.getUserList(pageIn); PageOut pageOut = new PageOut(); pageOut.setCurrPage(userList.getPageNum()); pageOut.setPageSize(userList.getPageSize()); pageOut.setTotal((int) userList.getTotal()); List&lt;UserOut&gt; outs = new ArrayList&lt;&gt;(); for (Users users : userList.getList()) &#123; UserOut out = new UserOut(); BeanUtils.copyProperties(users,out); out.setIdent(ConvertUtil.identStr(users.getIdentity())); out.setBirth(DateUtil.format(users.getBirthday(),Constants.DATE_FORMAT)); outs.add(out); &#125; pageOut.setList(outs); return R.success(CodeEnum.SUCCESS,pageOut); &#125;// @ApiOperation(&quot;添加用户&quot;)// @PostMapping(&quot;/add&quot;)// public R addUsers(@RequestBody Users users) &#123;// return R.success(CodeEnum.SUCCESS,userService.addUser(users));// &#125; @ApiOperation(&quot;添加读者&quot;) @PostMapping(&quot;/addReader&quot;) public R addReader(@RequestBody Users users) &#123; if (users == null) &#123; return R.fail(CodeEnum.PARAM_ERROR); &#125; // 读者默认是普通用户 users.setIsAdmin(1); return R.success(CodeEnum.SUCCESS,userService.addUser(users)); &#125; @ApiOperation(&quot;添加管理员&quot;) @PostMapping(&quot;/addAdmin&quot;) public R addAdmin(@RequestBody Users users) &#123; if (users == null) &#123; return R.fail(CodeEnum.PARAM_ERROR); &#125; // 设置管理员权限 users.setIsAdmin(0); return R.success(CodeEnum.SUCCESS,userService.addUser(users)); &#125; @ApiOperation(&quot;编辑用户&quot;) @PostMapping(&quot;/update&quot;) public R modifyUsers(@RequestBody Users users) &#123; return R.success(CodeEnum.SUCCESS,userService.updateUser(users)); &#125; @ApiOperation(&quot;用户详情&quot;) @GetMapping(&quot;/detail&quot;) public R userDetail(Integer id) &#123; Users user = userService.findUserById(id); if (user!=null) &#123; UserOut out = new UserOut(); BeanUtils.copyProperties(user,out); out.setBirth(DateUtil.format(user.getBirthday(),Constants.DATE_FORMAT)); out.setIdent(ConvertUtil.identStr(user.getIdentity())); return R.success(CodeEnum.SUCCESS,out); &#125; return R.fail(CodeEnum.NOT_FOUND); &#125; @ApiOperation(&quot;删除用户&quot;) @GetMapping(&quot;/delete&quot;) public R delUsers(Integer id) &#123; userService.deleteUser(id); return R.success(CodeEnum.SUCCESS); &#125; @ApiOperation(&quot;获取当前用户登陆信息&quot;) @GetMapping(&quot;/currUser&quot;) public R getCurrUser() &#123; Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal(); if (principal!=null) &#123; Map&lt;String,Object&gt; map = BeanUtil.beanToMap(principal); String username = (String) map.get(&quot;username&quot;); if (StrUtil.isNotBlank(username)) &#123; Users users = userService.findByUsername(username); UserOut out = new UserOut(); BeanUtils.copyProperties(users,out); out.setBirth(DateUtil.format(users.getBirthday(),Constants.DATE_FORMAT)); Integer identity = users.getIdentity(); String ident = &quot;&quot;; if (identity == Constants.STUDENT) &#123; ident = Constants.STU_STR; &#125;else if (identity == Constants.TEACHER) &#123; ident = Constants.TEA_STR; &#125;else if (identity == Constants.OTHER) &#123; ident = Constants.OTHER_STR; &#125;else if (identity == Constants.ADMIN) &#123; ident = Constants.ADMIN_STR; &#125; out.setIdent(ident); return R.success(CodeEnum.SUCCESS,out); &#125; &#125; return R.fail(CodeEnum.USER_NOT_FOUND); &#125;&#125; 08 使用说明 本地搭建好java8环境,数据库MySQL5.5+； 导入sql文件至数据库中，修改数据连接(你自己库名，用户名，密码等)； 导入项目，配置maven, 等待依赖下载完成； 安装IDE，打开项目； 启动访问http://localhost:8080 即可； 账号：【学生： stu/123】【教师： tea/123】【其他：other/123】【管理员：admin/123】 09 如何导入？ idea：直接open打开源码文件夹，记住是pom文件所在的目录 eclipse： 直接导入- 选择已存在导入maven项目 检查maven是否配置好 10 源码下载关注公众号【C you again】，回复“JavaWeb 图书管理系统”免费领取。亦可直接扫描主页二维码关注，回复“JavaWeb 图书管理系统”免费领取，点此打开个人主页 说明：此源码来源于网络，若有侵权，请联系删除！！","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"图书管理系统","slug":"图书管理系统","permalink":"https://cyouagain.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]},{"title":"Java GUI_图书管理系统设计与实现","slug":"Java GUI 图书管理系统","date":"2020-10-02T07:47:56.607Z","updated":"2020-10-03T08:48:07.830Z","comments":true,"path":"posts/46042.html","link":"","permalink":"https://cyouagain.cn/posts/46042.html","excerpt":"","text":"01 概述一款功能强大的图书馆管理系统，功能齐全，小白/大学生项目实训，学习的不二之选。 02 技术此系统使用 java awt 实现。java.awt是一个软件包，包含用于创建用户界面和绘制图形图像的所有分类。在AWT术语中，诸如按钮或滚动条之类的用户界面对象称为组件。Component类是所有 AWT 组件的根。 03 功能详解基础维护图书维护 添加：输入图书编号、图书名称、图书页数、图书作者、出版社、库存数量、所属类型等图书信息，点击Save按钮添加新图书。 修改：首先根据图书编号查询到所要修改的图书，然后对图书的名称、图书页数、作者、出版时间、定价、库存等信息进行修改。 删除：首先根据图书编号查询到所要删除的图书，然后进行删除操作。 读者维护 添加：输入读者编号、读者姓名、读者类别、读者性别、可借天数等信息，然后点击“Add”按钮添加新读者。 修改：首先根据读者编号查询到要修改的读者信息，再对读者编号、读者姓名、读者类别、读者性别、可借天数等信息进行修改，修改完成点击“保存”按钮完成修改。 删除：首先根据读者编号查询到要删除的读者信息，然后进行删除操作。 借阅管理 借书管理：首先根据图书编号和读者编号查询到图书和读者信息，在点击“借出”按钮完成借书。 还书管理：首先根据图书编号和读者编号查询到图书和读者信息，在点击“还书”按钮完成还书。 查询管理 图书查询：输入图书名称、作者、出版时间中的任意一项，点击“查询”按钮查询图书。 读者查询：输入读者姓名、读者类型中的任意一项，点击“查询”按钮查询读者。 系统管理 修改密码：首先输入旧密码等待校验，旧密码输入正确后即可设定新的密码。 退出系统：退出图书管理系统程序。 04 运行截图添加图书 添加读者 借书管理 图书查询 修改密码 05 主要代码添加图书package com.jason.frame;//com.jason.frame.BookAdd.javaimport java.awt.*;import java.awt.event.*;import java.sql.ResultSet;import java.sql.SQLException;import java.text.ParseException;import java.text.SimpleDateFormat;import javax.swing.JOptionPane;public class BookAdd extends Frame implements ActionListener&#123; Toolkit tool= getToolkit(); String url=&quot;src/bookbk.png&quot;; Image img=tool.getImage(url); public void paint(Graphics g)&#123; g.drawImage(img,0,0,this); &#125; public void clearAndSetBookId()&#123; for(int j=0;j&lt;booktxt.length;j++)&#123; booktxt[j].setText(&quot;&quot;); &#125; String str=getInsertOrderedList(); booktxt[0].setEditable(false); booktxt[0].setText(str); &#125; String[] lbname=&#123;&quot;图书编号&quot;,&quot;图书名称&quot;,&quot;图书页数&quot;,&quot;图书作者&quot;,&quot;翻 译&quot;,&quot;出 版 社&quot;,&quot;出版时间&quot;,&quot;定价&quot;,&quot;库存数量&quot;,&quot;所属类型&quot;&#125;; Label[] booklb=new Label[10]; TextField[] booktxt=new TextField[10]; Button savebtn=new Button(&quot;Save&quot;); Button closebtn=new Button(&quot;Close&quot;); Choice booktype=new Choice(); public BookAdd()&#123; setTitle(&quot;添加新书&quot;); setLayout(null); setSize(500,250); setResizable(false); //this.setOpaque(false); this.setForeground(Color.BLACK); int lx=50,ly=50; booktype.add(&quot;程序设计&quot;); booktype.add(&quot;图形设计&quot;); booktype.add(&quot;其他&quot;); booktype.add(&quot;科技&quot;); booktype.add(&quot;文学&quot;); booktype.add(&quot;历史&quot;); booktype.add(&quot;百科&quot;); booktype.add(&quot;英语&quot;); booktype.add(&quot;计算机&quot;); booktype.add(&quot;Internet&quot;); booktype.add(&quot;数学&quot;); String str=getInsertOrderedList(); for(int i=0;i&lt;booklb.length;i++)&#123; if(lx&gt;240)&#123; lx=50; ly=ly+30; &#125; booklb[i]=new Label(lbname[i]); booklb[i].setBounds(lx,ly,50,20); booktxt[i]=new TextField(); booktxt[i].setBounds(lx+60,ly,100,20); lx=lx+190; add(booklb[i]);add(booktxt[i]); &#125; booktxt[0].setEditable(false); booktxt[0].setText(str); booktxt[9].setVisible(false); booktype.setBounds(300,170,100,20); add(booktype); savebtn.setBounds(150,210,80,25); closebtn.setBounds(280,210,80,25); add(savebtn);add(closebtn); addWindowListener(new WindowAdapter()&#123; public void windowClosing(WindowEvent e)&#123; DbOp.close(); dispose(); &#125; &#125;); savebtn.addActionListener(this); closebtn.addActionListener(this); setLocationRelativeTo(null); setVisible(true); &#125; public static String getInsertOrderedList()&#123; String returnstring=&quot;&quot;; String sql=&quot;select * from book&quot;; try&#123; int count=0; ResultSet rs=DbOp.executeQuery(sql); while(rs.next())&#123; count++; &#125; String[] allid=new String[count]; int[] intofid=new int[count]; int i=0; ResultSet rs1=DbOp.executeQuery(sql); while(rs1.next())&#123; allid[i]=rs1.getString(&quot;id&quot;); String mystr=allid[i].substring(1); intofid[i]=Integer.parseInt(mystr); i++; &#125; int temp=-1; for(int j=0;j&lt;intofid.length;j++)&#123; if(intofid[j]&gt;temp)&#123; temp=intofid[j]; &#125; &#125; returnstring=String.valueOf(temp+1); int len=returnstring.length(); for(int f=0;f&lt;5-len;f++)&#123; returnstring=&quot;0&quot;+returnstring; &#125; returnstring=&quot;A&quot;+returnstring; DbOp.close(); &#125;catch(SQLException ee)&#123; &#125; return returnstring; &#125; public void actionPerformed(ActionEvent e)&#123; Object ob=e.getSource(); if(ob==savebtn)&#123; savebtnActionPerformed(); clearAndSetBookId(); &#125; if(ob==closebtn)&#123; DbOp.close(); dispose(); &#125; &#125; public void savebtnActionPerformed()&#123; String id=booktxt[0].getText(); String typestr=booktype.getSelectedItem().toString(); String[] inputstring=new String[9]; boolean emptyequals=false; for(int i=0;i&lt;inputstring.length;i++)&#123; inputstring[i]=booktxt[i].getText(); if(inputstring[i].equals(&quot;&quot;))&#123; JOptionPane.showMessageDialog(null,&quot;请务必填写完整&quot;); return; &#125; &#125; if(id.equals(&quot;&quot;))&#123; JOptionPane.showMessageDialog(null,&quot;图书编号不能为空&quot;); return; &#125; if(IfBookIdExit(id))&#123; JOptionPane.showMessageDialog(null,&quot;图书编号已存在&quot;); return; &#125; try&#123; SimpleDateFormat sdf=new SimpleDateFormat(&quot;yyyy-MM&quot;); sdf.parse(inputstring[6]); float price=Float.parseFloat(inputstring[7]); int stock= Integer.parseInt(inputstring[8]); int page=Integer.parseInt(inputstring[2]); String sql=&quot;insert into book(id,bookname,booktype,author,translator,publisher,publish_time,price,stock,page)&quot;; sql=sql+&quot;values(&#x27;&quot;+id+&quot;&#x27;,&#x27;&quot;+inputstring[1]+&quot;&#x27;,&#x27;&quot;+typestr+&quot;&#x27;,&#x27;&quot;+inputstring[3]+&quot;&#x27;,&#x27;&quot;+inputstring[4]+&quot;&#x27;,&#x27;&quot;; sql=sql+inputstring[5]+&quot;&#x27;,&#x27;&quot;+inputstring[6]+&quot;&#x27;,&quot;+price+&quot;,&quot;+stock+&quot;,&quot;+page+&quot;)&quot;; int i=DbOp.executeUpdate(sql); if(i==1)&#123; JOptionPane.showMessageDialog(null,&quot;图书添加成功！&quot;); clearAllText(); &#125; &#125;catch(ParseException e2)&#123; JOptionPane.showMessageDialog(null,&quot;出版时间格式错误，正确为（年-月）&quot;); &#125;catch(NumberFormatException e1)&#123; JOptionPane.showMessageDialog(null,&quot;库存数量，价格，页数错误，应为数字&quot;); &#125; &#125; public boolean IfBookIdExit(String id)&#123; boolean right=false; String sql=&quot;select*from book where id=&#x27;&quot;+id+&quot;&#x27;&quot;; ResultSet rs=DbOp.executeQuery(sql); try&#123; while(rs.next())&#123; right = true; &#125; //right = false; &#125;catch(SQLException e)&#123; JOptionPane.showMessageDialog(null,&quot;无法正常读取数据&quot;); &#125; return right; &#125; public void clearAllText()&#123; for(int i=0;i&lt;booktxt.length;i++)&#123; booktxt[i].setText(&quot;&quot;); &#125; &#125; public static void main(String[] args)&#123; new BookAdd(); &#125;&#125; 添加读者123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185package com.jason.frame;//com.jason.frame.ReaderAdd.javaimport java.awt.*;import java.awt.event.*;import java.sql.ResultSet;import java.sql.SQLException;import javax.swing.JOptionPane;public class ReaderAdd extends Frame&#123; Toolkit tool= getToolkit(); String url=&quot;src/bookbk.png&quot;; Image img=tool.getImage(url); public void paint(Graphics g)&#123; g.drawImage(img,0,0,this); &#125; public void clearAndSetReaderId()&#123; for(int j=0;j&lt;readertxt.length;j++)&#123; readertxt[j].setText(&quot;&quot;); &#125; String str=getInsertOrderedList(); readertxt[0].setEditable(false); readertxt[0].setText(str); &#125; String[] labelsign=&#123;&quot;读者编号&quot;,&quot;读者姓名&quot;,&quot;读者类别&quot;,&quot;读者性别&quot;,&quot;可借数量&quot;,&quot;可借天数&quot;&#125;; Label[] readerlb=new Label[6]; static TextField[] readertxt=new TextField[6]; Button querybtn,closebtn; static Choice readertype,readersex; public ReaderAdd()&#123; setLayout(null); setSize(500,200);setResizable(false); setTitle(&quot;添加新读者&quot;); String str=getInsertOrderedList(); int lx=50,ly=50; for(int i=0;i&lt;readertxt.length;i++)&#123; if(lx&gt;240)&#123; ly=ly+30; lx=50; &#125; readerlb[i]=new Label(labelsign[i]); readertxt[i]=new TextField(); readerlb[i].setBounds(lx,ly,50,20); readertxt[i].setBounds(lx+60,ly,100,20); lx=lx+190; add(readerlb[i]); add(readertxt[i]); &#125; readertxt[0].setEditable(false); readertxt[0].setText(str); readertype=new Choice(); readertype.add(&quot;教师&quot;); readertype.add(&quot;学生&quot;); readertype.add(&quot;作家&quot;); readertype.add(&quot;职工&quot;); readertype.add(&quot;其他&quot;); readersex=new Choice(); readersex.add(&quot;男&quot;); readersex.add(&quot;女&quot;); readertxt[2].setVisible(false); readertxt[3].setVisible(false); readertype.setBounds(110,80,100,20); readersex.setBounds(300,80,100,20); add(readertype);add(readersex); querybtn=new Button(&quot;Add&quot;); closebtn=new Button(&quot;Close&quot;); querybtn.setBounds(130,140,50,20); closebtn.setBounds(310,140,50,20); add(querybtn);add(closebtn); querybtn.addActionListener(new ActionListener()&#123; public void actionPerformed(ActionEvent e)&#123; updateActionPerformed(e); clearAndSetReaderId(); &#125; &#125;); closebtn.addActionListener(new ActionListener()&#123; public void actionPerformed(ActionEvent e)&#123; DbOp.close(); dispose(); //System.exit(0); &#125; &#125;); addWindowListener(new WindowAdapter()&#123; public void windowClosing(WindowEvent e)&#123; DbOp.close(); dispose(); //System.exit(0); &#125; &#125;); setLocationRelativeTo(null); setVisible(true); &#125; public static String getInsertOrderedList()&#123; String returnstring=&quot;&quot;; String sql=&quot;select * from reader&quot;; try&#123; int count=0; ResultSet rs=DbOp.executeQuery(sql); while(rs.next())&#123; count++; &#125; String[] allid=new String[count]; int[] intofid=new int[count]; int i=0; ResultSet rs1=DbOp.executeQuery(sql); while(rs1.next())&#123; allid[i]=rs1.getString(&quot;id&quot;); intofid[i]=Integer.parseInt(allid[i]); i++; &#125; int temp=-1; for(int j=0;j&lt;intofid.length;j++)&#123; if(intofid[j]&gt;temp)&#123; temp=intofid[j]; &#125; &#125; returnstring=String.valueOf(temp+1); int len=returnstring.length(); for(int f=0;f&lt;5-len;f++)&#123; returnstring=&quot;0&quot;+returnstring; &#125; DbOp.close(); &#125;catch(SQLException ee)&#123; &#125; return returnstring; &#125; public static void updateActionPerformed(ActionEvent e)&#123; String[] readerstr=new String[6]; readerstr[2]=readertype.getSelectedItem().toString(); readerstr[3]=readersex.getSelectedItem().toString(); for(int i=0;i&lt;readerstr.length;i++)&#123; if(i==2||i==3)&#123; continue; &#125; readerstr[i]=readertxt[i].getText(); if(readerstr[i].equals(&quot;&quot;))&#123; JOptionPane.showMessageDialog(null,&quot;请务必填写完整&quot;); return; &#125; &#125; String id=readerstr[0]; if(IfReaderExit(id))&#123; JOptionPane.showMessageDialog(null,&quot;该读者已经存在！&quot;); return; &#125; try&#123; int max_num=Integer.parseInt(readerstr[4]); int days_num=Integer.parseInt(readerstr[5]); String sql=&quot;insert into reader(id,readername,readertype,sex,max_num,days_num) values(&#x27;&quot;; sql=sql+id+&quot;&#x27;,&#x27;&quot;+readerstr[1]+&quot;&#x27;,&#x27;&quot;+readerstr[2]+&quot;&#x27;,&#x27;&quot;+readerstr[3]+&quot;&#x27;,&quot;+max_num+&quot;,&quot;+days_num+&quot;)&quot;; int a=DbOp.executeUpdate(sql); if(a==1)&#123; JOptionPane.showMessageDialog(null,&quot;读者添加成功&quot;); &#125;else&#123; JOptionPane.showMessageDialog(null,&quot;读者添加失败&quot;); &#125; DbOp.close(); &#125;catch(NumberFormatException e1)&#123; JOptionPane.showMessageDialog(null,&quot;可借数量和可借天数必须是整数&quot;); &#125; &#125; public static boolean IfReaderExit(String id)&#123; String sql=&quot;select * from reader where id=&#x27;&quot;+id+&quot;&#x27;&quot;; try&#123; ResultSet rs=DbOp.executeQuery(sql); if(rs.next())&#123; return true; &#125;else&#123; return false; &#125; &#125;catch(SQLException e)&#123; JOptionPane.showMessageDialog(null,&quot;查询数据错误&quot;); &#125; return false; &#125; public static void main(String[] args)&#123; new ReaderAdd(); &#125;&#125; 修改密码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798package com.jason.frame;//com.jason.frame.ChangePassWord.java;import java.awt.*;import java.awt.event.*;import java.sql.ResultSet;import java.sql.SQLException;import javax.swing.JOptionPane;public class ChangePassWord extends Frame&#123; String[] sign=&#123;&quot;旧密码：&quot;,&quot;设定新密码：&quot;,&quot;重复新密码：&quot;&#125;; Label[] textlb=new Label[3]; TextField[] passtxt=new TextField[3]; Button reset=new Button(&quot;新密码设定&quot;); public ChangePassWord()&#123; setTitle(&quot;修改密码&quot;); setSize(300,250); setLayout(null); setResizable(false); int y=50; for(int i=0;i&lt;3;i++)&#123; textlb[i]=new Label(sign[i]); passtxt[i]=new TextField(); textlb[i].setBounds(50,y,80,20); passtxt[i].setBounds(130,y,100,20); passtxt[i].setEchoChar(&#x27;●&#x27;); add(textlb[i]);add(passtxt[i]); y=y+50; &#125; reset.setBounds(110,200,80,20); add(reset); setLocationRelativeTo(null); reset.addActionListener(new ActionListener()&#123; public void actionPerformed(ActionEvent e)&#123; setNewPassWord(e); &#125; &#125;); addWindowListener(new WindowAdapter()&#123; public void windowClosing(WindowEvent e)&#123; System.exit(0); &#125; &#125;); setVisible(true); &#125; public void setNewPassWord(ActionEvent e)&#123; String[] password=new String[3]; String sql; for (int i=0;i&lt;password.length;i++)&#123; password[i]=passtxt[i].getText(); &#125; if(!password[0].equals(&quot;&quot;))&#123; sql=&quot;select * from user where username=&#x27;&quot;+GlobalVar.login_user+&quot;&#x27;&quot;; &#125;else&#123; JOptionPane.showMessageDialog(null,&quot;Empty String Just Input&quot;); return; &#125; if(password[0].equals(password[1]))&#123; &#125; try&#123; ResultSet rs=DbOp.executeQuery(sql); while(rs.next())&#123; if(password[0].equals(rs.getString(&quot;password&quot;)))&#123; &#125;else&#123; JOptionPane.showMessageDialog(null,&quot;Sorroy It&#x27;s Fail It&#x27;s not Old PassWord&quot;); return; &#125; &#125; &#125;catch(SQLException ee)&#123; JOptionPane.showMessageDialog(null,&quot;Sorroy It&#x27;s Fail Some Data Wrong&quot;); return; &#125; if(password[0].equals(password[1]))&#123; JOptionPane.showMessageDialog(null,&quot;Sorroy It&#x27;s Fail Same From Old Password&quot;); return; &#125; if(!password[1].equals(password[2]))&#123; JOptionPane.showMessageDialog(null,&quot;Sorroy It&#x27;s Fail Again Password wrong&quot;); return; &#125; if(password[1].equals(&quot;&quot;)&amp;&amp;password[1].equals(&quot;&quot;))&#123; JOptionPane.showMessageDialog(null,&quot;Sorroy It&#x27;s Fail one Empty&quot;); return; &#125; sql=&quot;&quot;; sql=&quot;update user set password=&#x27;&quot;+password[1]+&quot;&#x27;where username=&#x27;&quot;+GlobalVar.login_user+&quot;&#x27;&quot;; int da=DbOp.executeUpdate(sql); if(da==1)&#123; JOptionPane.showMessageDialog(null,&quot;yet It&#x27;s Successed Update PassWord&quot;); &#125;else&#123; JOptionPane.showMessageDialog(null,&quot;Sorroy It&#x27;s Fail try again&quot;); &#125; &#125; public static void main(String[] args)&#123; new ChangePassWord(); &#125;&#125; 06 源码下载关注公众号【C you again】，回复“Java GUI图书管理系统”免费领取。亦可直接扫描主页二维码关注，回复“Java GUI图书管理系统”免费领取，点此打开个人主页 说明：此源码来源于网络，若有侵权，请联系删除！！","categories":[{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"图书管理系统","slug":"图书管理系统","permalink":"https://cyouagain.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]}],"categories":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/categories/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"},{"name":"浙大版《C语言程序设计（第3版）》题目集","slug":"浙大版《C语言程序设计（第3版）》题目集","permalink":"https://cyouagain.cn/categories/%E6%B5%99%E5%A4%A7%E7%89%88%E3%80%8AC%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E9%A2%98%E7%9B%AE%E9%9B%86/"},{"name":"IT技术圈","slug":"IT技术圈","permalink":"https://cyouagain.cn/categories/IT%E6%8A%80%E6%9C%AF%E5%9C%88/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/categories/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"}],"tags":[{"name":"IDEA激活码","slug":"IDEA激活码","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E7%A0%81/"},{"name":"IDEA破解教程","slug":"IDEA破解教程","permalink":"https://cyouagain.cn/tags/IDEA%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/"},{"name":"IDEA激活教程","slug":"IDEA激活教程","permalink":"https://cyouagain.cn/tags/IDEA%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"},{"name":"C语言","slug":"C语言","permalink":"https://cyouagain.cn/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"程序设计","slug":"程序设计","permalink":"https://cyouagain.cn/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"},{"name":"编程","slug":"编程","permalink":"https://cyouagain.cn/tags/%E7%BC%96%E7%A8%8B/"},{"name":"源码分享","slug":"源码分享","permalink":"https://cyouagain.cn/tags/%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"系统源码","slug":"系统源码","permalink":"https://cyouagain.cn/tags/%E7%B3%BB%E7%BB%9F%E6%BA%90%E7%A0%81/"},{"name":"SEO网站优化","slug":"SEO网站优化","permalink":"https://cyouagain.cn/tags/SEO%E7%BD%91%E7%AB%99%E4%BC%98%E5%8C%96/"},{"name":"图书管理系统","slug":"图书管理系统","permalink":"https://cyouagain.cn/tags/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"HTML5小游戏","slug":"HTML5小游戏","permalink":"https://cyouagain.cn/tags/HTML5%E5%B0%8F%E6%B8%B8%E6%88%8F/"},{"name":"贪吃蛇","slug":"贪吃蛇","permalink":"https://cyouagain.cn/tags/%E8%B4%AA%E5%90%83%E8%9B%87/"},{"name":"机票管理系统","slug":"机票管理系统","permalink":"https://cyouagain.cn/tags/%E6%9C%BA%E7%A5%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"后端开发","slug":"后端开发","permalink":"https://cyouagain.cn/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"},{"name":"权限管理系统","slug":"权限管理系统","permalink":"https://cyouagain.cn/tags/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"宿舍管理系统","slug":"宿舍管理系统","permalink":"https://cyouagain.cn/tags/%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"寝室管理系统","slug":"寝室管理系统","permalink":"https://cyouagain.cn/tags/%E5%AF%9D%E5%AE%A4%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"客户管理系统","slug":"客户管理系统","permalink":"https://cyouagain.cn/tags/%E5%AE%A2%E6%88%B7%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"人力资源管理系统","slug":"人力资源管理系统","permalink":"https://cyouagain.cn/tags/%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"销存管理系统","slug":"销存管理系统","permalink":"https://cyouagain.cn/tags/%E9%94%80%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"},{"name":"ERP管理系统","slug":"ERP管理系统","permalink":"https://cyouagain.cn/tags/ERP%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"}]}